/*! For license information please see contentscript.js.LICENSE.txt */
(() => {
  var __webpack_modules__ = {
    6519: module => {
      "use strict";
      var node = {
        kind: "InlineDataFragment",
        name: "CodeSyncFile_data",
        hash: "85c303cf29fb719825b05ef6e3daf967"
      };
      module.exports = node;
    },
    111: module => {
      "use strict";
      var node = {
        kind: "InlineDataFragment",
        name: "ContextMenus_data",
        hash: "c7872dd745e21a3bfbe63db07cd3b5fe"
      };
      module.exports = node;
    },
    9624: module => {
      "use strict";
      var node = {
        kind: "InlineDataFragment",
        name: "Convert404ToInvite_data",
        hash: "cdebde07662944b4b24b0aa378212f99"
      };
      module.exports = node;
    },
    4762: module => {
      "use strict";
      var node = {
        argumentDefinitions: [],
        kind: "Fragment",
        metadata: null,
        name: "DiffTrainCommit_commit",
        selections: [ {
          alias: "diffTrainDiff",
          args: null,
          concreteType: "PhabricatorDiff",
          kind: "LinkedField",
          name: "diff_train_linked_diff",
          plural: !1,
          selections: [ {
            alias: null,
            args: null,
            kind: "ScalarField",
            name: "uri",
            storageKey: null
          }, {
            alias: "numberWithPrefix",
            args: null,
            kind: "ScalarField",
            name: "number_with_prefix",
            storageKey: null
          }, {
            alias: "isClosed",
            args: null,
            kind: "ScalarField",
            name: "is_closed",
            storageKey: null
          }, {
            alias: "status",
            args: null,
            kind: "ScalarField",
            name: "phabricator_diff_status_enum",
            storageKey: null
          }, {
            alias: "tags",
            args: null,
            concreteType: "PhabricatorDiffToTagsConnection",
            kind: "LinkedField",
            name: "phabricator_diff_tags",
            plural: !1,
            selections: [ {
              alias: null,
              args: null,
              concreteType: "InternalTextTag",
              kind: "LinkedField",
              name: "nodes",
              plural: !0,
              selections: [ {
                alias: null,
                args: null,
                kind: "ScalarField",
                name: "id",
                storageKey: null
              } ],
              storageKey: null
            } ],
            storageKey: null
          } ],
          storageKey: null
        }, {
          alias: "diffTrainSkips",
          args: null,
          concreteType: "XFBOpensourceGitHubCommitDiffTrainSkipsConnection",
          kind: "LinkedField",
          name: "diff_train_skips",
          plural: !1,
          selections: [ {
            alias: null,
            args: null,
            concreteType: "XFBOpensourceDiffTrainSkippedCommit",
            kind: "LinkedField",
            name: "nodes",
            plural: !0,
            selections: [ {
              alias: null,
              args: null,
              kind: "ScalarField",
              name: "explanation",
              storageKey: null
            } ],
            storageKey: null
          } ],
          storageKey: null
        } ],
        type: "XFBOpensourceGitHubCommit",
        abstractKey: null,
        hash: "deeea894ea2865d44f4b8cb5edffde07"
      };
      module.exports = node;
    },
    5456: module => {
      "use strict";
      var node = {
        kind: "InlineDataFragment",
        name: "DiffTrainCommit_data",
        hash: "25170a5230caec6098a1103d77b52a75"
      };
      module.exports = node;
    },
    2415: module => {
      "use strict";
      var node = {
        kind: "InlineDataFragment",
        name: "DiffTrainPullRequest_data",
        hash: "037be675eb548471ca1575baa66b1bb8"
      };
      module.exports = node;
    },
    2282: module => {
      "use strict";
      var v0, v1, v2, v3, v4, v5, v6, v7, v8, v9, v10, v11, v12, v13, v14, v15, v16, v17, v18, v19, v20, v21, v22, v23, v24, v25, v26, v27, node = {
        fragment: {
          argumentDefinitions: v0 = [ {
            defaultValue: null,
            kind: "LocalArgument",
            name: "uri"
          } ],
          kind: "Fragment",
          metadata: null,
          name: "FaceHubPageQuery",
          selections: [ {
            alias: "payload",
            args: v1 = [ {
              kind: "Variable",
              name: "uri",
              variableName: "uri"
            } ],
            concreteType: "XFBOpensourceURIResolverPayload",
            kind: "LinkedField",
            name: "opensource_resolve_uri",
            plural: !1,
            selections: [ {
              kind: "InlineDataFragmentSpread",
              name: "NavHeader_data",
              selections: [ {
                alias: "repo",
                args: null,
                concreteType: "XFBOpensourceGitHubRepository",
                kind: "LinkedField",
                name: "github_repo",
                plural: !1,
                selections: [ v2 = {
                  alias: null,
                  args: null,
                  kind: "ScalarField",
                  name: "url",
                  storageKey: null
                }, v3 = {
                  alias: "settingsPageIframeUri",
                  args: null,
                  kind: "ScalarField",
                  name: "settings_page_iframe_uri",
                  storageKey: null
                }, v4 = {
                  alias: "isManagedByMeta",
                  args: null,
                  kind: "ScalarField",
                  name: "is_managed_by_meta",
                  storageKey: null
                }, v5 = {
                  alias: "githubUiNotices",
                  args: null,
                  concreteType: "XFBOpensourceGitHubRepoFaceHubNotice",
                  kind: "LinkedField",
                  name: "github_ui_notices",
                  plural: !0,
                  selections: [ {
                    alias: null,
                    args: null,
                    kind: "ScalarField",
                    name: "message",
                    storageKey: null
                  }, {
                    alias: null,
                    args: null,
                    kind: "ScalarField",
                    name: "href",
                    storageKey: null
                  }, {
                    alias: null,
                    args: null,
                    kind: "ScalarField",
                    name: "severity",
                    storageKey: null
                  }, {
                    alias: "startTimestamp",
                    args: null,
                    kind: "ScalarField",
                    name: "start_timestamp",
                    storageKey: null
                  }, {
                    alias: "endTimestamp",
                    args: null,
                    kind: "ScalarField",
                    name: "end_timestamp",
                    storageKey: null
                  } ],
                  storageKey: null
                } ],
                storageKey: null
              }, {
                alias: "contributorIndividual",
                args: null,
                concreteType: "XFBOpensourceContributor",
                kind: "LinkedField",
                name: "contributor_individual",
                plural: !1,
                selections: [ v6 = {
                  alias: "internalUrl",
                  args: null,
                  kind: "ScalarField",
                  name: "internal_url",
                  storageKey: null
                } ],
                storageKey: null
              }, {
                alias: "team",
                args: null,
                concreteType: "XFBOpensourceGitHubTeam",
                kind: "LinkedField",
                name: "github_team",
                plural: !1,
                selections: [ v2 ],
                storageKey: null
              } ],
              args: null,
              argumentDefinitions: []
            }, {
              kind: "InlineDataFragmentSpread",
              name: "PullRequestQuickAccept_data",
              selections: [ {
                alias: "pr",
                args: null,
                concreteType: "XFBOpensourceGitHubPullRequest",
                kind: "LinkedField",
                name: "github_pull_request",
                plural: !1,
                selections: [ {
                  alias: "phabricatorDiff",
                  args: null,
                  concreteType: "PhabricatorDiff",
                  kind: "LinkedField",
                  name: "phabricator_diff",
                  plural: !1,
                  selections: v8 = [ v7 = {
                    alias: null,
                    args: null,
                    kind: "ScalarField",
                    name: "__typename",
                    storageKey: null
                  } ],
                  storageKey: null
                } ],
                storageKey: null
              }, {
                args: null,
                kind: "FragmentSpread",
                name: "PullRequestQuickAccept_payload"
              } ],
              args: null,
              argumentDefinitions: []
            }, {
              kind: "InlineDataFragmentSpread",
              name: "PullRequestActions_data",
              selections: [ {
                alias: "pr",
                args: null,
                concreteType: "XFBOpensourceGitHubPullRequest",
                kind: "LinkedField",
                name: "github_pull_request",
                plural: !1,
                selections: [ {
                  alias: null,
                  args: null,
                  concreteType: "XFBOpensourceGitHubIssue",
                  kind: "LinkedField",
                  name: "issue",
                  plural: !1,
                  selections: [ v11 = {
                    alias: null,
                    args: null,
                    concreteType: "XFBOpensourceIssueLabel",
                    kind: "LinkedField",
                    name: "labels",
                    plural: !0,
                    selections: v10 = [ v9 = {
                      alias: null,
                      args: null,
                      kind: "ScalarField",
                      name: "name",
                      storageKey: null
                    } ],
                    storageKey: null
                  } ],
                  storageKey: null
                }, v12 = {
                  alias: "isImportable",
                  args: null,
                  kind: "ScalarField",
                  name: "is_importable",
                  storageKey: null
                }, v13 = {
                  alias: "isClosed",
                  args: null,
                  kind: "ScalarField",
                  name: "is_closed",
                  storageKey: null
                }, v14 = {
                  alias: "baseRef",
                  args: null,
                  kind: "ScalarField",
                  name: "base_ref",
                  storageKey: null
                } ],
                storageKey: null
              }, {
                alias: "repo",
                args: null,
                concreteType: "XFBOpensourceGitHubRepository",
                kind: "LinkedField",
                name: "github_repo",
                plural: !1,
                selections: [ v15 = {
                  alias: "isDiffTrainSetup",
                  args: null,
                  kind: "ScalarField",
                  name: "is_diff_train_setup",
                  storageKey: null
                }, {
                  alias: "codesyncConfigs",
                  args: null,
                  concreteType: "XFBOpensourceCodeSyncConfig",
                  kind: "LinkedField",
                  name: "codesync_configs",
                  plural: !0,
                  selections: v8,
                  storageKey: null
                } ],
                storageKey: null
              }, {
                args: null,
                kind: "FragmentSpread",
                name: "PullRequestActions_payload"
              }, {
                args: null,
                kind: "FragmentSpread",
                name: "PullRequestActions_importButtonPayload"
              } ],
              args: null,
              argumentDefinitions: []
            }, {
              kind: "InlineDataFragmentSpread",
              name: "ContextMenus_data",
              selections: [ v17 = {
                alias: null,
                args: null,
                concreteType: "XFBOpensourceURIWithLabel",
                kind: "LinkedField",
                name: "uris",
                plural: !0,
                selections: [ {
                  alias: null,
                  args: null,
                  kind: "ScalarField",
                  name: "label",
                  storageKey: null
                }, v16 = {
                  alias: null,
                  args: null,
                  kind: "ScalarField",
                  name: "uri",
                  storageKey: null
                } ],
                storageKey: null
              } ],
              args: null,
              argumentDefinitions: []
            }, {
              kind: "InlineDataFragmentSpread",
              name: "Convert404ToInvite_data",
              selections: [ {
                alias: "repo",
                args: null,
                concreteType: "XFBOpensourceGitHubRepository",
                kind: "LinkedField",
                name: "github_repo",
                plural: !1,
                selections: [ v18 = {
                  alias: "viewerExpectedAccessType",
                  args: null,
                  kind: "ScalarField",
                  name: "viewer_expected_access_type",
                  storageKey: null
                }, v19 = {
                  alias: "contributorUrl",
                  args: null,
                  kind: "ScalarField",
                  name: "contributor_url",
                  storageKey: null
                }, v20 = {
                  alias: null,
                  args: null,
                  kind: "ScalarField",
                  name: "owner",
                  storageKey: null
                } ],
                storageKey: null
              } ],
              args: null,
              argumentDefinitions: []
            }, {
              kind: "InlineDataFragmentSpread",
              name: "CodeSyncFile_data",
              selections: [ v21 = {
                alias: "file",
                args: null,
                concreteType: "XFBOpensourceGitHubRepoFileReference",
                kind: "LinkedField",
                name: "github_file",
                plural: !1,
                selections: [ {
                  alias: "internalUri",
                  args: null,
                  kind: "ScalarField",
                  name: "internal_uri",
                  storageKey: null
                } ],
                storageKey: null
              } ],
              args: null,
              argumentDefinitions: []
            }, {
              kind: "InlineDataFragmentSpread",
              name: "DiffTrainCommit_data",
              selections: [ {
                alias: "commit",
                args: null,
                concreteType: "XFBOpensourceGitHubCommit",
                kind: "LinkedField",
                name: "github_commit",
                plural: !1,
                selections: v22 = [ {
                  args: null,
                  kind: "FragmentSpread",
                  name: "DiffTrainCommit_commit"
                } ],
                storageKey: null
              }, {
                alias: "repo",
                args: null,
                concreteType: "XFBOpensourceGitHubRepository",
                kind: "LinkedField",
                name: "github_repo",
                plural: !1,
                selections: v23 = [ v15 ],
                storageKey: null
              } ],
              args: null,
              argumentDefinitions: []
            }, {
              kind: "InlineDataFragmentSpread",
              name: "DiffTrainPullRequest_data",
              selections: [ {
                alias: "pr",
                args: null,
                concreteType: "XFBOpensourceGitHubPullRequest",
                kind: "LinkedField",
                name: "github_pull_request",
                plural: !1,
                selections: [ {
                  alias: "closedByCommit",
                  args: null,
                  concreteType: "XFBOpensourceGitHubCommit",
                  kind: "LinkedField",
                  name: "closed_by_commit",
                  plural: !1,
                  selections: v22,
                  storageKey: null
                }, v24 = {
                  alias: "relevantCodesyncConfig",
                  args: null,
                  concreteType: "XFBOpensourceCodeSyncConfig",
                  kind: "LinkedField",
                  name: "relevant_codesync_config",
                  plural: !1,
                  selections: v23,
                  storageKey: null
                } ],
                storageKey: null
              } ],
              args: null,
              argumentDefinitions: []
            } ],
            storageKey: null
          } ],
          type: "Query",
          abstractKey: null
        },
        kind: "Request",
        operation: {
          argumentDefinitions: v0,
          kind: "Operation",
          name: "FaceHubPageQuery",
          selections: [ {
            alias: "payload",
            args: v1,
            concreteType: "XFBOpensourceURIResolverPayload",
            kind: "LinkedField",
            name: "opensource_resolve_uri",
            plural: !1,
            selections: [ {
              alias: "repo",
              args: null,
              concreteType: "XFBOpensourceGitHubRepository",
              kind: "LinkedField",
              name: "github_repo",
              plural: !1,
              selections: [ v2, v3, v4, v5, v25 = {
                alias: null,
                args: null,
                kind: "ScalarField",
                name: "id",
                storageKey: null
              }, v15, {
                alias: "codesyncConfigs",
                args: null,
                concreteType: "XFBOpensourceCodeSyncConfig",
                kind: "LinkedField",
                name: "codesync_configs",
                plural: !0,
                selections: [ v7, v26 = {
                  alias: "metaInternalRepo",
                  args: null,
                  concreteType: "XFBOpensourceCodeSyncMetaInternalRepo",
                  kind: "LinkedField",
                  name: "meta_internal_repo",
                  plural: !1,
                  selections: v10,
                  storageKey: null
                } ],
                storageKey: null
              }, v18, v19, v20 ],
              storageKey: null
            }, {
              alias: "contributorIndividual",
              args: null,
              concreteType: "XFBOpensourceContributor",
              kind: "LinkedField",
              name: "contributor_individual",
              plural: !1,
              selections: [ v6, v25 ],
              storageKey: null
            }, {
              alias: "team",
              args: null,
              concreteType: "XFBOpensourceGitHubTeam",
              kind: "LinkedField",
              name: "github_team",
              plural: !1,
              selections: [ v2, v25 ],
              storageKey: null
            }, {
              alias: "pr",
              args: null,
              concreteType: "XFBOpensourceGitHubPullRequest",
              kind: "LinkedField",
              name: "github_pull_request",
              plural: !1,
              selections: [ {
                alias: "phabricatorDiff",
                args: null,
                concreteType: "PhabricatorDiff",
                kind: "LinkedField",
                name: "phabricator_diff",
                plural: !1,
                selections: [ v7, v25, {
                  alias: null,
                  args: null,
                  kind: "ScalarField",
                  name: "number",
                  storageKey: null
                }, v2 ],
                storageKey: null
              }, v25, {
                alias: "checkRuns",
                args: [ {
                  kind: "Literal",
                  name: "include_internal",
                  value: !0
                } ],
                concreteType: "XFBOpensourceGitHubCheckRun",
                kind: "LinkedField",
                name: "test_check_runs",
                plural: !0,
                selections: [ {
                  alias: null,
                  args: null,
                  kind: "ScalarField",
                  name: "conclusion",
                  storageKey: null
                }, v9, v25 ],
                storageKey: "test_check_runs(include_internal:true)"
              }, {
                alias: null,
                args: null,
                concreteType: "XFBOpensourceGitHubIssue",
                kind: "LinkedField",
                name: "issue",
                plural: !1,
                selections: [ v11, v25 ],
                storageKey: null
              }, v12, v13, v14, {
                alias: "importToDiffUri",
                args: null,
                kind: "ScalarField",
                name: "import_to_diff_uri",
                storageKey: null
              }, {
                alias: "codesyncConfig",
                args: null,
                concreteType: "XFBOpensourceCodeSyncConfig",
                kind: "LinkedField",
                name: "relevant_codesync_config",
                plural: !1,
                selections: [ v26 ],
                storageKey: null
              }, {
                alias: "closedByCommit",
                args: null,
                concreteType: "XFBOpensourceGitHubCommit",
                kind: "LinkedField",
                name: "closed_by_commit",
                plural: !1,
                selections: v27 = [ {
                  alias: "diffTrainDiff",
                  args: null,
                  concreteType: "PhabricatorDiff",
                  kind: "LinkedField",
                  name: "diff_train_linked_diff",
                  plural: !1,
                  selections: [ v16, {
                    alias: "numberWithPrefix",
                    args: null,
                    kind: "ScalarField",
                    name: "number_with_prefix",
                    storageKey: null
                  }, v13, {
                    alias: "status",
                    args: null,
                    kind: "ScalarField",
                    name: "phabricator_diff_status_enum",
                    storageKey: null
                  }, {
                    alias: "tags",
                    args: null,
                    concreteType: "PhabricatorDiffToTagsConnection",
                    kind: "LinkedField",
                    name: "phabricator_diff_tags",
                    plural: !1,
                    selections: [ {
                      alias: null,
                      args: null,
                      concreteType: "InternalTextTag",
                      kind: "LinkedField",
                      name: "nodes",
                      plural: !0,
                      selections: [ v25 ],
                      storageKey: null
                    } ],
                    storageKey: null
                  }, v25 ],
                  storageKey: null
                }, {
                  alias: "diffTrainSkips",
                  args: null,
                  concreteType: "XFBOpensourceGitHubCommitDiffTrainSkipsConnection",
                  kind: "LinkedField",
                  name: "diff_train_skips",
                  plural: !1,
                  selections: [ {
                    alias: null,
                    args: null,
                    concreteType: "XFBOpensourceDiffTrainSkippedCommit",
                    kind: "LinkedField",
                    name: "nodes",
                    plural: !0,
                    selections: [ {
                      alias: null,
                      args: null,
                      kind: "ScalarField",
                      name: "explanation",
                      storageKey: null
                    }, v25 ],
                    storageKey: null
                  } ],
                  storageKey: null
                }, v25 ],
                storageKey: null
              }, v24 ],
              storageKey: null
            }, v17, v21, {
              alias: "commit",
              args: null,
              concreteType: "XFBOpensourceGitHubCommit",
              kind: "LinkedField",
              name: "github_commit",
              plural: !1,
              selections: v27,
              storageKey: null
            } ],
            storageKey: null
          } ]
        },
        params: {
          id: "9743796552337108",
          metadata: {},
          name: "FaceHubPageQuery",
          operationKind: "query",
          text: null
        }
      };
      node.hash = "077419c67ce213fb84117be56c9b04ee", module.exports = node;
    },
    1058: module => {
      "use strict";
      var v0, v1, node = {
        fragment: {
          argumentDefinitions: v0 = [ {
            defaultValue: null,
            kind: "LocalArgument",
            name: "input"
          } ],
          kind: "Fragment",
          metadata: null,
          name: "FalcoLoggerMutation",
          selections: v1 = [ {
            alias: null,
            args: [ {
              kind: "Variable",
              name: "input",
              variableName: "input"
            } ],
            concreteType: "XFBOpensourceFacehubLogEventResponsePayload",
            kind: "LinkedField",
            name: "xfb_opensource_facehub_log_event",
            plural: !1,
            selections: [ {
              alias: null,
              args: null,
              kind: "ScalarField",
              name: "__typename",
              storageKey: null
            } ],
            storageKey: null
          } ],
          type: "Mutation",
          abstractKey: null
        },
        kind: "Request",
        operation: {
          argumentDefinitions: v0,
          kind: "Operation",
          name: "FalcoLoggerMutation",
          selections: v1
        },
        params: {
          id: "5434585826649292",
          metadata: {},
          name: "FalcoLoggerMutation",
          operationKind: "mutation",
          text: null
        }
      };
      node.hash = "caebdfc9d32a7fe2eda9bef5932cd5c4", module.exports = node;
    },
    1135: module => {
      "use strict";
      var node = {
        kind: "InlineDataFragment",
        name: "NavHeader_data",
        hash: "785b807d9ec2465e1b95b7bf551aba62"
      };
      module.exports = node;
    },
    2085: module => {
      "use strict";
      var v0, v1, v2, v3, v4, v5, v6, v7, node = {
        fragment: {
          argumentDefinitions: v0 = [ {
            defaultValue: null,
            kind: "LocalArgument",
            name: "input"
          } ],
          kind: "Fragment",
          metadata: null,
          name: "PullRequestActionsSyncPRMutation",
          selections: [ {
            alias: "sync",
            args: v1 = [ {
              kind: "Variable",
              name: "data",
              variableName: "input"
            } ],
            concreteType: "SyncPullRequestFromGithubResponsePayload",
            kind: "LinkedField",
            name: "sync_pull_request_from_github",
            plural: !1,
            selections: [ {
              alias: "pr",
              args: null,
              concreteType: "XFBOpensourceGitHubPullRequest",
              kind: "LinkedField",
              name: "pull_request",
              plural: !1,
              selections: [ {
                alias: null,
                args: null,
                concreteType: "XFBOpensourceGitHubIssue",
                kind: "LinkedField",
                name: "issue",
                plural: !1,
                selections: [ v2 = {
                  alias: null,
                  args: null,
                  concreteType: "XFBOpensourceIssueLabel",
                  kind: "LinkedField",
                  name: "labels",
                  plural: !0,
                  selections: [ {
                    alias: null,
                    args: null,
                    kind: "ScalarField",
                    name: "name",
                    storageKey: null
                  } ],
                  storageKey: null
                } ],
                storageKey: null
              }, v3 = {
                alias: "isImportable",
                args: null,
                kind: "ScalarField",
                name: "is_importable",
                storageKey: null
              }, v4 = {
                alias: "importToDiffUri",
                args: null,
                kind: "ScalarField",
                name: "import_to_diff_uri",
                storageKey: null
              }, v5 = {
                alias: "isClosed",
                args: null,
                kind: "ScalarField",
                name: "is_closed",
                storageKey: null
              }, v6 = {
                alias: "baseRef",
                args: null,
                kind: "ScalarField",
                name: "base_ref",
                storageKey: null
              } ],
              storageKey: null
            } ],
            storageKey: null
          } ],
          type: "Mutation",
          abstractKey: null
        },
        kind: "Request",
        operation: {
          argumentDefinitions: v0,
          kind: "Operation",
          name: "PullRequestActionsSyncPRMutation",
          selections: [ {
            alias: "sync",
            args: v1,
            concreteType: "SyncPullRequestFromGithubResponsePayload",
            kind: "LinkedField",
            name: "sync_pull_request_from_github",
            plural: !1,
            selections: [ {
              alias: "pr",
              args: null,
              concreteType: "XFBOpensourceGitHubPullRequest",
              kind: "LinkedField",
              name: "pull_request",
              plural: !1,
              selections: [ {
                alias: null,
                args: null,
                concreteType: "XFBOpensourceGitHubIssue",
                kind: "LinkedField",
                name: "issue",
                plural: !1,
                selections: [ v2, v7 = {
                  alias: null,
                  args: null,
                  kind: "ScalarField",
                  name: "id",
                  storageKey: null
                } ],
                storageKey: null
              }, v3, v4, v5, v6, v7 ],
              storageKey: null
            } ],
            storageKey: null
          } ]
        },
        params: {
          id: "4561653833879769",
          metadata: {},
          name: "PullRequestActionsSyncPRMutation",
          operationKind: "mutation",
          text: null
        }
      };
      node.hash = "8a775d747d4e0277a239a02d1ea4d893", module.exports = node;
    },
    4275: module => {
      "use strict";
      var node = {
        kind: "InlineDataFragment",
        name: "PullRequestActions_data",
        hash: "f219fd33ea06e4847ce2f8d0d231c7a3"
      };
      module.exports = node;
    },
    5442: module => {
      "use strict";
      var v0, v1, node = {
        argumentDefinitions: [],
        kind: "Fragment",
        metadata: null,
        name: "PullRequestActions_importButtonPayload",
        selections: [ {
          alias: "pr",
          args: null,
          concreteType: "XFBOpensourceGitHubPullRequest",
          kind: "LinkedField",
          name: "github_pull_request",
          plural: !1,
          selections: [ {
            alias: null,
            args: null,
            concreteType: "XFBOpensourceGitHubIssue",
            kind: "LinkedField",
            name: "issue",
            plural: !1,
            selections: [ {
              alias: null,
              args: null,
              concreteType: "XFBOpensourceIssueLabel",
              kind: "LinkedField",
              name: "labels",
              plural: !0,
              selections: v0 = [ {
                alias: null,
                args: null,
                kind: "ScalarField",
                name: "name",
                storageKey: null
              } ],
              storageKey: null
            } ],
            storageKey: null
          }, {
            alias: "isImportable",
            args: null,
            kind: "ScalarField",
            name: "is_importable",
            storageKey: null
          }, {
            alias: "importToDiffUri",
            args: null,
            kind: "ScalarField",
            name: "import_to_diff_uri",
            storageKey: null
          }, {
            alias: "isClosed",
            args: null,
            kind: "ScalarField",
            name: "is_closed",
            storageKey: null
          }, {
            alias: "baseRef",
            args: null,
            kind: "ScalarField",
            name: "base_ref",
            storageKey: null
          }, {
            alias: "codesyncConfig",
            args: null,
            concreteType: "XFBOpensourceCodeSyncConfig",
            kind: "LinkedField",
            name: "relevant_codesync_config",
            plural: !1,
            selections: v1 = [ {
              alias: "metaInternalRepo",
              args: null,
              concreteType: "XFBOpensourceCodeSyncMetaInternalRepo",
              kind: "LinkedField",
              name: "meta_internal_repo",
              plural: !1,
              selections: v0,
              storageKey: null
            } ],
            storageKey: null
          } ],
          storageKey: null
        }, {
          alias: "repo",
          args: null,
          concreteType: "XFBOpensourceGitHubRepository",
          kind: "LinkedField",
          name: "github_repo",
          plural: !1,
          selections: [ {
            alias: null,
            args: null,
            kind: "ScalarField",
            name: "id",
            storageKey: null
          }, {
            alias: "codesyncConfigs",
            args: null,
            concreteType: "XFBOpensourceCodeSyncConfig",
            kind: "LinkedField",
            name: "codesync_configs",
            plural: !0,
            selections: v1,
            storageKey: null
          } ],
          storageKey: null
        } ],
        type: "XFBOpensourceURIResolverPayload",
        abstractKey: null
      };
      node.hash = "eb8fcb181259875eab4a74e2eddba645", module.exports = node;
    },
    8342: module => {
      "use strict";
      var node = {
        argumentDefinitions: [],
        kind: "Fragment",
        metadata: null,
        name: "PullRequestActions_payload",
        selections: [ {
          args: null,
          kind: "FragmentSpread",
          name: "PullRequestActions_importButtonPayload"
        } ],
        type: "XFBOpensourceURIResolverPayload",
        abstractKey: null,
        hash: "011ed6c2341a788c701f23fc810e840b"
      };
      module.exports = node;
    },
    8913: module => {
      "use strict";
      var v0, v1, node = {
        fragment: {
          argumentDefinitions: v0 = [ {
            defaultValue: null,
            kind: "LocalArgument",
            name: "input"
          } ],
          kind: "Fragment",
          metadata: null,
          name: "PullRequestQuickAcceptDiffMutation",
          selections: v1 = [ {
            alias: null,
            args: [ {
              kind: "Variable",
              name: "data",
              variableName: "input"
            } ],
            concreteType: "AcceptImportedDiffResponsePayload",
            kind: "LinkedField",
            name: "accept_imported_diff",
            plural: !1,
            selections: [ {
              alias: null,
              args: null,
              kind: "ScalarField",
              name: "__typename",
              storageKey: null
            } ],
            storageKey: null
          } ],
          type: "Mutation",
          abstractKey: null
        },
        kind: "Request",
        operation: {
          argumentDefinitions: v0,
          kind: "Operation",
          name: "PullRequestQuickAcceptDiffMutation",
          selections: v1
        },
        params: {
          id: "5375464422554025",
          metadata: {},
          name: "PullRequestQuickAcceptDiffMutation",
          operationKind: "mutation",
          text: null
        }
      };
      node.hash = "817fe8690dd1aad47bdfdfbb211f35d9", module.exports = node;
    },
    5810: module => {
      "use strict";
      var node = {
        kind: "InlineDataFragment",
        name: "PullRequestQuickAccept_data",
        hash: "49bf66d0cce26c5be8c784e866a311b1"
      };
      module.exports = node;
    },
    1997: module => {
      "use strict";
      var node = {
        argumentDefinitions: [],
        kind: "Fragment",
        metadata: null,
        name: "PullRequestQuickAccept_payload",
        selections: [ {
          alias: "repo",
          args: null,
          concreteType: "XFBOpensourceGitHubRepository",
          kind: "LinkedField",
          name: "github_repo",
          plural: !1,
          selections: [ {
            alias: "isDiffTrainSetup",
            args: null,
            kind: "ScalarField",
            name: "is_diff_train_setup",
            storageKey: null
          } ],
          storageKey: null
        }, {
          alias: "pr",
          args: null,
          concreteType: "XFBOpensourceGitHubPullRequest",
          kind: "LinkedField",
          name: "github_pull_request",
          plural: !1,
          selections: [ {
            alias: null,
            args: null,
            kind: "ScalarField",
            name: "id",
            storageKey: null
          }, {
            alias: "phabricatorDiff",
            args: null,
            concreteType: "PhabricatorDiff",
            kind: "LinkedField",
            name: "phabricator_diff",
            plural: !1,
            selections: [ {
              alias: null,
              args: null,
              kind: "ScalarField",
              name: "number",
              storageKey: null
            }, {
              alias: null,
              args: null,
              kind: "ScalarField",
              name: "url",
              storageKey: null
            } ],
            storageKey: null
          }, {
            alias: "checkRuns",
            args: [ {
              kind: "Literal",
              name: "include_internal",
              value: !0
            } ],
            concreteType: "XFBOpensourceGitHubCheckRun",
            kind: "LinkedField",
            name: "test_check_runs",
            plural: !0,
            selections: [ {
              alias: null,
              args: null,
              kind: "ScalarField",
              name: "conclusion",
              storageKey: null
            }, {
              alias: null,
              args: null,
              kind: "ScalarField",
              name: "name",
              storageKey: null
            } ],
            storageKey: "test_check_runs(include_internal:true)"
          } ],
          storageKey: null
        } ],
        type: "XFBOpensourceURIResolverPayload",
        abstractKey: null,
        hash: "4f15840a52b4c59ad7091a65dfe6a4de"
      };
      module.exports = node;
    },
    1345: module => {
      "use strict";
      var aStackPool = [], bStackPool = [];
      function eq(a, b, aStack, bStack) {
        if (a === b) return 0 !== a || 1 / a == 1 / b;
        if (null == a || null == b) return !1;
        if ("object" != typeof a || "object" != typeof b) return !1;
        var objToStr = Object.prototype.toString, className = objToStr.call(a);
        if (className != objToStr.call(b)) return !1;
        switch (className) {
         case "[object String]":
          return a == String(b);

         case "[object Number]":
          return !isNaN(a) && !isNaN(b) && a == Number(b);

         case "[object Date]":
         case "[object Boolean]":
          return +a == +b;

         case "[object RegExp]":
          return a.source == b.source && a.global == b.global && a.multiline == b.multiline && a.ignoreCase == b.ignoreCase;
        }
        for (var length = aStack.length; length--; ) if (aStack[length] == a) return bStack[length] == b;
        aStack.push(a), bStack.push(b);
        var size = 0;
        if ("[object Array]" === className) {
          if ((size = a.length) !== b.length) return !1;
          for (;size--; ) if (!eq(a[size], b[size], aStack, bStack)) return !1;
        } else {
          if (a.constructor !== b.constructor) return !1;
          if (a.hasOwnProperty("valueOf") && b.hasOwnProperty("valueOf")) return a.valueOf() == b.valueOf();
          var keys = Object.keys(a);
          if (keys.length != Object.keys(b).length) return !1;
          for (var i = 0; i < keys.length; i++) if (!eq(a[keys[i]], b[keys[i]], aStack, bStack)) return !1;
        }
        return aStack.pop(), bStack.pop(), !0;
      }
      module.exports = function(a, b) {
        var aStack = aStackPool.length ? aStackPool.pop() : [], bStack = bStackPool.length ? bStackPool.pop() : [], result = eq(a, b, aStack, bStack);
        return aStack.length = 0, bStack.length = 0, aStackPool.push(aStack), bStackPool.push(bStack), 
        result;
      };
    },
    8355: module => {
      "use strict";
      function makeEmptyFunction(arg) {
        return function() {
          return arg;
        };
      }
      var emptyFunction = function() {};
      emptyFunction.thatReturns = makeEmptyFunction, emptyFunction.thatReturnsFalse = makeEmptyFunction(!1), 
      emptyFunction.thatReturnsTrue = makeEmptyFunction(!0), emptyFunction.thatReturnsNull = makeEmptyFunction(null), 
      emptyFunction.thatReturnsThis = function() {
        return this;
      }, emptyFunction.thatReturnsArgument = function(arg) {
        return arg;
      }, module.exports = emptyFunction;
    },
    3349: (module, __unused_webpack_exports, __webpack_require__) => {
      "use strict";
      var warning = __webpack_require__(8355);
      module.exports = warning;
    },
    2663: (module, __unused_webpack_exports, __webpack_require__) => {
      "use strict";
      var reactIs = __webpack_require__(951), REACT_STATICS = {
        childContextTypes: !0,
        contextType: !0,
        contextTypes: !0,
        defaultProps: !0,
        displayName: !0,
        getDefaultProps: !0,
        getDerivedStateFromError: !0,
        getDerivedStateFromProps: !0,
        mixins: !0,
        propTypes: !0,
        type: !0
      }, KNOWN_STATICS = {
        name: !0,
        length: !0,
        prototype: !0,
        caller: !0,
        callee: !0,
        arguments: !0,
        arity: !0
      }, MEMO_STATICS = {
        $$typeof: !0,
        compare: !0,
        defaultProps: !0,
        displayName: !0,
        propTypes: !0,
        type: !0
      }, TYPE_STATICS = {};
      function getStatics(component) {
        return reactIs.isMemo(component) ? MEMO_STATICS : TYPE_STATICS[component.$$typeof] || REACT_STATICS;
      }
      TYPE_STATICS[reactIs.ForwardRef] = {
        $$typeof: !0,
        render: !0,
        defaultProps: !0,
        displayName: !0,
        propTypes: !0
      }, TYPE_STATICS[reactIs.Memo] = MEMO_STATICS;
      var defineProperty = Object.defineProperty, getOwnPropertyNames = Object.getOwnPropertyNames, getOwnPropertySymbols = Object.getOwnPropertySymbols, getOwnPropertyDescriptor = Object.getOwnPropertyDescriptor, getPrototypeOf = Object.getPrototypeOf, objectPrototype = Object.prototype;
      module.exports = function hoistNonReactStatics(targetComponent, sourceComponent, blacklist) {
        if ("string" != typeof sourceComponent) {
          if (objectPrototype) {
            var inheritedComponent = getPrototypeOf(sourceComponent);
            inheritedComponent && inheritedComponent !== objectPrototype && hoistNonReactStatics(targetComponent, inheritedComponent, blacklist);
          }
          var keys = getOwnPropertyNames(sourceComponent);
          getOwnPropertySymbols && (keys = keys.concat(getOwnPropertySymbols(sourceComponent)));
          for (var targetStatics = getStatics(targetComponent), sourceStatics = getStatics(sourceComponent), i = 0; i < keys.length; ++i) {
            var key = keys[i];
            if (!(KNOWN_STATICS[key] || blacklist && blacklist[key] || sourceStatics && sourceStatics[key] || targetStatics && targetStatics[key])) {
              var descriptor = getOwnPropertyDescriptor(sourceComponent, key);
              try {
                defineProperty(targetComponent, key, descriptor);
              } catch (e) {}
            }
          }
        }
        return targetComponent;
      };
    },
    1235: module => {
      "use strict";
      module.exports = function(condition, format, a, b, c, d, e, f) {
        if (!condition) {
          var error;
          if (void 0 === format) error = new Error("Minified exception occurred; use the non-minified dev environment for the full error message and additional helpful warnings."); else {
            var args = [ a, b, c, d, e, f ], argIndex = 0;
            (error = new Error(format.replace(/%s/g, (function() {
              return args[argIndex++];
            })))).name = "Invariant Violation";
          }
          throw error.framesToPop = 1, error;
        }
      };
    },
    9285: (module, __unused_webpack_exports, __webpack_require__) => {
      "use strict";
      var ReactPropTypesSecret = __webpack_require__(5305);
      function emptyFunction() {}
      function emptyFunctionWithReset() {}
      emptyFunctionWithReset.resetWarningCache = emptyFunction, module.exports = function() {
        function shim(props, propName, componentName, location, propFullName, secret) {
          if (secret !== ReactPropTypesSecret) {
            var err = new Error("Calling PropTypes validators directly is not supported by the `prop-types` package. Use PropTypes.checkPropTypes() to call them. Read more at http://fb.me/use-check-prop-types");
            throw err.name = "Invariant Violation", err;
          }
        }
        function getShim() {
          return shim;
        }
        shim.isRequired = shim;
        var ReactPropTypes = {
          array: shim,
          bool: shim,
          func: shim,
          number: shim,
          object: shim,
          string: shim,
          symbol: shim,
          any: shim,
          arrayOf: getShim,
          element: shim,
          elementType: shim,
          instanceOf: getShim,
          node: shim,
          objectOf: getShim,
          oneOf: getShim,
          oneOfType: getShim,
          shape: getShim,
          exact: getShim,
          checkPropTypes: emptyFunctionWithReset,
          resetWarningCache: emptyFunction
        };
        return ReactPropTypes.PropTypes = ReactPropTypes, ReactPropTypes;
      };
    },
    9862: (module, __unused_webpack_exports, __webpack_require__) => {
      module.exports = __webpack_require__(9285)();
    },
    5305: module => {
      "use strict";
      module.exports = "SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED";
    },
    4814: (__unused_webpack_module, exports, __webpack_require__) => {
      "use strict";
      var aa = __webpack_require__(7130), ca = __webpack_require__(895);
      function p(a) {
        for (var b = "https://reactjs.org/docs/error-decoder.html?invariant=" + a, c = 1; c < arguments.length; c++) b += "&args[]=" + encodeURIComponent(arguments[c]);
        return "Minified React error #" + a + "; visit " + b + " for the full message or use the non-minified dev environment for full errors and additional helpful warnings.";
      }
      var da = new Set, ea = {};
      function fa(a, b) {
        ha(a, b), ha(a + "Capture", b);
      }
      function ha(a, b) {
        for (ea[a] = b, a = 0; a < b.length; a++) da.add(b[a]);
      }
      var ia = !("undefined" == typeof window || void 0 === window.document || void 0 === window.document.createElement), ja = Object.prototype.hasOwnProperty, ka = /^[:A-Z_a-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD][:A-Z_a-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD\-.0-9\u00B7\u0300-\u036F\u203F-\u2040]*$/, la = {}, ma = {};
      function v(a, b, c, d, e, f, g) {
        this.acceptsBooleans = 2 === b || 3 === b || 4 === b, this.attributeName = d, this.attributeNamespace = e, 
        this.mustUseProperty = c, this.propertyName = a, this.type = b, this.sanitizeURL = f, 
        this.removeEmptyString = g;
      }
      var z = {};
      "children dangerouslySetInnerHTML defaultValue defaultChecked innerHTML suppressContentEditableWarning suppressHydrationWarning style".split(" ").forEach((function(a) {
        z[a] = new v(a, 0, !1, a, null, !1, !1);
      })), [ [ "acceptCharset", "accept-charset" ], [ "className", "class" ], [ "htmlFor", "for" ], [ "httpEquiv", "http-equiv" ] ].forEach((function(a) {
        var b = a[0];
        z[b] = new v(b, 1, !1, a[1], null, !1, !1);
      })), [ "contentEditable", "draggable", "spellCheck", "value" ].forEach((function(a) {
        z[a] = new v(a, 2, !1, a.toLowerCase(), null, !1, !1);
      })), [ "autoReverse", "externalResourcesRequired", "focusable", "preserveAlpha" ].forEach((function(a) {
        z[a] = new v(a, 2, !1, a, null, !1, !1);
      })), "allowFullScreen async autoFocus autoPlay controls default defer disabled disablePictureInPicture disableRemotePlayback formNoValidate hidden loop noModule noValidate open playsInline readOnly required reversed scoped seamless itemScope".split(" ").forEach((function(a) {
        z[a] = new v(a, 3, !1, a.toLowerCase(), null, !1, !1);
      })), [ "checked", "multiple", "muted", "selected" ].forEach((function(a) {
        z[a] = new v(a, 3, !0, a, null, !1, !1);
      })), [ "capture", "download" ].forEach((function(a) {
        z[a] = new v(a, 4, !1, a, null, !1, !1);
      })), [ "cols", "rows", "size", "span" ].forEach((function(a) {
        z[a] = new v(a, 6, !1, a, null, !1, !1);
      })), [ "rowSpan", "start" ].forEach((function(a) {
        z[a] = new v(a, 5, !1, a.toLowerCase(), null, !1, !1);
      }));
      var ra = /[\-:]([a-z])/g;
      function sa(a) {
        return a[1].toUpperCase();
      }
      function ta(a, b, c, d) {
        var e = z.hasOwnProperty(b) ? z[b] : null;
        (null !== e ? 0 !== e.type : d || !(2 < b.length) || "o" !== b[0] && "O" !== b[0] || "n" !== b[1] && "N" !== b[1]) && (function(a, b, c, d) {
          if (null == b || function(a, b, c, d) {
            if (null !== c && 0 === c.type) return !1;
            switch (typeof b) {
             case "function":
             case "symbol":
              return !0;

             case "boolean":
              return !d && (null !== c ? !c.acceptsBooleans : "data-" !== (a = a.toLowerCase().slice(0, 5)) && "aria-" !== a);

             default:
              return !1;
            }
          }(a, b, c, d)) return !0;
          if (d) return !1;
          if (null !== c) switch (c.type) {
           case 3:
            return !b;

           case 4:
            return !1 === b;

           case 5:
            return isNaN(b);

           case 6:
            return isNaN(b) || 1 > b;
          }
          return !1;
        }(b, c, e, d) && (c = null), d || null === e ? function(a) {
          return !!ja.call(ma, a) || !ja.call(la, a) && (ka.test(a) ? ma[a] = !0 : (la[a] = !0, 
          !1));
        }(b) && (null === c ? a.removeAttribute(b) : a.setAttribute(b, "" + c)) : e.mustUseProperty ? a[e.propertyName] = null === c ? 3 !== e.type && "" : c : (b = e.attributeName, 
        d = e.attributeNamespace, null === c ? a.removeAttribute(b) : (c = 3 === (e = e.type) || 4 === e && !0 === c ? "" : "" + c, 
        d ? a.setAttributeNS(d, b, c) : a.setAttribute(b, c))));
      }
      "accent-height alignment-baseline arabic-form baseline-shift cap-height clip-path clip-rule color-interpolation color-interpolation-filters color-profile color-rendering dominant-baseline enable-background fill-opacity fill-rule flood-color flood-opacity font-family font-size font-size-adjust font-stretch font-style font-variant font-weight glyph-name glyph-orientation-horizontal glyph-orientation-vertical horiz-adv-x horiz-origin-x image-rendering letter-spacing lighting-color marker-end marker-mid marker-start overline-position overline-thickness paint-order panose-1 pointer-events rendering-intent shape-rendering stop-color stop-opacity strikethrough-position strikethrough-thickness stroke-dasharray stroke-dashoffset stroke-linecap stroke-linejoin stroke-miterlimit stroke-opacity stroke-width text-anchor text-decoration text-rendering underline-position underline-thickness unicode-bidi unicode-range units-per-em v-alphabetic v-hanging v-ideographic v-mathematical vector-effect vert-adv-y vert-origin-x vert-origin-y word-spacing writing-mode xmlns:xlink x-height".split(" ").forEach((function(a) {
        var b = a.replace(ra, sa);
        z[b] = new v(b, 1, !1, a, null, !1, !1);
      })), "xlink:actuate xlink:arcrole xlink:role xlink:show xlink:title xlink:type".split(" ").forEach((function(a) {
        var b = a.replace(ra, sa);
        z[b] = new v(b, 1, !1, a, "http://www.w3.org/1999/xlink", !1, !1);
      })), [ "xml:base", "xml:lang", "xml:space" ].forEach((function(a) {
        var b = a.replace(ra, sa);
        z[b] = new v(b, 1, !1, a, "http://www.w3.org/XML/1998/namespace", !1, !1);
      })), [ "tabIndex", "crossOrigin" ].forEach((function(a) {
        z[a] = new v(a, 1, !1, a.toLowerCase(), null, !1, !1);
      })), z.xlinkHref = new v("xlinkHref", 1, !1, "xlink:href", "http://www.w3.org/1999/xlink", !0, !1), 
      [ "src", "href", "action", "formAction" ].forEach((function(a) {
        z[a] = new v(a, 1, !1, a.toLowerCase(), null, !0, !0);
      }));
      var ua = aa.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED, va = Symbol.for("react.element"), wa = Symbol.for("react.portal"), ya = Symbol.for("react.fragment"), za = Symbol.for("react.strict_mode"), Aa = Symbol.for("react.profiler"), Ba = Symbol.for("react.provider"), Ca = Symbol.for("react.context"), Da = Symbol.for("react.forward_ref"), Ea = Symbol.for("react.suspense"), Fa = Symbol.for("react.suspense_list"), Ga = Symbol.for("react.memo"), Ha = Symbol.for("react.lazy");
      Symbol.for("react.scope"), Symbol.for("react.debug_trace_mode");
      var Ia = Symbol.for("react.offscreen");
      Symbol.for("react.legacy_hidden"), Symbol.for("react.cache"), Symbol.for("react.tracing_marker");
      var Ja = Symbol.iterator;
      function Ka(a) {
        return null === a || "object" != typeof a ? null : "function" == typeof (a = Ja && a[Ja] || a["@@iterator"]) ? a : null;
      }
      var La, A = Object.assign;
      function Ma(a) {
        if (void 0 === La) try {
          throw Error();
        } catch (c) {
          var b = c.stack.trim().match(/\n( *(at )?)/);
          La = b && b[1] || "";
        }
        return "\n" + La + a;
      }
      var Na = !1;
      function Oa(a, b) {
        if (!a || Na) return "";
        Na = !0;
        var c = Error.prepareStackTrace;
        Error.prepareStackTrace = void 0;
        try {
          if (b) if (b = function() {
            throw Error();
          }, Object.defineProperty(b.prototype, "props", {
            set: function() {
              throw Error();
            }
          }), "object" == typeof Reflect && Reflect.construct) {
            try {
              Reflect.construct(b, []);
            } catch (l) {
              var d = l;
            }
            Reflect.construct(a, [], b);
          } else {
            try {
              b.call();
            } catch (l) {
              d = l;
            }
            a.call(b.prototype);
          } else {
            try {
              throw Error();
            } catch (l) {
              d = l;
            }
            a();
          }
        } catch (l) {
          if (l && d && "string" == typeof l.stack) {
            for (var e = l.stack.split("\n"), f = d.stack.split("\n"), g = e.length - 1, h = f.length - 1; 1 <= g && 0 <= h && e[g] !== f[h]; ) h--;
            for (;1 <= g && 0 <= h; g--, h--) if (e[g] !== f[h]) {
              if (1 !== g || 1 !== h) do {
                if (g--, 0 > --h || e[g] !== f[h]) {
                  var k = "\n" + e[g].replace(" at new ", " at ");
                  return a.displayName && k.includes("<anonymous>") && (k = k.replace("<anonymous>", a.displayName)), 
                  k;
                }
              } while (1 <= g && 0 <= h);
              break;
            }
          }
        } finally {
          Na = !1, Error.prepareStackTrace = c;
        }
        return (a = a ? a.displayName || a.name : "") ? Ma(a) : "";
      }
      function Pa(a) {
        switch (a.tag) {
         case 5:
          return Ma(a.type);

         case 16:
          return Ma("Lazy");

         case 13:
          return Ma("Suspense");

         case 19:
          return Ma("SuspenseList");

         case 0:
         case 2:
         case 15:
          return a = Oa(a.type, !1);

         case 11:
          return a = Oa(a.type.render, !1);

         case 1:
          return a = Oa(a.type, !0);

         default:
          return "";
        }
      }
      function Qa(a) {
        if (null == a) return null;
        if ("function" == typeof a) return a.displayName || a.name || null;
        if ("string" == typeof a) return a;
        switch (a) {
         case ya:
          return "Fragment";

         case wa:
          return "Portal";

         case Aa:
          return "Profiler";

         case za:
          return "StrictMode";

         case Ea:
          return "Suspense";

         case Fa:
          return "SuspenseList";
        }
        if ("object" == typeof a) switch (a.$$typeof) {
         case Ca:
          return (a.displayName || "Context") + ".Consumer";

         case Ba:
          return (a._context.displayName || "Context") + ".Provider";

         case Da:
          var b = a.render;
          return (a = a.displayName) || (a = "" !== (a = b.displayName || b.name || "") ? "ForwardRef(" + a + ")" : "ForwardRef"), 
          a;

         case Ga:
          return null !== (b = a.displayName || null) ? b : Qa(a.type) || "Memo";

         case Ha:
          b = a._payload, a = a._init;
          try {
            return Qa(a(b));
          } catch (c) {}
        }
        return null;
      }
      function Ra(a) {
        var b = a.type;
        switch (a.tag) {
         case 24:
          return "Cache";

         case 9:
          return (b.displayName || "Context") + ".Consumer";

         case 10:
          return (b._context.displayName || "Context") + ".Provider";

         case 18:
          return "DehydratedFragment";

         case 11:
          return a = (a = b.render).displayName || a.name || "", b.displayName || ("" !== a ? "ForwardRef(" + a + ")" : "ForwardRef");

         case 7:
          return "Fragment";

         case 5:
          return b;

         case 4:
          return "Portal";

         case 3:
          return "Root";

         case 6:
          return "Text";

         case 16:
          return Qa(b);

         case 8:
          return b === za ? "StrictMode" : "Mode";

         case 22:
          return "Offscreen";

         case 12:
          return "Profiler";

         case 21:
          return "Scope";

         case 13:
          return "Suspense";

         case 19:
          return "SuspenseList";

         case 25:
          return "TracingMarker";

         case 1:
         case 0:
         case 17:
         case 2:
         case 14:
         case 15:
          if ("function" == typeof b) return b.displayName || b.name || null;
          if ("string" == typeof b) return b;
        }
        return null;
      }
      function Sa(a) {
        switch (typeof a) {
         case "boolean":
         case "number":
         case "string":
         case "undefined":
         case "object":
          return a;

         default:
          return "";
        }
      }
      function Ta(a) {
        var b = a.type;
        return (a = a.nodeName) && "input" === a.toLowerCase() && ("checkbox" === b || "radio" === b);
      }
      function Va(a) {
        a._valueTracker || (a._valueTracker = function(a) {
          var b = Ta(a) ? "checked" : "value", c = Object.getOwnPropertyDescriptor(a.constructor.prototype, b), d = "" + a[b];
          if (!a.hasOwnProperty(b) && void 0 !== c && "function" == typeof c.get && "function" == typeof c.set) {
            var e = c.get, f = c.set;
            return Object.defineProperty(a, b, {
              configurable: !0,
              get: function() {
                return e.call(this);
              },
              set: function(a) {
                d = "" + a, f.call(this, a);
              }
            }), Object.defineProperty(a, b, {
              enumerable: c.enumerable
            }), {
              getValue: function() {
                return d;
              },
              setValue: function(a) {
                d = "" + a;
              },
              stopTracking: function() {
                a._valueTracker = null, delete a[b];
              }
            };
          }
        }(a));
      }
      function Wa(a) {
        if (!a) return !1;
        var b = a._valueTracker;
        if (!b) return !0;
        var c = b.getValue(), d = "";
        return a && (d = Ta(a) ? a.checked ? "true" : "false" : a.value), (a = d) !== c && (b.setValue(a), 
        !0);
      }
      function Xa(a) {
        if (void 0 === (a = a || ("undefined" != typeof document ? document : void 0))) return null;
        try {
          return a.activeElement || a.body;
        } catch (b) {
          return a.body;
        }
      }
      function Ya(a, b) {
        var c = b.checked;
        return A({}, b, {
          defaultChecked: void 0,
          defaultValue: void 0,
          value: void 0,
          checked: null != c ? c : a._wrapperState.initialChecked
        });
      }
      function Za(a, b) {
        var c = null == b.defaultValue ? "" : b.defaultValue, d = null != b.checked ? b.checked : b.defaultChecked;
        c = Sa(null != b.value ? b.value : c), a._wrapperState = {
          initialChecked: d,
          initialValue: c,
          controlled: "checkbox" === b.type || "radio" === b.type ? null != b.checked : null != b.value
        };
      }
      function ab(a, b) {
        null != (b = b.checked) && ta(a, "checked", b, !1);
      }
      function bb(a, b) {
        ab(a, b);
        var c = Sa(b.value), d = b.type;
        if (null != c) "number" === d ? (0 === c && "" === a.value || a.value != c) && (a.value = "" + c) : a.value !== "" + c && (a.value = "" + c); else if ("submit" === d || "reset" === d) return void a.removeAttribute("value");
        b.hasOwnProperty("value") ? cb(a, b.type, c) : b.hasOwnProperty("defaultValue") && cb(a, b.type, Sa(b.defaultValue)), 
        null == b.checked && null != b.defaultChecked && (a.defaultChecked = !!b.defaultChecked);
      }
      function db(a, b, c) {
        if (b.hasOwnProperty("value") || b.hasOwnProperty("defaultValue")) {
          var d = b.type;
          if (!("submit" !== d && "reset" !== d || void 0 !== b.value && null !== b.value)) return;
          b = "" + a._wrapperState.initialValue, c || b === a.value || (a.value = b), a.defaultValue = b;
        }
        "" !== (c = a.name) && (a.name = ""), a.defaultChecked = !!a._wrapperState.initialChecked, 
        "" !== c && (a.name = c);
      }
      function cb(a, b, c) {
        "number" === b && Xa(a.ownerDocument) === a || (null == c ? a.defaultValue = "" + a._wrapperState.initialValue : a.defaultValue !== "" + c && (a.defaultValue = "" + c));
      }
      var eb = Array.isArray;
      function fb(a, b, c, d) {
        if (a = a.options, b) {
          b = {};
          for (var e = 0; e < c.length; e++) b["$" + c[e]] = !0;
          for (c = 0; c < a.length; c++) e = b.hasOwnProperty("$" + a[c].value), a[c].selected !== e && (a[c].selected = e), 
          e && d && (a[c].defaultSelected = !0);
        } else {
          for (c = "" + Sa(c), b = null, e = 0; e < a.length; e++) {
            if (a[e].value === c) return a[e].selected = !0, void (d && (a[e].defaultSelected = !0));
            null !== b || a[e].disabled || (b = a[e]);
          }
          null !== b && (b.selected = !0);
        }
      }
      function gb(a, b) {
        if (null != b.dangerouslySetInnerHTML) throw Error(p(91));
        return A({}, b, {
          value: void 0,
          defaultValue: void 0,
          children: "" + a._wrapperState.initialValue
        });
      }
      function hb(a, b) {
        var c = b.value;
        if (null == c) {
          if (c = b.children, b = b.defaultValue, null != c) {
            if (null != b) throw Error(p(92));
            if (eb(c)) {
              if (1 < c.length) throw Error(p(93));
              c = c[0];
            }
            b = c;
          }
          null == b && (b = ""), c = b;
        }
        a._wrapperState = {
          initialValue: Sa(c)
        };
      }
      function ib(a, b) {
        var c = Sa(b.value), d = Sa(b.defaultValue);
        null != c && ((c = "" + c) !== a.value && (a.value = c), null == b.defaultValue && a.defaultValue !== c && (a.defaultValue = c)), 
        null != d && (a.defaultValue = "" + d);
      }
      function jb(a) {
        var b = a.textContent;
        b === a._wrapperState.initialValue && "" !== b && null !== b && (a.value = b);
      }
      function kb(a) {
        switch (a) {
         case "svg":
          return "http://www.w3.org/2000/svg";

         case "math":
          return "http://www.w3.org/1998/Math/MathML";

         default:
          return "http://www.w3.org/1999/xhtml";
        }
      }
      function lb(a, b) {
        return null == a || "http://www.w3.org/1999/xhtml" === a ? kb(b) : "http://www.w3.org/2000/svg" === a && "foreignObject" === b ? "http://www.w3.org/1999/xhtml" : a;
      }
      var mb, a, nb = (a = function(a, b) {
        if ("http://www.w3.org/2000/svg" !== a.namespaceURI || "innerHTML" in a) a.innerHTML = b; else {
          for ((mb = mb || document.createElement("div")).innerHTML = "<svg>" + b.valueOf().toString() + "</svg>", 
          b = mb.firstChild; a.firstChild; ) a.removeChild(a.firstChild);
          for (;b.firstChild; ) a.appendChild(b.firstChild);
        }
      }, "undefined" != typeof MSApp && MSApp.execUnsafeLocalFunction ? function(b, c, d, e) {
        MSApp.execUnsafeLocalFunction((function() {
          return a(b, c);
        }));
      } : a);
      function ob(a, b) {
        if (b) {
          var c = a.firstChild;
          if (c && c === a.lastChild && 3 === c.nodeType) return void (c.nodeValue = b);
        }
        a.textContent = b;
      }
      var pb = {
        animationIterationCount: !0,
        aspectRatio: !0,
        borderImageOutset: !0,
        borderImageSlice: !0,
        borderImageWidth: !0,
        boxFlex: !0,
        boxFlexGroup: !0,
        boxOrdinalGroup: !0,
        columnCount: !0,
        columns: !0,
        flex: !0,
        flexGrow: !0,
        flexPositive: !0,
        flexShrink: !0,
        flexNegative: !0,
        flexOrder: !0,
        gridArea: !0,
        gridRow: !0,
        gridRowEnd: !0,
        gridRowSpan: !0,
        gridRowStart: !0,
        gridColumn: !0,
        gridColumnEnd: !0,
        gridColumnSpan: !0,
        gridColumnStart: !0,
        fontWeight: !0,
        lineClamp: !0,
        lineHeight: !0,
        opacity: !0,
        order: !0,
        orphans: !0,
        tabSize: !0,
        widows: !0,
        zIndex: !0,
        zoom: !0,
        fillOpacity: !0,
        floodOpacity: !0,
        stopOpacity: !0,
        strokeDasharray: !0,
        strokeDashoffset: !0,
        strokeMiterlimit: !0,
        strokeOpacity: !0,
        strokeWidth: !0
      }, qb = [ "Webkit", "ms", "Moz", "O" ];
      function rb(a, b, c) {
        return null == b || "boolean" == typeof b || "" === b ? "" : c || "number" != typeof b || 0 === b || pb.hasOwnProperty(a) && pb[a] ? ("" + b).trim() : b + "px";
      }
      function sb(a, b) {
        for (var c in a = a.style, b) if (b.hasOwnProperty(c)) {
          var d = 0 === c.indexOf("--"), e = rb(c, b[c], d);
          "float" === c && (c = "cssFloat"), d ? a.setProperty(c, e) : a[c] = e;
        }
      }
      Object.keys(pb).forEach((function(a) {
        qb.forEach((function(b) {
          b = b + a.charAt(0).toUpperCase() + a.substring(1), pb[b] = pb[a];
        }));
      }));
      var tb = A({
        menuitem: !0
      }, {
        area: !0,
        base: !0,
        br: !0,
        col: !0,
        embed: !0,
        hr: !0,
        img: !0,
        input: !0,
        keygen: !0,
        link: !0,
        meta: !0,
        param: !0,
        source: !0,
        track: !0,
        wbr: !0
      });
      function ub(a, b) {
        if (b) {
          if (tb[a] && (null != b.children || null != b.dangerouslySetInnerHTML)) throw Error(p(137, a));
          if (null != b.dangerouslySetInnerHTML) {
            if (null != b.children) throw Error(p(60));
            if ("object" != typeof b.dangerouslySetInnerHTML || !("__html" in b.dangerouslySetInnerHTML)) throw Error(p(61));
          }
          if (null != b.style && "object" != typeof b.style) throw Error(p(62));
        }
      }
      function vb(a, b) {
        if (-1 === a.indexOf("-")) return "string" == typeof b.is;
        switch (a) {
         case "annotation-xml":
         case "color-profile":
         case "font-face":
         case "font-face-src":
         case "font-face-uri":
         case "font-face-format":
         case "font-face-name":
         case "missing-glyph":
          return !1;

         default:
          return !0;
        }
      }
      var wb = null;
      function xb(a) {
        return (a = a.target || a.srcElement || window).correspondingUseElement && (a = a.correspondingUseElement), 
        3 === a.nodeType ? a.parentNode : a;
      }
      var yb = null, zb = null, Ab = null;
      function Bb(a) {
        if (a = Cb(a)) {
          if ("function" != typeof yb) throw Error(p(280));
          var b = a.stateNode;
          b && (b = Db(b), yb(a.stateNode, a.type, b));
        }
      }
      function Eb(a) {
        zb ? Ab ? Ab.push(a) : Ab = [ a ] : zb = a;
      }
      function Fb() {
        if (zb) {
          var a = zb, b = Ab;
          if (Ab = zb = null, Bb(a), b) for (a = 0; a < b.length; a++) Bb(b[a]);
        }
      }
      function Gb(a, b) {
        return a(b);
      }
      function Hb() {}
      var Ib = !1;
      function Jb(a, b, c) {
        if (Ib) return a(b, c);
        Ib = !0;
        try {
          return Gb(a, b, c);
        } finally {
          Ib = !1, (null !== zb || null !== Ab) && (Hb(), Fb());
        }
      }
      function Kb(a, b) {
        var c = a.stateNode;
        if (null === c) return null;
        var d = Db(c);
        if (null === d) return null;
        c = d[b];
        a: switch (b) {
         case "onClick":
         case "onClickCapture":
         case "onDoubleClick":
         case "onDoubleClickCapture":
         case "onMouseDown":
         case "onMouseDownCapture":
         case "onMouseMove":
         case "onMouseMoveCapture":
         case "onMouseUp":
         case "onMouseUpCapture":
         case "onMouseEnter":
          (d = !d.disabled) || (d = !("button" === (a = a.type) || "input" === a || "select" === a || "textarea" === a)), 
          a = !d;
          break a;

         default:
          a = !1;
        }
        if (a) return null;
        if (c && "function" != typeof c) throw Error(p(231, b, typeof c));
        return c;
      }
      var Lb = !1;
      if (ia) try {
        var Mb = {};
        Object.defineProperty(Mb, "passive", {
          get: function() {
            Lb = !0;
          }
        }), window.addEventListener("test", Mb, Mb), window.removeEventListener("test", Mb, Mb);
      } catch (a) {
        Lb = !1;
      }
      function Nb(a, b, c, d, e, f, g, h, k) {
        var l = Array.prototype.slice.call(arguments, 3);
        try {
          b.apply(c, l);
        } catch (m) {
          this.onError(m);
        }
      }
      var Ob = !1, Pb = null, Qb = !1, Rb = null, Sb = {
        onError: function(a) {
          Ob = !0, Pb = a;
        }
      };
      function Tb(a, b, c, d, e, f, g, h, k) {
        Ob = !1, Pb = null, Nb.apply(Sb, arguments);
      }
      function Vb(a) {
        var b = a, c = a;
        if (a.alternate) for (;b.return; ) b = b.return; else {
          a = b;
          do {
            0 != (4098 & (b = a).flags) && (c = b.return), a = b.return;
          } while (a);
        }
        return 3 === b.tag ? c : null;
      }
      function Wb(a) {
        if (13 === a.tag) {
          var b = a.memoizedState;
          if (null === b && (null !== (a = a.alternate) && (b = a.memoizedState)), null !== b) return b.dehydrated;
        }
        return null;
      }
      function Xb(a) {
        if (Vb(a) !== a) throw Error(p(188));
      }
      function Zb(a) {
        return null !== (a = function(a) {
          var b = a.alternate;
          if (!b) {
            if (null === (b = Vb(a))) throw Error(p(188));
            return b !== a ? null : a;
          }
          for (var c = a, d = b; ;) {
            var e = c.return;
            if (null === e) break;
            var f = e.alternate;
            if (null === f) {
              if (null !== (d = e.return)) {
                c = d;
                continue;
              }
              break;
            }
            if (e.child === f.child) {
              for (f = e.child; f; ) {
                if (f === c) return Xb(e), a;
                if (f === d) return Xb(e), b;
                f = f.sibling;
              }
              throw Error(p(188));
            }
            if (c.return !== d.return) c = e, d = f; else {
              for (var g = !1, h = e.child; h; ) {
                if (h === c) {
                  g = !0, c = e, d = f;
                  break;
                }
                if (h === d) {
                  g = !0, d = e, c = f;
                  break;
                }
                h = h.sibling;
              }
              if (!g) {
                for (h = f.child; h; ) {
                  if (h === c) {
                    g = !0, c = f, d = e;
                    break;
                  }
                  if (h === d) {
                    g = !0, d = f, c = e;
                    break;
                  }
                  h = h.sibling;
                }
                if (!g) throw Error(p(189));
              }
            }
            if (c.alternate !== d) throw Error(p(190));
          }
          if (3 !== c.tag) throw Error(p(188));
          return c.stateNode.current === c ? a : b;
        }(a)) ? $b(a) : null;
      }
      function $b(a) {
        if (5 === a.tag || 6 === a.tag) return a;
        for (a = a.child; null !== a; ) {
          var b = $b(a);
          if (null !== b) return b;
          a = a.sibling;
        }
        return null;
      }
      var ac = ca.unstable_scheduleCallback, bc = ca.unstable_cancelCallback, cc = ca.unstable_shouldYield, dc = ca.unstable_requestPaint, B = ca.unstable_now, ec = ca.unstable_getCurrentPriorityLevel, fc = ca.unstable_ImmediatePriority, gc = ca.unstable_UserBlockingPriority, hc = ca.unstable_NormalPriority, ic = ca.unstable_LowPriority, jc = ca.unstable_IdlePriority, kc = null, lc = null;
      var oc = Math.clz32 ? Math.clz32 : function(a) {
        return a >>>= 0, 0 === a ? 32 : 31 - (pc(a) / qc | 0) | 0;
      }, pc = Math.log, qc = Math.LN2;
      var rc = 64, sc = 4194304;
      function tc(a) {
        switch (a & -a) {
         case 1:
          return 1;

         case 2:
          return 2;

         case 4:
          return 4;

         case 8:
          return 8;

         case 16:
          return 16;

         case 32:
          return 32;

         case 64:
         case 128:
         case 256:
         case 512:
         case 1024:
         case 2048:
         case 4096:
         case 8192:
         case 16384:
         case 32768:
         case 65536:
         case 131072:
         case 262144:
         case 524288:
         case 1048576:
         case 2097152:
          return 4194240 & a;

         case 4194304:
         case 8388608:
         case 16777216:
         case 33554432:
         case 67108864:
          return 130023424 & a;

         case 134217728:
          return 134217728;

         case 268435456:
          return 268435456;

         case 536870912:
          return 536870912;

         case 1073741824:
          return 1073741824;

         default:
          return a;
        }
      }
      function uc(a, b) {
        var c = a.pendingLanes;
        if (0 === c) return 0;
        var d = 0, e = a.suspendedLanes, f = a.pingedLanes, g = 268435455 & c;
        if (0 !== g) {
          var h = g & ~e;
          0 !== h ? d = tc(h) : 0 !== (f &= g) && (d = tc(f));
        } else 0 !== (g = c & ~e) ? d = tc(g) : 0 !== f && (d = tc(f));
        if (0 === d) return 0;
        if (0 !== b && b !== d && 0 == (b & e) && ((e = d & -d) >= (f = b & -b) || 16 === e && 0 != (4194240 & f))) return b;
        if (0 != (4 & d) && (d |= 16 & c), 0 !== (b = a.entangledLanes)) for (a = a.entanglements, 
        b &= d; 0 < b; ) e = 1 << (c = 31 - oc(b)), d |= a[c], b &= ~e;
        return d;
      }
      function vc(a, b) {
        switch (a) {
         case 1:
         case 2:
         case 4:
          return b + 250;

         case 8:
         case 16:
         case 32:
         case 64:
         case 128:
         case 256:
         case 512:
         case 1024:
         case 2048:
         case 4096:
         case 8192:
         case 16384:
         case 32768:
         case 65536:
         case 131072:
         case 262144:
         case 524288:
         case 1048576:
         case 2097152:
          return b + 5e3;

         default:
          return -1;
        }
      }
      function xc(a) {
        return 0 !== (a = -1073741825 & a.pendingLanes) ? a : 1073741824 & a ? 1073741824 : 0;
      }
      function yc() {
        var a = rc;
        return 0 == (4194240 & (rc <<= 1)) && (rc = 64), a;
      }
      function zc(a) {
        for (var b = [], c = 0; 31 > c; c++) b.push(a);
        return b;
      }
      function Ac(a, b, c) {
        a.pendingLanes |= b, 536870912 !== b && (a.suspendedLanes = 0, a.pingedLanes = 0), 
        (a = a.eventTimes)[b = 31 - oc(b)] = c;
      }
      function Cc(a, b) {
        var c = a.entangledLanes |= b;
        for (a = a.entanglements; c; ) {
          var d = 31 - oc(c), e = 1 << d;
          e & b | a[d] & b && (a[d] |= b), c &= ~e;
        }
      }
      var C = 0;
      function Dc(a) {
        return 1 < (a &= -a) ? 4 < a ? 0 != (268435455 & a) ? 16 : 536870912 : 4 : 1;
      }
      var Ec, Fc, Gc, Hc, Ic, Jc = !1, Kc = [], Lc = null, Mc = null, Nc = null, Oc = new Map, Pc = new Map, Qc = [], Rc = "mousedown mouseup touchcancel touchend touchstart auxclick dblclick pointercancel pointerdown pointerup dragend dragstart drop compositionend compositionstart keydown keypress keyup input textInput copy cut paste click change contextmenu reset submit".split(" ");
      function Sc(a, b) {
        switch (a) {
         case "focusin":
         case "focusout":
          Lc = null;
          break;

         case "dragenter":
         case "dragleave":
          Mc = null;
          break;

         case "mouseover":
         case "mouseout":
          Nc = null;
          break;

         case "pointerover":
         case "pointerout":
          Oc.delete(b.pointerId);
          break;

         case "gotpointercapture":
         case "lostpointercapture":
          Pc.delete(b.pointerId);
        }
      }
      function Tc(a, b, c, d, e, f) {
        return null === a || a.nativeEvent !== f ? (a = {
          blockedOn: b,
          domEventName: c,
          eventSystemFlags: d,
          nativeEvent: f,
          targetContainers: [ e ]
        }, null !== b && (null !== (b = Cb(b)) && Fc(b)), a) : (a.eventSystemFlags |= d, 
        b = a.targetContainers, null !== e && -1 === b.indexOf(e) && b.push(e), a);
      }
      function Vc(a) {
        var b = Wc(a.target);
        if (null !== b) {
          var c = Vb(b);
          if (null !== c) if (13 === (b = c.tag)) {
            if (null !== (b = Wb(c))) return a.blockedOn = b, void Ic(a.priority, (function() {
              Gc(c);
            }));
          } else if (3 === b && c.stateNode.current.memoizedState.isDehydrated) return void (a.blockedOn = 3 === c.tag ? c.stateNode.containerInfo : null);
        }
        a.blockedOn = null;
      }
      function Xc(a) {
        if (null !== a.blockedOn) return !1;
        for (var b = a.targetContainers; 0 < b.length; ) {
          var c = Yc(a.domEventName, a.eventSystemFlags, b[0], a.nativeEvent);
          if (null !== c) return null !== (b = Cb(c)) && Fc(b), a.blockedOn = c, !1;
          var d = new (c = a.nativeEvent).constructor(c.type, c);
          wb = d, c.target.dispatchEvent(d), wb = null, b.shift();
        }
        return !0;
      }
      function Zc(a, b, c) {
        Xc(a) && c.delete(b);
      }
      function $c() {
        Jc = !1, null !== Lc && Xc(Lc) && (Lc = null), null !== Mc && Xc(Mc) && (Mc = null), 
        null !== Nc && Xc(Nc) && (Nc = null), Oc.forEach(Zc), Pc.forEach(Zc);
      }
      function ad(a, b) {
        a.blockedOn === b && (a.blockedOn = null, Jc || (Jc = !0, ca.unstable_scheduleCallback(ca.unstable_NormalPriority, $c)));
      }
      function bd(a) {
        function b(b) {
          return ad(b, a);
        }
        if (0 < Kc.length) {
          ad(Kc[0], a);
          for (var c = 1; c < Kc.length; c++) {
            var d = Kc[c];
            d.blockedOn === a && (d.blockedOn = null);
          }
        }
        for (null !== Lc && ad(Lc, a), null !== Mc && ad(Mc, a), null !== Nc && ad(Nc, a), 
        Oc.forEach(b), Pc.forEach(b), c = 0; c < Qc.length; c++) (d = Qc[c]).blockedOn === a && (d.blockedOn = null);
        for (;0 < Qc.length && null === (c = Qc[0]).blockedOn; ) Vc(c), null === c.blockedOn && Qc.shift();
      }
      var cd = ua.ReactCurrentBatchConfig, dd = !0;
      function ed(a, b, c, d) {
        var e = C, f = cd.transition;
        cd.transition = null;
        try {
          C = 1, fd(a, b, c, d);
        } finally {
          C = e, cd.transition = f;
        }
      }
      function gd(a, b, c, d) {
        var e = C, f = cd.transition;
        cd.transition = null;
        try {
          C = 4, fd(a, b, c, d);
        } finally {
          C = e, cd.transition = f;
        }
      }
      function fd(a, b, c, d) {
        if (dd) {
          var e = Yc(a, b, c, d);
          if (null === e) hd(a, b, d, id, c), Sc(a, d); else if (function(a, b, c, d, e) {
            switch (b) {
             case "focusin":
              return Lc = Tc(Lc, a, b, c, d, e), !0;

             case "dragenter":
              return Mc = Tc(Mc, a, b, c, d, e), !0;

             case "mouseover":
              return Nc = Tc(Nc, a, b, c, d, e), !0;

             case "pointerover":
              var f = e.pointerId;
              return Oc.set(f, Tc(Oc.get(f) || null, a, b, c, d, e)), !0;

             case "gotpointercapture":
              return f = e.pointerId, Pc.set(f, Tc(Pc.get(f) || null, a, b, c, d, e)), !0;
            }
            return !1;
          }(e, a, b, c, d)) d.stopPropagation(); else if (Sc(a, d), 4 & b && -1 < Rc.indexOf(a)) {
            for (;null !== e; ) {
              var f = Cb(e);
              if (null !== f && Ec(f), null === (f = Yc(a, b, c, d)) && hd(a, b, d, id, c), f === e) break;
              e = f;
            }
            null !== e && d.stopPropagation();
          } else hd(a, b, d, null, c);
        }
      }
      var id = null;
      function Yc(a, b, c, d) {
        if (id = null, null !== (a = Wc(a = xb(d)))) if (null === (b = Vb(a))) a = null; else if (13 === (c = b.tag)) {
          if (null !== (a = Wb(b))) return a;
          a = null;
        } else if (3 === c) {
          if (b.stateNode.current.memoizedState.isDehydrated) return 3 === b.tag ? b.stateNode.containerInfo : null;
          a = null;
        } else b !== a && (a = null);
        return id = a, null;
      }
      function jd(a) {
        switch (a) {
         case "cancel":
         case "click":
         case "close":
         case "contextmenu":
         case "copy":
         case "cut":
         case "auxclick":
         case "dblclick":
         case "dragend":
         case "dragstart":
         case "drop":
         case "focusin":
         case "focusout":
         case "input":
         case "invalid":
         case "keydown":
         case "keypress":
         case "keyup":
         case "mousedown":
         case "mouseup":
         case "paste":
         case "pause":
         case "play":
         case "pointercancel":
         case "pointerdown":
         case "pointerup":
         case "ratechange":
         case "reset":
         case "resize":
         case "seeked":
         case "submit":
         case "touchcancel":
         case "touchend":
         case "touchstart":
         case "volumechange":
         case "change":
         case "selectionchange":
         case "textInput":
         case "compositionstart":
         case "compositionend":
         case "compositionupdate":
         case "beforeblur":
         case "afterblur":
         case "beforeinput":
         case "blur":
         case "fullscreenchange":
         case "focus":
         case "hashchange":
         case "popstate":
         case "select":
         case "selectstart":
          return 1;

         case "drag":
         case "dragenter":
         case "dragexit":
         case "dragleave":
         case "dragover":
         case "mousemove":
         case "mouseout":
         case "mouseover":
         case "pointermove":
         case "pointerout":
         case "pointerover":
         case "scroll":
         case "toggle":
         case "touchmove":
         case "wheel":
         case "mouseenter":
         case "mouseleave":
         case "pointerenter":
         case "pointerleave":
          return 4;

         case "message":
          switch (ec()) {
           case fc:
            return 1;

           case gc:
            return 4;

           case hc:
           case ic:
            return 16;

           case jc:
            return 536870912;

           default:
            return 16;
          }

         default:
          return 16;
        }
      }
      var kd = null, ld = null, md = null;
      function nd() {
        if (md) return md;
        var a, d, b = ld, c = b.length, e = "value" in kd ? kd.value : kd.textContent, f = e.length;
        for (a = 0; a < c && b[a] === e[a]; a++) ;
        var g = c - a;
        for (d = 1; d <= g && b[c - d] === e[f - d]; d++) ;
        return md = e.slice(a, 1 < d ? 1 - d : void 0);
      }
      function od(a) {
        var b = a.keyCode;
        return "charCode" in a ? 0 === (a = a.charCode) && 13 === b && (a = 13) : a = b, 
        10 === a && (a = 13), 32 <= a || 13 === a ? a : 0;
      }
      function pd() {
        return !0;
      }
      function qd() {
        return !1;
      }
      function rd(a) {
        function b(b, d, e, f, g) {
          for (var c in this._reactName = b, this._targetInst = e, this.type = d, this.nativeEvent = f, 
          this.target = g, this.currentTarget = null, a) a.hasOwnProperty(c) && (b = a[c], 
          this[c] = b ? b(f) : f[c]);
          return this.isDefaultPrevented = (null != f.defaultPrevented ? f.defaultPrevented : !1 === f.returnValue) ? pd : qd, 
          this.isPropagationStopped = qd, this;
        }
        return A(b.prototype, {
          preventDefault: function() {
            this.defaultPrevented = !0;
            var a = this.nativeEvent;
            a && (a.preventDefault ? a.preventDefault() : "unknown" != typeof a.returnValue && (a.returnValue = !1), 
            this.isDefaultPrevented = pd);
          },
          stopPropagation: function() {
            var a = this.nativeEvent;
            a && (a.stopPropagation ? a.stopPropagation() : "unknown" != typeof a.cancelBubble && (a.cancelBubble = !0), 
            this.isPropagationStopped = pd);
          },
          persist: function() {},
          isPersistent: pd
        }), b;
      }
      var wd, xd, yd, sd = {
        eventPhase: 0,
        bubbles: 0,
        cancelable: 0,
        timeStamp: function(a) {
          return a.timeStamp || Date.now();
        },
        defaultPrevented: 0,
        isTrusted: 0
      }, td = rd(sd), ud = A({}, sd, {
        view: 0,
        detail: 0
      }), vd = rd(ud), Ad = A({}, ud, {
        screenX: 0,
        screenY: 0,
        clientX: 0,
        clientY: 0,
        pageX: 0,
        pageY: 0,
        ctrlKey: 0,
        shiftKey: 0,
        altKey: 0,
        metaKey: 0,
        getModifierState: zd,
        button: 0,
        buttons: 0,
        relatedTarget: function(a) {
          return void 0 === a.relatedTarget ? a.fromElement === a.srcElement ? a.toElement : a.fromElement : a.relatedTarget;
        },
        movementX: function(a) {
          return "movementX" in a ? a.movementX : (a !== yd && (yd && "mousemove" === a.type ? (wd = a.screenX - yd.screenX, 
          xd = a.screenY - yd.screenY) : xd = wd = 0, yd = a), wd);
        },
        movementY: function(a) {
          return "movementY" in a ? a.movementY : xd;
        }
      }), Bd = rd(Ad), Dd = rd(A({}, Ad, {
        dataTransfer: 0
      })), Fd = rd(A({}, ud, {
        relatedTarget: 0
      })), Hd = rd(A({}, sd, {
        animationName: 0,
        elapsedTime: 0,
        pseudoElement: 0
      })), Id = A({}, sd, {
        clipboardData: function(a) {
          return "clipboardData" in a ? a.clipboardData : window.clipboardData;
        }
      }), Jd = rd(Id), Ld = rd(A({}, sd, {
        data: 0
      })), Md = {
        Esc: "Escape",
        Spacebar: " ",
        Left: "ArrowLeft",
        Up: "ArrowUp",
        Right: "ArrowRight",
        Down: "ArrowDown",
        Del: "Delete",
        Win: "OS",
        Menu: "ContextMenu",
        Apps: "ContextMenu",
        Scroll: "ScrollLock",
        MozPrintableKey: "Unidentified"
      }, Nd = {
        8: "Backspace",
        9: "Tab",
        12: "Clear",
        13: "Enter",
        16: "Shift",
        17: "Control",
        18: "Alt",
        19: "Pause",
        20: "CapsLock",
        27: "Escape",
        32: " ",
        33: "PageUp",
        34: "PageDown",
        35: "End",
        36: "Home",
        37: "ArrowLeft",
        38: "ArrowUp",
        39: "ArrowRight",
        40: "ArrowDown",
        45: "Insert",
        46: "Delete",
        112: "F1",
        113: "F2",
        114: "F3",
        115: "F4",
        116: "F5",
        117: "F6",
        118: "F7",
        119: "F8",
        120: "F9",
        121: "F10",
        122: "F11",
        123: "F12",
        144: "NumLock",
        145: "ScrollLock",
        224: "Meta"
      }, Od = {
        Alt: "altKey",
        Control: "ctrlKey",
        Meta: "metaKey",
        Shift: "shiftKey"
      };
      function Pd(a) {
        var b = this.nativeEvent;
        return b.getModifierState ? b.getModifierState(a) : !!(a = Od[a]) && !!b[a];
      }
      function zd() {
        return Pd;
      }
      var Qd = A({}, ud, {
        key: function(a) {
          if (a.key) {
            var b = Md[a.key] || a.key;
            if ("Unidentified" !== b) return b;
          }
          return "keypress" === a.type ? 13 === (a = od(a)) ? "Enter" : String.fromCharCode(a) : "keydown" === a.type || "keyup" === a.type ? Nd[a.keyCode] || "Unidentified" : "";
        },
        code: 0,
        location: 0,
        ctrlKey: 0,
        shiftKey: 0,
        altKey: 0,
        metaKey: 0,
        repeat: 0,
        locale: 0,
        getModifierState: zd,
        charCode: function(a) {
          return "keypress" === a.type ? od(a) : 0;
        },
        keyCode: function(a) {
          return "keydown" === a.type || "keyup" === a.type ? a.keyCode : 0;
        },
        which: function(a) {
          return "keypress" === a.type ? od(a) : "keydown" === a.type || "keyup" === a.type ? a.keyCode : 0;
        }
      }), Rd = rd(Qd), Td = rd(A({}, Ad, {
        pointerId: 0,
        width: 0,
        height: 0,
        pressure: 0,
        tangentialPressure: 0,
        tiltX: 0,
        tiltY: 0,
        twist: 0,
        pointerType: 0,
        isPrimary: 0
      })), Vd = rd(A({}, ud, {
        touches: 0,
        targetTouches: 0,
        changedTouches: 0,
        altKey: 0,
        metaKey: 0,
        ctrlKey: 0,
        shiftKey: 0,
        getModifierState: zd
      })), Xd = rd(A({}, sd, {
        propertyName: 0,
        elapsedTime: 0,
        pseudoElement: 0
      })), Yd = A({}, Ad, {
        deltaX: function(a) {
          return "deltaX" in a ? a.deltaX : "wheelDeltaX" in a ? -a.wheelDeltaX : 0;
        },
        deltaY: function(a) {
          return "deltaY" in a ? a.deltaY : "wheelDeltaY" in a ? -a.wheelDeltaY : "wheelDelta" in a ? -a.wheelDelta : 0;
        },
        deltaZ: 0,
        deltaMode: 0
      }), Zd = rd(Yd), $d = [ 9, 13, 27, 32 ], ae = ia && "CompositionEvent" in window, be = null;
      ia && "documentMode" in document && (be = document.documentMode);
      var ce = ia && "TextEvent" in window && !be, de = ia && (!ae || be && 8 < be && 11 >= be), ee = String.fromCharCode(32), fe = !1;
      function ge(a, b) {
        switch (a) {
         case "keyup":
          return -1 !== $d.indexOf(b.keyCode);

         case "keydown":
          return 229 !== b.keyCode;

         case "keypress":
         case "mousedown":
         case "focusout":
          return !0;

         default:
          return !1;
        }
      }
      function he(a) {
        return "object" == typeof (a = a.detail) && "data" in a ? a.data : null;
      }
      var ie = !1;
      var le = {
        color: !0,
        date: !0,
        datetime: !0,
        "datetime-local": !0,
        email: !0,
        month: !0,
        number: !0,
        password: !0,
        range: !0,
        search: !0,
        tel: !0,
        text: !0,
        time: !0,
        url: !0,
        week: !0
      };
      function me(a) {
        var b = a && a.nodeName && a.nodeName.toLowerCase();
        return "input" === b ? !!le[a.type] : "textarea" === b;
      }
      function ne(a, b, c, d) {
        Eb(d), 0 < (b = oe(b, "onChange")).length && (c = new td("onChange", "change", null, c, d), 
        a.push({
          event: c,
          listeners: b
        }));
      }
      var pe = null, qe = null;
      function re(a) {
        se(a, 0);
      }
      function te(a) {
        if (Wa(ue(a))) return a;
      }
      function ve(a, b) {
        if ("change" === a) return b;
      }
      var we = !1;
      if (ia) {
        var xe;
        if (ia) {
          var ye = "oninput" in document;
          if (!ye) {
            var ze = document.createElement("div");
            ze.setAttribute("oninput", "return;"), ye = "function" == typeof ze.oninput;
          }
          xe = ye;
        } else xe = !1;
        we = xe && (!document.documentMode || 9 < document.documentMode);
      }
      function Ae() {
        pe && (pe.detachEvent("onpropertychange", Be), qe = pe = null);
      }
      function Be(a) {
        if ("value" === a.propertyName && te(qe)) {
          var b = [];
          ne(b, qe, a, xb(a)), Jb(re, b);
        }
      }
      function Ce(a, b, c) {
        "focusin" === a ? (Ae(), qe = c, (pe = b).attachEvent("onpropertychange", Be)) : "focusout" === a && Ae();
      }
      function De(a) {
        if ("selectionchange" === a || "keyup" === a || "keydown" === a) return te(qe);
      }
      function Ee(a, b) {
        if ("click" === a) return te(b);
      }
      function Fe(a, b) {
        if ("input" === a || "change" === a) return te(b);
      }
      var He = "function" == typeof Object.is ? Object.is : function(a, b) {
        return a === b && (0 !== a || 1 / a == 1 / b) || a != a && b != b;
      };
      function Ie(a, b) {
        if (He(a, b)) return !0;
        if ("object" != typeof a || null === a || "object" != typeof b || null === b) return !1;
        var c = Object.keys(a), d = Object.keys(b);
        if (c.length !== d.length) return !1;
        for (d = 0; d < c.length; d++) {
          var e = c[d];
          if (!ja.call(b, e) || !He(a[e], b[e])) return !1;
        }
        return !0;
      }
      function Je(a) {
        for (;a && a.firstChild; ) a = a.firstChild;
        return a;
      }
      function Ke(a, b) {
        var d, c = Je(a);
        for (a = 0; c; ) {
          if (3 === c.nodeType) {
            if (d = a + c.textContent.length, a <= b && d >= b) return {
              node: c,
              offset: b - a
            };
            a = d;
          }
          a: {
            for (;c; ) {
              if (c.nextSibling) {
                c = c.nextSibling;
                break a;
              }
              c = c.parentNode;
            }
            c = void 0;
          }
          c = Je(c);
        }
      }
      function Le(a, b) {
        return !(!a || !b) && (a === b || (!a || 3 !== a.nodeType) && (b && 3 === b.nodeType ? Le(a, b.parentNode) : "contains" in a ? a.contains(b) : !!a.compareDocumentPosition && !!(16 & a.compareDocumentPosition(b))));
      }
      function Me() {
        for (var a = window, b = Xa(); b instanceof a.HTMLIFrameElement; ) {
          try {
            var c = "string" == typeof b.contentWindow.location.href;
          } catch (d) {
            c = !1;
          }
          if (!c) break;
          b = Xa((a = b.contentWindow).document);
        }
        return b;
      }
      function Ne(a) {
        var b = a && a.nodeName && a.nodeName.toLowerCase();
        return b && ("input" === b && ("text" === a.type || "search" === a.type || "tel" === a.type || "url" === a.type || "password" === a.type) || "textarea" === b || "true" === a.contentEditable);
      }
      function Oe(a) {
        var b = Me(), c = a.focusedElem, d = a.selectionRange;
        if (b !== c && c && c.ownerDocument && Le(c.ownerDocument.documentElement, c)) {
          if (null !== d && Ne(c)) if (b = d.start, void 0 === (a = d.end) && (a = b), "selectionStart" in c) c.selectionStart = b, 
          c.selectionEnd = Math.min(a, c.value.length); else if ((a = (b = c.ownerDocument || document) && b.defaultView || window).getSelection) {
            a = a.getSelection();
            var e = c.textContent.length, f = Math.min(d.start, e);
            d = void 0 === d.end ? f : Math.min(d.end, e), !a.extend && f > d && (e = d, d = f, 
            f = e), e = Ke(c, f);
            var g = Ke(c, d);
            e && g && (1 !== a.rangeCount || a.anchorNode !== e.node || a.anchorOffset !== e.offset || a.focusNode !== g.node || a.focusOffset !== g.offset) && ((b = b.createRange()).setStart(e.node, e.offset), 
            a.removeAllRanges(), f > d ? (a.addRange(b), a.extend(g.node, g.offset)) : (b.setEnd(g.node, g.offset), 
            a.addRange(b)));
          }
          for (b = [], a = c; a = a.parentNode; ) 1 === a.nodeType && b.push({
            element: a,
            left: a.scrollLeft,
            top: a.scrollTop
          });
          for ("function" == typeof c.focus && c.focus(), c = 0; c < b.length; c++) (a = b[c]).element.scrollLeft = a.left, 
          a.element.scrollTop = a.top;
        }
      }
      var Pe = ia && "documentMode" in document && 11 >= document.documentMode, Qe = null, Re = null, Se = null, Te = !1;
      function Ue(a, b, c) {
        var d = c.window === c ? c.document : 9 === c.nodeType ? c : c.ownerDocument;
        Te || null == Qe || Qe !== Xa(d) || ("selectionStart" in (d = Qe) && Ne(d) ? d = {
          start: d.selectionStart,
          end: d.selectionEnd
        } : d = {
          anchorNode: (d = (d.ownerDocument && d.ownerDocument.defaultView || window).getSelection()).anchorNode,
          anchorOffset: d.anchorOffset,
          focusNode: d.focusNode,
          focusOffset: d.focusOffset
        }, Se && Ie(Se, d) || (Se = d, 0 < (d = oe(Re, "onSelect")).length && (b = new td("onSelect", "select", null, b, c), 
        a.push({
          event: b,
          listeners: d
        }), b.target = Qe)));
      }
      function Ve(a, b) {
        var c = {};
        return c[a.toLowerCase()] = b.toLowerCase(), c["Webkit" + a] = "webkit" + b, c["Moz" + a] = "moz" + b, 
        c;
      }
      var We = {
        animationend: Ve("Animation", "AnimationEnd"),
        animationiteration: Ve("Animation", "AnimationIteration"),
        animationstart: Ve("Animation", "AnimationStart"),
        transitionend: Ve("Transition", "TransitionEnd")
      }, Xe = {}, Ye = {};
      function Ze(a) {
        if (Xe[a]) return Xe[a];
        if (!We[a]) return a;
        var c, b = We[a];
        for (c in b) if (b.hasOwnProperty(c) && c in Ye) return Xe[a] = b[c];
        return a;
      }
      ia && (Ye = document.createElement("div").style, "AnimationEvent" in window || (delete We.animationend.animation, 
      delete We.animationiteration.animation, delete We.animationstart.animation), "TransitionEvent" in window || delete We.transitionend.transition);
      var $e = Ze("animationend"), af = Ze("animationiteration"), bf = Ze("animationstart"), cf = Ze("transitionend"), df = new Map, ef = "abort auxClick cancel canPlay canPlayThrough click close contextMenu copy cut drag dragEnd dragEnter dragExit dragLeave dragOver dragStart drop durationChange emptied encrypted ended error gotPointerCapture input invalid keyDown keyPress keyUp load loadedData loadedMetadata loadStart lostPointerCapture mouseDown mouseMove mouseOut mouseOver mouseUp paste pause play playing pointerCancel pointerDown pointerMove pointerOut pointerOver pointerUp progress rateChange reset resize seeked seeking stalled submit suspend timeUpdate touchCancel touchEnd touchStart volumeChange scroll toggle touchMove waiting wheel".split(" ");
      function ff(a, b) {
        df.set(a, b), fa(b, [ a ]);
      }
      for (var gf = 0; gf < ef.length; gf++) {
        var hf = ef[gf];
        ff(hf.toLowerCase(), "on" + (hf[0].toUpperCase() + hf.slice(1)));
      }
      ff($e, "onAnimationEnd"), ff(af, "onAnimationIteration"), ff(bf, "onAnimationStart"), 
      ff("dblclick", "onDoubleClick"), ff("focusin", "onFocus"), ff("focusout", "onBlur"), 
      ff(cf, "onTransitionEnd"), ha("onMouseEnter", [ "mouseout", "mouseover" ]), ha("onMouseLeave", [ "mouseout", "mouseover" ]), 
      ha("onPointerEnter", [ "pointerout", "pointerover" ]), ha("onPointerLeave", [ "pointerout", "pointerover" ]), 
      fa("onChange", "change click focusin focusout input keydown keyup selectionchange".split(" ")), 
      fa("onSelect", "focusout contextmenu dragend focusin keydown keyup mousedown mouseup selectionchange".split(" ")), 
      fa("onBeforeInput", [ "compositionend", "keypress", "textInput", "paste" ]), fa("onCompositionEnd", "compositionend focusout keydown keypress keyup mousedown".split(" ")), 
      fa("onCompositionStart", "compositionstart focusout keydown keypress keyup mousedown".split(" ")), 
      fa("onCompositionUpdate", "compositionupdate focusout keydown keypress keyup mousedown".split(" "));
      var lf = "abort canplay canplaythrough durationchange emptied encrypted ended error loadeddata loadedmetadata loadstart pause play playing progress ratechange resize seeked seeking stalled suspend timeupdate volumechange waiting".split(" "), mf = new Set("cancel close invalid load scroll toggle".split(" ").concat(lf));
      function nf(a, b, c) {
        var d = a.type || "unknown-event";
        a.currentTarget = c, function(a, b, c, d, e, f, g, h, k) {
          if (Tb.apply(this, arguments), Ob) {
            if (!Ob) throw Error(p(198));
            var l = Pb;
            Ob = !1, Pb = null, Qb || (Qb = !0, Rb = l);
          }
        }(d, b, void 0, a), a.currentTarget = null;
      }
      function se(a, b) {
        b = 0 != (4 & b);
        for (var c = 0; c < a.length; c++) {
          var d = a[c], e = d.event;
          d = d.listeners;
          a: {
            var f = void 0;
            if (b) for (var g = d.length - 1; 0 <= g; g--) {
              var h = d[g], k = h.instance, l = h.currentTarget;
              if (h = h.listener, k !== f && e.isPropagationStopped()) break a;
              nf(e, h, l), f = k;
            } else for (g = 0; g < d.length; g++) {
              if (k = (h = d[g]).instance, l = h.currentTarget, h = h.listener, k !== f && e.isPropagationStopped()) break a;
              nf(e, h, l), f = k;
            }
          }
        }
        if (Qb) throw a = Rb, Qb = !1, Rb = null, a;
      }
      function D(a, b) {
        var c = b[of];
        void 0 === c && (c = b[of] = new Set);
        var d = a + "__bubble";
        c.has(d) || (pf(b, a, 2, !1), c.add(d));
      }
      function qf(a, b, c) {
        var d = 0;
        b && (d |= 4), pf(c, a, d, b);
      }
      var rf = "_reactListening" + Math.random().toString(36).slice(2);
      function sf(a) {
        if (!a[rf]) {
          a[rf] = !0, da.forEach((function(b) {
            "selectionchange" !== b && (mf.has(b) || qf(b, !1, a), qf(b, !0, a));
          }));
          var b = 9 === a.nodeType ? a : a.ownerDocument;
          null === b || b[rf] || (b[rf] = !0, qf("selectionchange", !1, b));
        }
      }
      function pf(a, b, c, d) {
        switch (jd(b)) {
         case 1:
          var e = ed;
          break;

         case 4:
          e = gd;
          break;

         default:
          e = fd;
        }
        c = e.bind(null, b, c, a), e = void 0, !Lb || "touchstart" !== b && "touchmove" !== b && "wheel" !== b || (e = !0), 
        d ? void 0 !== e ? a.addEventListener(b, c, {
          capture: !0,
          passive: e
        }) : a.addEventListener(b, c, !0) : void 0 !== e ? a.addEventListener(b, c, {
          passive: e
        }) : a.addEventListener(b, c, !1);
      }
      function hd(a, b, c, d, e) {
        var f = d;
        if (0 == (1 & b) && 0 == (2 & b) && null !== d) a: for (;;) {
          if (null === d) return;
          var g = d.tag;
          if (3 === g || 4 === g) {
            var h = d.stateNode.containerInfo;
            if (h === e || 8 === h.nodeType && h.parentNode === e) break;
            if (4 === g) for (g = d.return; null !== g; ) {
              var k = g.tag;
              if ((3 === k || 4 === k) && ((k = g.stateNode.containerInfo) === e || 8 === k.nodeType && k.parentNode === e)) return;
              g = g.return;
            }
            for (;null !== h; ) {
              if (null === (g = Wc(h))) return;
              if (5 === (k = g.tag) || 6 === k) {
                d = f = g;
                continue a;
              }
              h = h.parentNode;
            }
          }
          d = d.return;
        }
        Jb((function() {
          var d = f, e = xb(c), g = [];
          a: {
            var h = df.get(a);
            if (void 0 !== h) {
              var k = td, n = a;
              switch (a) {
               case "keypress":
                if (0 === od(c)) break a;

               case "keydown":
               case "keyup":
                k = Rd;
                break;

               case "focusin":
                n = "focus", k = Fd;
                break;

               case "focusout":
                n = "blur", k = Fd;
                break;

               case "beforeblur":
               case "afterblur":
                k = Fd;
                break;

               case "click":
                if (2 === c.button) break a;

               case "auxclick":
               case "dblclick":
               case "mousedown":
               case "mousemove":
               case "mouseup":
               case "mouseout":
               case "mouseover":
               case "contextmenu":
                k = Bd;
                break;

               case "drag":
               case "dragend":
               case "dragenter":
               case "dragexit":
               case "dragleave":
               case "dragover":
               case "dragstart":
               case "drop":
                k = Dd;
                break;

               case "touchcancel":
               case "touchend":
               case "touchmove":
               case "touchstart":
                k = Vd;
                break;

               case $e:
               case af:
               case bf:
                k = Hd;
                break;

               case cf:
                k = Xd;
                break;

               case "scroll":
                k = vd;
                break;

               case "wheel":
                k = Zd;
                break;

               case "copy":
               case "cut":
               case "paste":
                k = Jd;
                break;

               case "gotpointercapture":
               case "lostpointercapture":
               case "pointercancel":
               case "pointerdown":
               case "pointermove":
               case "pointerout":
               case "pointerover":
               case "pointerup":
                k = Td;
              }
              var t = 0 != (4 & b), J = !t && "scroll" === a, x = t ? null !== h ? h + "Capture" : null : h;
              t = [];
              for (var u, w = d; null !== w; ) {
                var F = (u = w).stateNode;
                if (5 === u.tag && null !== F && (u = F, null !== x && (null != (F = Kb(w, x)) && t.push(tf(w, F, u)))), 
                J) break;
                w = w.return;
              }
              0 < t.length && (h = new k(h, n, null, c, e), g.push({
                event: h,
                listeners: t
              }));
            }
          }
          if (0 == (7 & b)) {
            if (k = "mouseout" === a || "pointerout" === a, (!(h = "mouseover" === a || "pointerover" === a) || c === wb || !(n = c.relatedTarget || c.fromElement) || !Wc(n) && !n[uf]) && (k || h) && (h = e.window === e ? e : (h = e.ownerDocument) ? h.defaultView || h.parentWindow : window, 
            k ? (k = d, null !== (n = (n = c.relatedTarget || c.toElement) ? Wc(n) : null) && (n !== (J = Vb(n)) || 5 !== n.tag && 6 !== n.tag) && (n = null)) : (k = null, 
            n = d), k !== n)) {
              if (t = Bd, F = "onMouseLeave", x = "onMouseEnter", w = "mouse", "pointerout" !== a && "pointerover" !== a || (t = Td, 
              F = "onPointerLeave", x = "onPointerEnter", w = "pointer"), J = null == k ? h : ue(k), 
              u = null == n ? h : ue(n), (h = new t(F, w + "leave", k, c, e)).target = J, h.relatedTarget = u, 
              F = null, Wc(e) === d && ((t = new t(x, w + "enter", n, c, e)).target = u, t.relatedTarget = J, 
              F = t), J = F, k && n) b: {
                for (x = n, w = 0, u = t = k; u; u = vf(u)) w++;
                for (u = 0, F = x; F; F = vf(F)) u++;
                for (;0 < w - u; ) t = vf(t), w--;
                for (;0 < u - w; ) x = vf(x), u--;
                for (;w--; ) {
                  if (t === x || null !== x && t === x.alternate) break b;
                  t = vf(t), x = vf(x);
                }
                t = null;
              } else t = null;
              null !== k && wf(g, h, k, t, !1), null !== n && null !== J && wf(g, J, n, t, !0);
            }
            if ("select" === (k = (h = d ? ue(d) : window).nodeName && h.nodeName.toLowerCase()) || "input" === k && "file" === h.type) var na = ve; else if (me(h)) if (we) na = Fe; else {
              na = De;
              var xa = Ce;
            } else (k = h.nodeName) && "input" === k.toLowerCase() && ("checkbox" === h.type || "radio" === h.type) && (na = Ee);
            switch (na && (na = na(a, d)) ? ne(g, na, c, e) : (xa && xa(a, h, d), "focusout" === a && (xa = h._wrapperState) && xa.controlled && "number" === h.type && cb(h, "number", h.value)), 
            xa = d ? ue(d) : window, a) {
             case "focusin":
              (me(xa) || "true" === xa.contentEditable) && (Qe = xa, Re = d, Se = null);
              break;

             case "focusout":
              Se = Re = Qe = null;
              break;

             case "mousedown":
              Te = !0;
              break;

             case "contextmenu":
             case "mouseup":
             case "dragend":
              Te = !1, Ue(g, c, e);
              break;

             case "selectionchange":
              if (Pe) break;

             case "keydown":
             case "keyup":
              Ue(g, c, e);
            }
            var $a;
            if (ae) b: {
              switch (a) {
               case "compositionstart":
                var ba = "onCompositionStart";
                break b;

               case "compositionend":
                ba = "onCompositionEnd";
                break b;

               case "compositionupdate":
                ba = "onCompositionUpdate";
                break b;
              }
              ba = void 0;
            } else ie ? ge(a, c) && (ba = "onCompositionEnd") : "keydown" === a && 229 === c.keyCode && (ba = "onCompositionStart");
            ba && (de && "ko" !== c.locale && (ie || "onCompositionStart" !== ba ? "onCompositionEnd" === ba && ie && ($a = nd()) : (ld = "value" in (kd = e) ? kd.value : kd.textContent, 
            ie = !0)), 0 < (xa = oe(d, ba)).length && (ba = new Ld(ba, a, null, c, e), g.push({
              event: ba,
              listeners: xa
            }), $a ? ba.data = $a : null !== ($a = he(c)) && (ba.data = $a))), ($a = ce ? function(a, b) {
              switch (a) {
               case "compositionend":
                return he(b);

               case "keypress":
                return 32 !== b.which ? null : (fe = !0, ee);

               case "textInput":
                return (a = b.data) === ee && fe ? null : a;

               default:
                return null;
              }
            }(a, c) : function(a, b) {
              if (ie) return "compositionend" === a || !ae && ge(a, b) ? (a = nd(), md = ld = kd = null, 
              ie = !1, a) : null;
              switch (a) {
               case "paste":
               default:
                return null;

               case "keypress":
                if (!(b.ctrlKey || b.altKey || b.metaKey) || b.ctrlKey && b.altKey) {
                  if (b.char && 1 < b.char.length) return b.char;
                  if (b.which) return String.fromCharCode(b.which);
                }
                return null;

               case "compositionend":
                return de && "ko" !== b.locale ? null : b.data;
              }
            }(a, c)) && (0 < (d = oe(d, "onBeforeInput")).length && (e = new Ld("onBeforeInput", "beforeinput", null, c, e), 
            g.push({
              event: e,
              listeners: d
            }), e.data = $a));
          }
          se(g, b);
        }));
      }
      function tf(a, b, c) {
        return {
          instance: a,
          listener: b,
          currentTarget: c
        };
      }
      function oe(a, b) {
        for (var c = b + "Capture", d = []; null !== a; ) {
          var e = a, f = e.stateNode;
          5 === e.tag && null !== f && (e = f, null != (f = Kb(a, c)) && d.unshift(tf(a, f, e)), 
          null != (f = Kb(a, b)) && d.push(tf(a, f, e))), a = a.return;
        }
        return d;
      }
      function vf(a) {
        if (null === a) return null;
        do {
          a = a.return;
        } while (a && 5 !== a.tag);
        return a || null;
      }
      function wf(a, b, c, d, e) {
        for (var f = b._reactName, g = []; null !== c && c !== d; ) {
          var h = c, k = h.alternate, l = h.stateNode;
          if (null !== k && k === d) break;
          5 === h.tag && null !== l && (h = l, e ? null != (k = Kb(c, f)) && g.unshift(tf(c, k, h)) : e || null != (k = Kb(c, f)) && g.push(tf(c, k, h))), 
          c = c.return;
        }
        0 !== g.length && a.push({
          event: b,
          listeners: g
        });
      }
      var xf = /\r\n?/g, yf = /\u0000|\uFFFD/g;
      function zf(a) {
        return ("string" == typeof a ? a : "" + a).replace(xf, "\n").replace(yf, "");
      }
      function Af(a, b, c) {
        if (b = zf(b), zf(a) !== b && c) throw Error(p(425));
      }
      function Bf() {}
      var Cf = null, Df = null;
      function Ef(a, b) {
        return "textarea" === a || "noscript" === a || "string" == typeof b.children || "number" == typeof b.children || "object" == typeof b.dangerouslySetInnerHTML && null !== b.dangerouslySetInnerHTML && null != b.dangerouslySetInnerHTML.__html;
      }
      var Ff = "function" == typeof setTimeout ? setTimeout : void 0, Gf = "function" == typeof clearTimeout ? clearTimeout : void 0, Hf = "function" == typeof Promise ? Promise : void 0, Jf = "function" == typeof queueMicrotask ? queueMicrotask : void 0 !== Hf ? function(a) {
        return Hf.resolve(null).then(a).catch(If);
      } : Ff;
      function If(a) {
        setTimeout((function() {
          throw a;
        }));
      }
      function Kf(a, b) {
        var c = b, d = 0;
        do {
          var e = c.nextSibling;
          if (a.removeChild(c), e && 8 === e.nodeType) if ("/$" === (c = e.data)) {
            if (0 === d) return a.removeChild(e), void bd(b);
            d--;
          } else "$" !== c && "$?" !== c && "$!" !== c || d++;
          c = e;
        } while (c);
        bd(b);
      }
      function Lf(a) {
        for (;null != a; a = a.nextSibling) {
          var b = a.nodeType;
          if (1 === b || 3 === b) break;
          if (8 === b) {
            if ("$" === (b = a.data) || "$!" === b || "$?" === b) break;
            if ("/$" === b) return null;
          }
        }
        return a;
      }
      function Mf(a) {
        a = a.previousSibling;
        for (var b = 0; a; ) {
          if (8 === a.nodeType) {
            var c = a.data;
            if ("$" === c || "$!" === c || "$?" === c) {
              if (0 === b) return a;
              b--;
            } else "/$" === c && b++;
          }
          a = a.previousSibling;
        }
        return null;
      }
      var Nf = Math.random().toString(36).slice(2), Of = "__reactFiber$" + Nf, Pf = "__reactProps$" + Nf, uf = "__reactContainer$" + Nf, of = "__reactEvents$" + Nf, Qf = "__reactListeners$" + Nf, Rf = "__reactHandles$" + Nf;
      function Wc(a) {
        var b = a[Of];
        if (b) return b;
        for (var c = a.parentNode; c; ) {
          if (b = c[uf] || c[Of]) {
            if (c = b.alternate, null !== b.child || null !== c && null !== c.child) for (a = Mf(a); null !== a; ) {
              if (c = a[Of]) return c;
              a = Mf(a);
            }
            return b;
          }
          c = (a = c).parentNode;
        }
        return null;
      }
      function Cb(a) {
        return !(a = a[Of] || a[uf]) || 5 !== a.tag && 6 !== a.tag && 13 !== a.tag && 3 !== a.tag ? null : a;
      }
      function ue(a) {
        if (5 === a.tag || 6 === a.tag) return a.stateNode;
        throw Error(p(33));
      }
      function Db(a) {
        return a[Pf] || null;
      }
      var Sf = [], Tf = -1;
      function Uf(a) {
        return {
          current: a
        };
      }
      function E(a) {
        0 > Tf || (a.current = Sf[Tf], Sf[Tf] = null, Tf--);
      }
      function G(a, b) {
        Tf++, Sf[Tf] = a.current, a.current = b;
      }
      var Vf = {}, H = Uf(Vf), Wf = Uf(!1), Xf = Vf;
      function Yf(a, b) {
        var c = a.type.contextTypes;
        if (!c) return Vf;
        var d = a.stateNode;
        if (d && d.__reactInternalMemoizedUnmaskedChildContext === b) return d.__reactInternalMemoizedMaskedChildContext;
        var f, e = {};
        for (f in c) e[f] = b[f];
        return d && ((a = a.stateNode).__reactInternalMemoizedUnmaskedChildContext = b, 
        a.__reactInternalMemoizedMaskedChildContext = e), e;
      }
      function Zf(a) {
        return null != (a = a.childContextTypes);
      }
      function $f() {
        E(Wf), E(H);
      }
      function ag(a, b, c) {
        if (H.current !== Vf) throw Error(p(168));
        G(H, b), G(Wf, c);
      }
      function bg(a, b, c) {
        var d = a.stateNode;
        if (b = b.childContextTypes, "function" != typeof d.getChildContext) return c;
        for (var e in d = d.getChildContext()) if (!(e in b)) throw Error(p(108, Ra(a) || "Unknown", e));
        return A({}, c, d);
      }
      function cg(a) {
        return a = (a = a.stateNode) && a.__reactInternalMemoizedMergedChildContext || Vf, 
        Xf = H.current, G(H, a), G(Wf, Wf.current), !0;
      }
      function dg(a, b, c) {
        var d = a.stateNode;
        if (!d) throw Error(p(169));
        c ? (a = bg(a, b, Xf), d.__reactInternalMemoizedMergedChildContext = a, E(Wf), E(H), 
        G(H, a)) : E(Wf), G(Wf, c);
      }
      var eg = null, fg = !1, gg = !1;
      function hg(a) {
        null === eg ? eg = [ a ] : eg.push(a);
      }
      function jg() {
        if (!gg && null !== eg) {
          gg = !0;
          var a = 0, b = C;
          try {
            var c = eg;
            for (C = 1; a < c.length; a++) {
              var d = c[a];
              do {
                d = d(!0);
              } while (null !== d);
            }
            eg = null, fg = !1;
          } catch (e) {
            throw null !== eg && (eg = eg.slice(a + 1)), ac(fc, jg), e;
          } finally {
            C = b, gg = !1;
          }
        }
        return null;
      }
      var kg = [], lg = 0, mg = null, ng = 0, og = [], pg = 0, qg = null, rg = 1, sg = "";
      function tg(a, b) {
        kg[lg++] = ng, kg[lg++] = mg, mg = a, ng = b;
      }
      function ug(a, b, c) {
        og[pg++] = rg, og[pg++] = sg, og[pg++] = qg, qg = a;
        var d = rg;
        a = sg;
        var e = 32 - oc(d) - 1;
        d &= ~(1 << e), c += 1;
        var f = 32 - oc(b) + e;
        if (30 < f) {
          var g = e - e % 5;
          f = (d & (1 << g) - 1).toString(32), d >>= g, e -= g, rg = 1 << 32 - oc(b) + e | c << e | d, 
          sg = f + a;
        } else rg = 1 << f | c << e | d, sg = a;
      }
      function vg(a) {
        null !== a.return && (tg(a, 1), ug(a, 1, 0));
      }
      function wg(a) {
        for (;a === mg; ) mg = kg[--lg], kg[lg] = null, ng = kg[--lg], kg[lg] = null;
        for (;a === qg; ) qg = og[--pg], og[pg] = null, sg = og[--pg], og[pg] = null, rg = og[--pg], 
        og[pg] = null;
      }
      var xg = null, yg = null, I = !1, zg = null;
      function Ag(a, b) {
        var c = Bg(5, null, null, 0);
        c.elementType = "DELETED", c.stateNode = b, c.return = a, null === (b = a.deletions) ? (a.deletions = [ c ], 
        a.flags |= 16) : b.push(c);
      }
      function Cg(a, b) {
        switch (a.tag) {
         case 5:
          var c = a.type;
          return null !== (b = 1 !== b.nodeType || c.toLowerCase() !== b.nodeName.toLowerCase() ? null : b) && (a.stateNode = b, 
          xg = a, yg = Lf(b.firstChild), !0);

         case 6:
          return null !== (b = "" === a.pendingProps || 3 !== b.nodeType ? null : b) && (a.stateNode = b, 
          xg = a, yg = null, !0);

         case 13:
          return null !== (b = 8 !== b.nodeType ? null : b) && (c = null !== qg ? {
            id: rg,
            overflow: sg
          } : null, a.memoizedState = {
            dehydrated: b,
            treeContext: c,
            retryLane: 1073741824
          }, (c = Bg(18, null, null, 0)).stateNode = b, c.return = a, a.child = c, xg = a, 
          yg = null, !0);

         default:
          return !1;
        }
      }
      function Dg(a) {
        return 0 != (1 & a.mode) && 0 == (128 & a.flags);
      }
      function Eg(a) {
        if (I) {
          var b = yg;
          if (b) {
            var c = b;
            if (!Cg(a, b)) {
              if (Dg(a)) throw Error(p(418));
              b = Lf(c.nextSibling);
              var d = xg;
              b && Cg(a, b) ? Ag(d, c) : (a.flags = -4097 & a.flags | 2, I = !1, xg = a);
            }
          } else {
            if (Dg(a)) throw Error(p(418));
            a.flags = -4097 & a.flags | 2, I = !1, xg = a;
          }
        }
      }
      function Fg(a) {
        for (a = a.return; null !== a && 5 !== a.tag && 3 !== a.tag && 13 !== a.tag; ) a = a.return;
        xg = a;
      }
      function Gg(a) {
        if (a !== xg) return !1;
        if (!I) return Fg(a), I = !0, !1;
        var b;
        if ((b = 3 !== a.tag) && !(b = 5 !== a.tag) && (b = "head" !== (b = a.type) && "body" !== b && !Ef(a.type, a.memoizedProps)), 
        b && (b = yg)) {
          if (Dg(a)) throw Hg(), Error(p(418));
          for (;b; ) Ag(a, b), b = Lf(b.nextSibling);
        }
        if (Fg(a), 13 === a.tag) {
          if (!(a = null !== (a = a.memoizedState) ? a.dehydrated : null)) throw Error(p(317));
          a: {
            for (a = a.nextSibling, b = 0; a; ) {
              if (8 === a.nodeType) {
                var c = a.data;
                if ("/$" === c) {
                  if (0 === b) {
                    yg = Lf(a.nextSibling);
                    break a;
                  }
                  b--;
                } else "$" !== c && "$!" !== c && "$?" !== c || b++;
              }
              a = a.nextSibling;
            }
            yg = null;
          }
        } else yg = xg ? Lf(a.stateNode.nextSibling) : null;
        return !0;
      }
      function Hg() {
        for (var a = yg; a; ) a = Lf(a.nextSibling);
      }
      function Ig() {
        yg = xg = null, I = !1;
      }
      function Jg(a) {
        null === zg ? zg = [ a ] : zg.push(a);
      }
      var Kg = ua.ReactCurrentBatchConfig;
      function Lg(a, b) {
        if (a && a.defaultProps) {
          for (var c in b = A({}, b), a = a.defaultProps) void 0 === b[c] && (b[c] = a[c]);
          return b;
        }
        return b;
      }
      var Mg = Uf(null), Ng = null, Og = null, Pg = null;
      function Qg() {
        Pg = Og = Ng = null;
      }
      function Rg(a) {
        var b = Mg.current;
        E(Mg), a._currentValue = b;
      }
      function Sg(a, b, c) {
        for (;null !== a; ) {
          var d = a.alternate;
          if ((a.childLanes & b) !== b ? (a.childLanes |= b, null !== d && (d.childLanes |= b)) : null !== d && (d.childLanes & b) !== b && (d.childLanes |= b), 
          a === c) break;
          a = a.return;
        }
      }
      function Tg(a, b) {
        Ng = a, Pg = Og = null, null !== (a = a.dependencies) && null !== a.firstContext && (0 != (a.lanes & b) && (Ug = !0), 
        a.firstContext = null);
      }
      function Vg(a) {
        var b = a._currentValue;
        if (Pg !== a) if (a = {
          context: a,
          memoizedValue: b,
          next: null
        }, null === Og) {
          if (null === Ng) throw Error(p(308));
          Og = a, Ng.dependencies = {
            lanes: 0,
            firstContext: a
          };
        } else Og = Og.next = a;
        return b;
      }
      var Wg = null;
      function Xg(a) {
        null === Wg ? Wg = [ a ] : Wg.push(a);
      }
      function Yg(a, b, c, d) {
        var e = b.interleaved;
        return null === e ? (c.next = c, Xg(b)) : (c.next = e.next, e.next = c), b.interleaved = c, 
        Zg(a, d);
      }
      function Zg(a, b) {
        a.lanes |= b;
        var c = a.alternate;
        for (null !== c && (c.lanes |= b), c = a, a = a.return; null !== a; ) a.childLanes |= b, 
        null !== (c = a.alternate) && (c.childLanes |= b), c = a, a = a.return;
        return 3 === c.tag ? c.stateNode : null;
      }
      var $g = !1;
      function ah(a) {
        a.updateQueue = {
          baseState: a.memoizedState,
          firstBaseUpdate: null,
          lastBaseUpdate: null,
          shared: {
            pending: null,
            interleaved: null,
            lanes: 0
          },
          effects: null
        };
      }
      function bh(a, b) {
        a = a.updateQueue, b.updateQueue === a && (b.updateQueue = {
          baseState: a.baseState,
          firstBaseUpdate: a.firstBaseUpdate,
          lastBaseUpdate: a.lastBaseUpdate,
          shared: a.shared,
          effects: a.effects
        });
      }
      function ch(a, b) {
        return {
          eventTime: a,
          lane: b,
          tag: 0,
          payload: null,
          callback: null,
          next: null
        };
      }
      function dh(a, b, c) {
        var d = a.updateQueue;
        if (null === d) return null;
        if (d = d.shared, 0 != (2 & K)) {
          var e = d.pending;
          return null === e ? b.next = b : (b.next = e.next, e.next = b), d.pending = b, Zg(a, c);
        }
        return null === (e = d.interleaved) ? (b.next = b, Xg(d)) : (b.next = e.next, e.next = b), 
        d.interleaved = b, Zg(a, c);
      }
      function eh(a, b, c) {
        if (null !== (b = b.updateQueue) && (b = b.shared, 0 != (4194240 & c))) {
          var d = b.lanes;
          c |= d &= a.pendingLanes, b.lanes = c, Cc(a, c);
        }
      }
      function fh(a, b) {
        var c = a.updateQueue, d = a.alternate;
        if (null !== d && c === (d = d.updateQueue)) {
          var e = null, f = null;
          if (null !== (c = c.firstBaseUpdate)) {
            do {
              var g = {
                eventTime: c.eventTime,
                lane: c.lane,
                tag: c.tag,
                payload: c.payload,
                callback: c.callback,
                next: null
              };
              null === f ? e = f = g : f = f.next = g, c = c.next;
            } while (null !== c);
            null === f ? e = f = b : f = f.next = b;
          } else e = f = b;
          return c = {
            baseState: d.baseState,
            firstBaseUpdate: e,
            lastBaseUpdate: f,
            shared: d.shared,
            effects: d.effects
          }, void (a.updateQueue = c);
        }
        null === (a = c.lastBaseUpdate) ? c.firstBaseUpdate = b : a.next = b, c.lastBaseUpdate = b;
      }
      function gh(a, b, c, d) {
        var e = a.updateQueue;
        $g = !1;
        var f = e.firstBaseUpdate, g = e.lastBaseUpdate, h = e.shared.pending;
        if (null !== h) {
          e.shared.pending = null;
          var k = h, l = k.next;
          k.next = null, null === g ? f = l : g.next = l, g = k;
          var m = a.alternate;
          null !== m && ((h = (m = m.updateQueue).lastBaseUpdate) !== g && (null === h ? m.firstBaseUpdate = l : h.next = l, 
          m.lastBaseUpdate = k));
        }
        if (null !== f) {
          var q = e.baseState;
          for (g = 0, m = l = k = null, h = f; ;) {
            var r = h.lane, y = h.eventTime;
            if ((d & r) === r) {
              null !== m && (m = m.next = {
                eventTime: y,
                lane: 0,
                tag: h.tag,
                payload: h.payload,
                callback: h.callback,
                next: null
              });
              a: {
                var n = a, t = h;
                switch (r = b, y = c, t.tag) {
                 case 1:
                  if ("function" == typeof (n = t.payload)) {
                    q = n.call(y, q, r);
                    break a;
                  }
                  q = n;
                  break a;

                 case 3:
                  n.flags = -65537 & n.flags | 128;

                 case 0:
                  if (null == (r = "function" == typeof (n = t.payload) ? n.call(y, q, r) : n)) break a;
                  q = A({}, q, r);
                  break a;

                 case 2:
                  $g = !0;
                }
              }
              null !== h.callback && 0 !== h.lane && (a.flags |= 64, null === (r = e.effects) ? e.effects = [ h ] : r.push(h));
            } else y = {
              eventTime: y,
              lane: r,
              tag: h.tag,
              payload: h.payload,
              callback: h.callback,
              next: null
            }, null === m ? (l = m = y, k = q) : m = m.next = y, g |= r;
            if (null === (h = h.next)) {
              if (null === (h = e.shared.pending)) break;
              h = (r = h).next, r.next = null, e.lastBaseUpdate = r, e.shared.pending = null;
            }
          }
          if (null === m && (k = q), e.baseState = k, e.firstBaseUpdate = l, e.lastBaseUpdate = m, 
          null !== (b = e.shared.interleaved)) {
            e = b;
            do {
              g |= e.lane, e = e.next;
            } while (e !== b);
          } else null === f && (e.shared.lanes = 0);
          hh |= g, a.lanes = g, a.memoizedState = q;
        }
      }
      function ih(a, b, c) {
        if (a = b.effects, b.effects = null, null !== a) for (b = 0; b < a.length; b++) {
          var d = a[b], e = d.callback;
          if (null !== e) {
            if (d.callback = null, d = c, "function" != typeof e) throw Error(p(191, e));
            e.call(d);
          }
        }
      }
      var jh = (new aa.Component).refs;
      function kh(a, b, c, d) {
        c = null == (c = c(d, b = a.memoizedState)) ? b : A({}, b, c), a.memoizedState = c, 
        0 === a.lanes && (a.updateQueue.baseState = c);
      }
      var nh = {
        isMounted: function(a) {
          return !!(a = a._reactInternals) && Vb(a) === a;
        },
        enqueueSetState: function(a, b, c) {
          a = a._reactInternals;
          var d = L(), e = lh(a), f = ch(d, e);
          f.payload = b, null != c && (f.callback = c), null !== (b = dh(a, f, e)) && (mh(b, a, e, d), 
          eh(b, a, e));
        },
        enqueueReplaceState: function(a, b, c) {
          a = a._reactInternals;
          var d = L(), e = lh(a), f = ch(d, e);
          f.tag = 1, f.payload = b, null != c && (f.callback = c), null !== (b = dh(a, f, e)) && (mh(b, a, e, d), 
          eh(b, a, e));
        },
        enqueueForceUpdate: function(a, b) {
          a = a._reactInternals;
          var c = L(), d = lh(a), e = ch(c, d);
          e.tag = 2, null != b && (e.callback = b), null !== (b = dh(a, e, d)) && (mh(b, a, d, c), 
          eh(b, a, d));
        }
      };
      function oh(a, b, c, d, e, f, g) {
        return "function" == typeof (a = a.stateNode).shouldComponentUpdate ? a.shouldComponentUpdate(d, f, g) : !b.prototype || !b.prototype.isPureReactComponent || (!Ie(c, d) || !Ie(e, f));
      }
      function ph(a, b, c) {
        var d = !1, e = Vf, f = b.contextType;
        return "object" == typeof f && null !== f ? f = Vg(f) : (e = Zf(b) ? Xf : H.current, 
        f = (d = null != (d = b.contextTypes)) ? Yf(a, e) : Vf), b = new b(c, f), a.memoizedState = null !== b.state && void 0 !== b.state ? b.state : null, 
        b.updater = nh, a.stateNode = b, b._reactInternals = a, d && ((a = a.stateNode).__reactInternalMemoizedUnmaskedChildContext = e, 
        a.__reactInternalMemoizedMaskedChildContext = f), b;
      }
      function qh(a, b, c, d) {
        a = b.state, "function" == typeof b.componentWillReceiveProps && b.componentWillReceiveProps(c, d), 
        "function" == typeof b.UNSAFE_componentWillReceiveProps && b.UNSAFE_componentWillReceiveProps(c, d), 
        b.state !== a && nh.enqueueReplaceState(b, b.state, null);
      }
      function rh(a, b, c, d) {
        var e = a.stateNode;
        e.props = c, e.state = a.memoizedState, e.refs = jh, ah(a);
        var f = b.contextType;
        "object" == typeof f && null !== f ? e.context = Vg(f) : (f = Zf(b) ? Xf : H.current, 
        e.context = Yf(a, f)), e.state = a.memoizedState, "function" == typeof (f = b.getDerivedStateFromProps) && (kh(a, b, f, c), 
        e.state = a.memoizedState), "function" == typeof b.getDerivedStateFromProps || "function" == typeof e.getSnapshotBeforeUpdate || "function" != typeof e.UNSAFE_componentWillMount && "function" != typeof e.componentWillMount || (b = e.state, 
        "function" == typeof e.componentWillMount && e.componentWillMount(), "function" == typeof e.UNSAFE_componentWillMount && e.UNSAFE_componentWillMount(), 
        b !== e.state && nh.enqueueReplaceState(e, e.state, null), gh(a, c, e, d), e.state = a.memoizedState), 
        "function" == typeof e.componentDidMount && (a.flags |= 4194308);
      }
      function sh(a, b, c) {
        if (null !== (a = c.ref) && "function" != typeof a && "object" != typeof a) {
          if (c._owner) {
            if (c = c._owner) {
              if (1 !== c.tag) throw Error(p(309));
              var d = c.stateNode;
            }
            if (!d) throw Error(p(147, a));
            var e = d, f = "" + a;
            return null !== b && null !== b.ref && "function" == typeof b.ref && b.ref._stringRef === f ? b.ref : (b = function(a) {
              var b = e.refs;
              b === jh && (b = e.refs = {}), null === a ? delete b[f] : b[f] = a;
            }, b._stringRef = f, b);
          }
          if ("string" != typeof a) throw Error(p(284));
          if (!c._owner) throw Error(p(290, a));
        }
        return a;
      }
      function th(a, b) {
        throw a = Object.prototype.toString.call(b), Error(p(31, "[object Object]" === a ? "object with keys {" + Object.keys(b).join(", ") + "}" : a));
      }
      function uh(a) {
        return (0, a._init)(a._payload);
      }
      function vh(a) {
        function b(b, c) {
          if (a) {
            var d = b.deletions;
            null === d ? (b.deletions = [ c ], b.flags |= 16) : d.push(c);
          }
        }
        function c(c, d) {
          if (!a) return null;
          for (;null !== d; ) b(c, d), d = d.sibling;
          return null;
        }
        function d(a, b) {
          for (a = new Map; null !== b; ) null !== b.key ? a.set(b.key, b) : a.set(b.index, b), 
          b = b.sibling;
          return a;
        }
        function e(a, b) {
          return (a = wh(a, b)).index = 0, a.sibling = null, a;
        }
        function f(b, c, d) {
          return b.index = d, a ? null !== (d = b.alternate) ? (d = d.index) < c ? (b.flags |= 2, 
          c) : d : (b.flags |= 2, c) : (b.flags |= 1048576, c);
        }
        function g(b) {
          return a && null === b.alternate && (b.flags |= 2), b;
        }
        function h(a, b, c, d) {
          return null === b || 6 !== b.tag ? ((b = xh(c, a.mode, d)).return = a, b) : ((b = e(b, c)).return = a, 
          b);
        }
        function k(a, b, c, d) {
          var f = c.type;
          return f === ya ? m(a, b, c.props.children, d, c.key) : null !== b && (b.elementType === f || "object" == typeof f && null !== f && f.$$typeof === Ha && uh(f) === b.type) ? ((d = e(b, c.props)).ref = sh(a, b, c), 
          d.return = a, d) : ((d = yh(c.type, c.key, c.props, null, a.mode, d)).ref = sh(a, b, c), 
          d.return = a, d);
        }
        function l(a, b, c, d) {
          return null === b || 4 !== b.tag || b.stateNode.containerInfo !== c.containerInfo || b.stateNode.implementation !== c.implementation ? ((b = zh(c, a.mode, d)).return = a, 
          b) : ((b = e(b, c.children || [])).return = a, b);
        }
        function m(a, b, c, d, f) {
          return null === b || 7 !== b.tag ? ((b = Ah(c, a.mode, d, f)).return = a, b) : ((b = e(b, c)).return = a, 
          b);
        }
        function q(a, b, c) {
          if ("string" == typeof b && "" !== b || "number" == typeof b) return (b = xh("" + b, a.mode, c)).return = a, 
          b;
          if ("object" == typeof b && null !== b) {
            switch (b.$$typeof) {
             case va:
              return (c = yh(b.type, b.key, b.props, null, a.mode, c)).ref = sh(a, null, b), c.return = a, 
              c;

             case wa:
              return (b = zh(b, a.mode, c)).return = a, b;

             case Ha:
              return q(a, (0, b._init)(b._payload), c);
            }
            if (eb(b) || Ka(b)) return (b = Ah(b, a.mode, c, null)).return = a, b;
            th(a, b);
          }
          return null;
        }
        function r(a, b, c, d) {
          var e = null !== b ? b.key : null;
          if ("string" == typeof c && "" !== c || "number" == typeof c) return null !== e ? null : h(a, b, "" + c, d);
          if ("object" == typeof c && null !== c) {
            switch (c.$$typeof) {
             case va:
              return c.key === e ? k(a, b, c, d) : null;

             case wa:
              return c.key === e ? l(a, b, c, d) : null;

             case Ha:
              return r(a, b, (e = c._init)(c._payload), d);
            }
            if (eb(c) || Ka(c)) return null !== e ? null : m(a, b, c, d, null);
            th(a, c);
          }
          return null;
        }
        function y(a, b, c, d, e) {
          if ("string" == typeof d && "" !== d || "number" == typeof d) return h(b, a = a.get(c) || null, "" + d, e);
          if ("object" == typeof d && null !== d) {
            switch (d.$$typeof) {
             case va:
              return k(b, a = a.get(null === d.key ? c : d.key) || null, d, e);

             case wa:
              return l(b, a = a.get(null === d.key ? c : d.key) || null, d, e);

             case Ha:
              return y(a, b, c, (0, d._init)(d._payload), e);
            }
            if (eb(d) || Ka(d)) return m(b, a = a.get(c) || null, d, e, null);
            th(b, d);
          }
          return null;
        }
        function n(e, g, h, k) {
          for (var l = null, m = null, u = g, w = g = 0, x = null; null !== u && w < h.length; w++) {
            u.index > w ? (x = u, u = null) : x = u.sibling;
            var n = r(e, u, h[w], k);
            if (null === n) {
              null === u && (u = x);
              break;
            }
            a && u && null === n.alternate && b(e, u), g = f(n, g, w), null === m ? l = n : m.sibling = n, 
            m = n, u = x;
          }
          if (w === h.length) return c(e, u), I && tg(e, w), l;
          if (null === u) {
            for (;w < h.length; w++) null !== (u = q(e, h[w], k)) && (g = f(u, g, w), null === m ? l = u : m.sibling = u, 
            m = u);
            return I && tg(e, w), l;
          }
          for (u = d(e, u); w < h.length; w++) null !== (x = y(u, e, w, h[w], k)) && (a && null !== x.alternate && u.delete(null === x.key ? w : x.key), 
          g = f(x, g, w), null === m ? l = x : m.sibling = x, m = x);
          return a && u.forEach((function(a) {
            return b(e, a);
          })), I && tg(e, w), l;
        }
        function t(e, g, h, k) {
          var l = Ka(h);
          if ("function" != typeof l) throw Error(p(150));
          if (null == (h = l.call(h))) throw Error(p(151));
          for (var u = l = null, m = g, w = g = 0, x = null, n = h.next(); null !== m && !n.done; w++, 
          n = h.next()) {
            m.index > w ? (x = m, m = null) : x = m.sibling;
            var t = r(e, m, n.value, k);
            if (null === t) {
              null === m && (m = x);
              break;
            }
            a && m && null === t.alternate && b(e, m), g = f(t, g, w), null === u ? l = t : u.sibling = t, 
            u = t, m = x;
          }
          if (n.done) return c(e, m), I && tg(e, w), l;
          if (null === m) {
            for (;!n.done; w++, n = h.next()) null !== (n = q(e, n.value, k)) && (g = f(n, g, w), 
            null === u ? l = n : u.sibling = n, u = n);
            return I && tg(e, w), l;
          }
          for (m = d(e, m); !n.done; w++, n = h.next()) null !== (n = y(m, e, w, n.value, k)) && (a && null !== n.alternate && m.delete(null === n.key ? w : n.key), 
          g = f(n, g, w), null === u ? l = n : u.sibling = n, u = n);
          return a && m.forEach((function(a) {
            return b(e, a);
          })), I && tg(e, w), l;
        }
        return function J(a, d, f, h) {
          if ("object" == typeof f && null !== f && f.type === ya && null === f.key && (f = f.props.children), 
          "object" == typeof f && null !== f) {
            switch (f.$$typeof) {
             case va:
              a: {
                for (var k = f.key, l = d; null !== l; ) {
                  if (l.key === k) {
                    if ((k = f.type) === ya) {
                      if (7 === l.tag) {
                        c(a, l.sibling), (d = e(l, f.props.children)).return = a, a = d;
                        break a;
                      }
                    } else if (l.elementType === k || "object" == typeof k && null !== k && k.$$typeof === Ha && uh(k) === l.type) {
                      c(a, l.sibling), (d = e(l, f.props)).ref = sh(a, l, f), d.return = a, a = d;
                      break a;
                    }
                    c(a, l);
                    break;
                  }
                  b(a, l), l = l.sibling;
                }
                f.type === ya ? ((d = Ah(f.props.children, a.mode, h, f.key)).return = a, a = d) : ((h = yh(f.type, f.key, f.props, null, a.mode, h)).ref = sh(a, d, f), 
                h.return = a, a = h);
              }
              return g(a);

             case wa:
              a: {
                for (l = f.key; null !== d; ) {
                  if (d.key === l) {
                    if (4 === d.tag && d.stateNode.containerInfo === f.containerInfo && d.stateNode.implementation === f.implementation) {
                      c(a, d.sibling), (d = e(d, f.children || [])).return = a, a = d;
                      break a;
                    }
                    c(a, d);
                    break;
                  }
                  b(a, d), d = d.sibling;
                }
                (d = zh(f, a.mode, h)).return = a, a = d;
              }
              return g(a);

             case Ha:
              return J(a, d, (l = f._init)(f._payload), h);
            }
            if (eb(f)) return n(a, d, f, h);
            if (Ka(f)) return t(a, d, f, h);
            th(a, f);
          }
          return "string" == typeof f && "" !== f || "number" == typeof f ? (f = "" + f, null !== d && 6 === d.tag ? (c(a, d.sibling), 
          (d = e(d, f)).return = a, a = d) : (c(a, d), (d = xh(f, a.mode, h)).return = a, 
          a = d), g(a)) : c(a, d);
        };
      }
      var Bh = vh(!0), Ch = vh(!1), Dh = {}, Eh = Uf(Dh), Fh = Uf(Dh), Gh = Uf(Dh);
      function Hh(a) {
        if (a === Dh) throw Error(p(174));
        return a;
      }
      function Ih(a, b) {
        switch (G(Gh, b), G(Fh, a), G(Eh, Dh), a = b.nodeType) {
         case 9:
         case 11:
          b = (b = b.documentElement) ? b.namespaceURI : lb(null, "");
          break;

         default:
          b = lb(b = (a = 8 === a ? b.parentNode : b).namespaceURI || null, a = a.tagName);
        }
        E(Eh), G(Eh, b);
      }
      function Jh() {
        E(Eh), E(Fh), E(Gh);
      }
      function Kh(a) {
        Hh(Gh.current);
        var b = Hh(Eh.current), c = lb(b, a.type);
        b !== c && (G(Fh, a), G(Eh, c));
      }
      function Lh(a) {
        Fh.current === a && (E(Eh), E(Fh));
      }
      var M = Uf(0);
      function Mh(a) {
        for (var b = a; null !== b; ) {
          if (13 === b.tag) {
            var c = b.memoizedState;
            if (null !== c && (null === (c = c.dehydrated) || "$?" === c.data || "$!" === c.data)) return b;
          } else if (19 === b.tag && void 0 !== b.memoizedProps.revealOrder) {
            if (0 != (128 & b.flags)) return b;
          } else if (null !== b.child) {
            b.child.return = b, b = b.child;
            continue;
          }
          if (b === a) break;
          for (;null === b.sibling; ) {
            if (null === b.return || b.return === a) return null;
            b = b.return;
          }
          b.sibling.return = b.return, b = b.sibling;
        }
        return null;
      }
      var Nh = [];
      function Oh() {
        for (var a = 0; a < Nh.length; a++) Nh[a]._workInProgressVersionPrimary = null;
        Nh.length = 0;
      }
      var Ph = ua.ReactCurrentDispatcher, Qh = ua.ReactCurrentBatchConfig, Rh = 0, N = null, O = null, P = null, Sh = !1, Th = !1, Uh = 0, Vh = 0;
      function Q() {
        throw Error(p(321));
      }
      function Wh(a, b) {
        if (null === b) return !1;
        for (var c = 0; c < b.length && c < a.length; c++) if (!He(a[c], b[c])) return !1;
        return !0;
      }
      function Xh(a, b, c, d, e, f) {
        if (Rh = f, N = b, b.memoizedState = null, b.updateQueue = null, b.lanes = 0, Ph.current = null === a || null === a.memoizedState ? Yh : Zh, 
        a = c(d, e), Th) {
          f = 0;
          do {
            if (Th = !1, Uh = 0, 25 <= f) throw Error(p(301));
            f += 1, P = O = null, b.updateQueue = null, Ph.current = $h, a = c(d, e);
          } while (Th);
        }
        if (Ph.current = ai, b = null !== O && null !== O.next, Rh = 0, P = O = N = null, 
        Sh = !1, b) throw Error(p(300));
        return a;
      }
      function bi() {
        var a = 0 !== Uh;
        return Uh = 0, a;
      }
      function ci() {
        var a = {
          memoizedState: null,
          baseState: null,
          baseQueue: null,
          queue: null,
          next: null
        };
        return null === P ? N.memoizedState = P = a : P = P.next = a, P;
      }
      function di() {
        if (null === O) {
          var a = N.alternate;
          a = null !== a ? a.memoizedState : null;
        } else a = O.next;
        var b = null === P ? N.memoizedState : P.next;
        if (null !== b) P = b, O = a; else {
          if (null === a) throw Error(p(310));
          a = {
            memoizedState: (O = a).memoizedState,
            baseState: O.baseState,
            baseQueue: O.baseQueue,
            queue: O.queue,
            next: null
          }, null === P ? N.memoizedState = P = a : P = P.next = a;
        }
        return P;
      }
      function ei(a, b) {
        return "function" == typeof b ? b(a) : b;
      }
      function fi(a) {
        var b = di(), c = b.queue;
        if (null === c) throw Error(p(311));
        c.lastRenderedReducer = a;
        var d = O, e = d.baseQueue, f = c.pending;
        if (null !== f) {
          if (null !== e) {
            var g = e.next;
            e.next = f.next, f.next = g;
          }
          d.baseQueue = e = f, c.pending = null;
        }
        if (null !== e) {
          f = e.next, d = d.baseState;
          var h = g = null, k = null, l = f;
          do {
            var m = l.lane;
            if ((Rh & m) === m) null !== k && (k = k.next = {
              lane: 0,
              action: l.action,
              hasEagerState: l.hasEagerState,
              eagerState: l.eagerState,
              next: null
            }), d = l.hasEagerState ? l.eagerState : a(d, l.action); else {
              var q = {
                lane: m,
                action: l.action,
                hasEagerState: l.hasEagerState,
                eagerState: l.eagerState,
                next: null
              };
              null === k ? (h = k = q, g = d) : k = k.next = q, N.lanes |= m, hh |= m;
            }
            l = l.next;
          } while (null !== l && l !== f);
          null === k ? g = d : k.next = h, He(d, b.memoizedState) || (Ug = !0), b.memoizedState = d, 
          b.baseState = g, b.baseQueue = k, c.lastRenderedState = d;
        }
        if (null !== (a = c.interleaved)) {
          e = a;
          do {
            f = e.lane, N.lanes |= f, hh |= f, e = e.next;
          } while (e !== a);
        } else null === e && (c.lanes = 0);
        return [ b.memoizedState, c.dispatch ];
      }
      function gi(a) {
        var b = di(), c = b.queue;
        if (null === c) throw Error(p(311));
        c.lastRenderedReducer = a;
        var d = c.dispatch, e = c.pending, f = b.memoizedState;
        if (null !== e) {
          c.pending = null;
          var g = e = e.next;
          do {
            f = a(f, g.action), g = g.next;
          } while (g !== e);
          He(f, b.memoizedState) || (Ug = !0), b.memoizedState = f, null === b.baseQueue && (b.baseState = f), 
          c.lastRenderedState = f;
        }
        return [ f, d ];
      }
      function hi() {}
      function ii(a, b) {
        var c = N, d = di(), e = b(), f = !He(d.memoizedState, e);
        if (f && (d.memoizedState = e, Ug = !0), d = d.queue, ji(ki.bind(null, c, d, a), [ a ]), 
        d.getSnapshot !== b || f || null !== P && 1 & P.memoizedState.tag) {
          if (c.flags |= 2048, li(9, mi.bind(null, c, d, e, b), void 0, null), null === R) throw Error(p(349));
          0 != (30 & Rh) || ni(c, b, e);
        }
        return e;
      }
      function ni(a, b, c) {
        a.flags |= 16384, a = {
          getSnapshot: b,
          value: c
        }, null === (b = N.updateQueue) ? (b = {
          lastEffect: null,
          stores: null
        }, N.updateQueue = b, b.stores = [ a ]) : null === (c = b.stores) ? b.stores = [ a ] : c.push(a);
      }
      function mi(a, b, c, d) {
        b.value = c, b.getSnapshot = d, oi(b) && pi(a);
      }
      function ki(a, b, c) {
        return c((function() {
          oi(b) && pi(a);
        }));
      }
      function oi(a) {
        var b = a.getSnapshot;
        a = a.value;
        try {
          var c = b();
          return !He(a, c);
        } catch (d) {
          return !0;
        }
      }
      function pi(a) {
        var b = Zg(a, 1);
        null !== b && mh(b, a, 1, -1);
      }
      function qi(a) {
        var b = ci();
        return "function" == typeof a && (a = a()), b.memoizedState = b.baseState = a, a = {
          pending: null,
          interleaved: null,
          lanes: 0,
          dispatch: null,
          lastRenderedReducer: ei,
          lastRenderedState: a
        }, b.queue = a, a = a.dispatch = ri.bind(null, N, a), [ b.memoizedState, a ];
      }
      function li(a, b, c, d) {
        return a = {
          tag: a,
          create: b,
          destroy: c,
          deps: d,
          next: null
        }, null === (b = N.updateQueue) ? (b = {
          lastEffect: null,
          stores: null
        }, N.updateQueue = b, b.lastEffect = a.next = a) : null === (c = b.lastEffect) ? b.lastEffect = a.next = a : (d = c.next, 
        c.next = a, a.next = d, b.lastEffect = a), a;
      }
      function si() {
        return di().memoizedState;
      }
      function ti(a, b, c, d) {
        var e = ci();
        N.flags |= a, e.memoizedState = li(1 | b, c, void 0, void 0 === d ? null : d);
      }
      function ui(a, b, c, d) {
        var e = di();
        d = void 0 === d ? null : d;
        var f = void 0;
        if (null !== O) {
          var g = O.memoizedState;
          if (f = g.destroy, null !== d && Wh(d, g.deps)) return void (e.memoizedState = li(b, c, f, d));
        }
        N.flags |= a, e.memoizedState = li(1 | b, c, f, d);
      }
      function vi(a, b) {
        return ti(8390656, 8, a, b);
      }
      function ji(a, b) {
        return ui(2048, 8, a, b);
      }
      function wi(a, b) {
        return ui(4, 2, a, b);
      }
      function xi(a, b) {
        return ui(4, 4, a, b);
      }
      function yi(a, b) {
        return "function" == typeof b ? (a = a(), b(a), function() {
          b(null);
        }) : null != b ? (a = a(), b.current = a, function() {
          b.current = null;
        }) : void 0;
      }
      function zi(a, b, c) {
        return c = null != c ? c.concat([ a ]) : null, ui(4, 4, yi.bind(null, b, a), c);
      }
      function Ai() {}
      function Bi(a, b) {
        var c = di();
        b = void 0 === b ? null : b;
        var d = c.memoizedState;
        return null !== d && null !== b && Wh(b, d[1]) ? d[0] : (c.memoizedState = [ a, b ], 
        a);
      }
      function Ci(a, b) {
        var c = di();
        b = void 0 === b ? null : b;
        var d = c.memoizedState;
        return null !== d && null !== b && Wh(b, d[1]) ? d[0] : (a = a(), c.memoizedState = [ a, b ], 
        a);
      }
      function Di(a, b, c) {
        return 0 == (21 & Rh) ? (a.baseState && (a.baseState = !1, Ug = !0), a.memoizedState = c) : (He(c, b) || (c = yc(), 
        N.lanes |= c, hh |= c, a.baseState = !0), b);
      }
      function Ei(a, b) {
        var c = C;
        C = 0 !== c && 4 > c ? c : 4, a(!0);
        var d = Qh.transition;
        Qh.transition = {};
        try {
          a(!1), b();
        } finally {
          C = c, Qh.transition = d;
        }
      }
      function Fi() {
        return di().memoizedState;
      }
      function Gi(a, b, c) {
        var d = lh(a);
        if (c = {
          lane: d,
          action: c,
          hasEagerState: !1,
          eagerState: null,
          next: null
        }, Hi(a)) Ii(b, c); else if (null !== (c = Yg(a, b, c, d))) {
          mh(c, a, d, L()), Ji(c, b, d);
        }
      }
      function ri(a, b, c) {
        var d = lh(a), e = {
          lane: d,
          action: c,
          hasEagerState: !1,
          eagerState: null,
          next: null
        };
        if (Hi(a)) Ii(b, e); else {
          var f = a.alternate;
          if (0 === a.lanes && (null === f || 0 === f.lanes) && null !== (f = b.lastRenderedReducer)) try {
            var g = b.lastRenderedState, h = f(g, c);
            if (e.hasEagerState = !0, e.eagerState = h, He(h, g)) {
              var k = b.interleaved;
              return null === k ? (e.next = e, Xg(b)) : (e.next = k.next, k.next = e), void (b.interleaved = e);
            }
          } catch (l) {}
          null !== (c = Yg(a, b, e, d)) && (mh(c, a, d, e = L()), Ji(c, b, d));
        }
      }
      function Hi(a) {
        var b = a.alternate;
        return a === N || null !== b && b === N;
      }
      function Ii(a, b) {
        Th = Sh = !0;
        var c = a.pending;
        null === c ? b.next = b : (b.next = c.next, c.next = b), a.pending = b;
      }
      function Ji(a, b, c) {
        if (0 != (4194240 & c)) {
          var d = b.lanes;
          c |= d &= a.pendingLanes, b.lanes = c, Cc(a, c);
        }
      }
      var ai = {
        readContext: Vg,
        useCallback: Q,
        useContext: Q,
        useEffect: Q,
        useImperativeHandle: Q,
        useInsertionEffect: Q,
        useLayoutEffect: Q,
        useMemo: Q,
        useReducer: Q,
        useRef: Q,
        useState: Q,
        useDebugValue: Q,
        useDeferredValue: Q,
        useTransition: Q,
        useMutableSource: Q,
        useSyncExternalStore: Q,
        useId: Q,
        unstable_isNewReconciler: !1
      }, Yh = {
        readContext: Vg,
        useCallback: function(a, b) {
          return ci().memoizedState = [ a, void 0 === b ? null : b ], a;
        },
        useContext: Vg,
        useEffect: vi,
        useImperativeHandle: function(a, b, c) {
          return c = null != c ? c.concat([ a ]) : null, ti(4194308, 4, yi.bind(null, b, a), c);
        },
        useLayoutEffect: function(a, b) {
          return ti(4194308, 4, a, b);
        },
        useInsertionEffect: function(a, b) {
          return ti(4, 2, a, b);
        },
        useMemo: function(a, b) {
          var c = ci();
          return b = void 0 === b ? null : b, a = a(), c.memoizedState = [ a, b ], a;
        },
        useReducer: function(a, b, c) {
          var d = ci();
          return b = void 0 !== c ? c(b) : b, d.memoizedState = d.baseState = b, a = {
            pending: null,
            interleaved: null,
            lanes: 0,
            dispatch: null,
            lastRenderedReducer: a,
            lastRenderedState: b
          }, d.queue = a, a = a.dispatch = Gi.bind(null, N, a), [ d.memoizedState, a ];
        },
        useRef: function(a) {
          return a = {
            current: a
          }, ci().memoizedState = a;
        },
        useState: qi,
        useDebugValue: Ai,
        useDeferredValue: function(a) {
          return ci().memoizedState = a;
        },
        useTransition: function() {
          var a = qi(!1), b = a[0];
          return a = Ei.bind(null, a[1]), ci().memoizedState = a, [ b, a ];
        },
        useMutableSource: function() {},
        useSyncExternalStore: function(a, b, c) {
          var d = N, e = ci();
          if (I) {
            if (void 0 === c) throw Error(p(407));
            c = c();
          } else {
            if (c = b(), null === R) throw Error(p(349));
            0 != (30 & Rh) || ni(d, b, c);
          }
          e.memoizedState = c;
          var f = {
            value: c,
            getSnapshot: b
          };
          return e.queue = f, vi(ki.bind(null, d, f, a), [ a ]), d.flags |= 2048, li(9, mi.bind(null, d, f, c, b), void 0, null), 
          c;
        },
        useId: function() {
          var a = ci(), b = R.identifierPrefix;
          if (I) {
            var c = sg;
            b = ":" + b + "R" + (c = (rg & ~(1 << 32 - oc(rg) - 1)).toString(32) + c), 0 < (c = Uh++) && (b += "H" + c.toString(32)), 
            b += ":";
          } else b = ":" + b + "r" + (c = Vh++).toString(32) + ":";
          return a.memoizedState = b;
        },
        unstable_isNewReconciler: !1
      }, Zh = {
        readContext: Vg,
        useCallback: Bi,
        useContext: Vg,
        useEffect: ji,
        useImperativeHandle: zi,
        useInsertionEffect: wi,
        useLayoutEffect: xi,
        useMemo: Ci,
        useReducer: fi,
        useRef: si,
        useState: function() {
          return fi(ei);
        },
        useDebugValue: Ai,
        useDeferredValue: function(a) {
          return Di(di(), O.memoizedState, a);
        },
        useTransition: function() {
          return [ fi(ei)[0], di().memoizedState ];
        },
        useMutableSource: hi,
        useSyncExternalStore: ii,
        useId: Fi,
        unstable_isNewReconciler: !1
      }, $h = {
        readContext: Vg,
        useCallback: Bi,
        useContext: Vg,
        useEffect: ji,
        useImperativeHandle: zi,
        useInsertionEffect: wi,
        useLayoutEffect: xi,
        useMemo: Ci,
        useReducer: gi,
        useRef: si,
        useState: function() {
          return gi(ei);
        },
        useDebugValue: Ai,
        useDeferredValue: function(a) {
          var b = di();
          return null === O ? b.memoizedState = a : Di(b, O.memoizedState, a);
        },
        useTransition: function() {
          return [ gi(ei)[0], di().memoizedState ];
        },
        useMutableSource: hi,
        useSyncExternalStore: ii,
        useId: Fi,
        unstable_isNewReconciler: !1
      };
      function Ki(a, b) {
        try {
          var c = "", d = b;
          do {
            c += Pa(d), d = d.return;
          } while (d);
          var e = c;
        } catch (f) {
          e = "\nError generating stack: " + f.message + "\n" + f.stack;
        }
        return {
          value: a,
          source: b,
          stack: e,
          digest: null
        };
      }
      function Li(a, b, c) {
        return {
          value: a,
          source: null,
          stack: null != c ? c : null,
          digest: null != b ? b : null
        };
      }
      function Mi(a, b) {
        try {
          console.error(b.value);
        } catch (c) {
          setTimeout((function() {
            throw c;
          }));
        }
      }
      var Ni = "function" == typeof WeakMap ? WeakMap : Map;
      function Oi(a, b, c) {
        (c = ch(-1, c)).tag = 3, c.payload = {
          element: null
        };
        var d = b.value;
        return c.callback = function() {
          Pi || (Pi = !0, Qi = d), Mi(0, b);
        }, c;
      }
      function Ri(a, b, c) {
        (c = ch(-1, c)).tag = 3;
        var d = a.type.getDerivedStateFromError;
        if ("function" == typeof d) {
          var e = b.value;
          c.payload = function() {
            return d(e);
          }, c.callback = function() {
            Mi(0, b);
          };
        }
        var f = a.stateNode;
        return null !== f && "function" == typeof f.componentDidCatch && (c.callback = function() {
          Mi(0, b), "function" != typeof d && (null === Si ? Si = new Set([ this ]) : Si.add(this));
          var c = b.stack;
          this.componentDidCatch(b.value, {
            componentStack: null !== c ? c : ""
          });
        }), c;
      }
      function Ti(a, b, c) {
        var d = a.pingCache;
        if (null === d) {
          d = a.pingCache = new Ni;
          var e = new Set;
          d.set(b, e);
        } else void 0 === (e = d.get(b)) && (e = new Set, d.set(b, e));
        e.has(c) || (e.add(c), a = Ui.bind(null, a, b, c), b.then(a, a));
      }
      function Vi(a) {
        do {
          var b;
          if ((b = 13 === a.tag) && (b = null === (b = a.memoizedState) || null !== b.dehydrated), 
          b) return a;
          a = a.return;
        } while (null !== a);
        return null;
      }
      function Wi(a, b, c, d, e) {
        return 0 == (1 & a.mode) ? (a === b ? a.flags |= 65536 : (a.flags |= 128, c.flags |= 131072, 
        c.flags &= -52805, 1 === c.tag && (null === c.alternate ? c.tag = 17 : ((b = ch(-1, 1)).tag = 2, 
        dh(c, b, 1))), c.lanes |= 1), a) : (a.flags |= 65536, a.lanes = e, a);
      }
      var Xi = ua.ReactCurrentOwner, Ug = !1;
      function Yi(a, b, c, d) {
        b.child = null === a ? Ch(b, null, c, d) : Bh(b, a.child, c, d);
      }
      function Zi(a, b, c, d, e) {
        c = c.render;
        var f = b.ref;
        return Tg(b, e), d = Xh(a, b, c, d, f, e), c = bi(), null === a || Ug ? (I && c && vg(b), 
        b.flags |= 1, Yi(a, b, d, e), b.child) : (b.updateQueue = a.updateQueue, b.flags &= -2053, 
        a.lanes &= ~e, $i(a, b, e));
      }
      function aj(a, b, c, d, e) {
        if (null === a) {
          var f = c.type;
          return "function" != typeof f || bj(f) || void 0 !== f.defaultProps || null !== c.compare || void 0 !== c.defaultProps ? ((a = yh(c.type, null, d, b, b.mode, e)).ref = b.ref, 
          a.return = b, b.child = a) : (b.tag = 15, b.type = f, cj(a, b, f, d, e));
        }
        if (f = a.child, 0 == (a.lanes & e)) {
          var g = f.memoizedProps;
          if ((c = null !== (c = c.compare) ? c : Ie)(g, d) && a.ref === b.ref) return $i(a, b, e);
        }
        return b.flags |= 1, (a = wh(f, d)).ref = b.ref, a.return = b, b.child = a;
      }
      function cj(a, b, c, d, e) {
        if (null !== a) {
          var f = a.memoizedProps;
          if (Ie(f, d) && a.ref === b.ref) {
            if (Ug = !1, b.pendingProps = d = f, 0 == (a.lanes & e)) return b.lanes = a.lanes, 
            $i(a, b, e);
            0 != (131072 & a.flags) && (Ug = !0);
          }
        }
        return dj(a, b, c, d, e);
      }
      function ej(a, b, c) {
        var d = b.pendingProps, e = d.children, f = null !== a ? a.memoizedState : null;
        if ("hidden" === d.mode) if (0 == (1 & b.mode)) b.memoizedState = {
          baseLanes: 0,
          cachePool: null,
          transitions: null
        }, G(fj, gj), gj |= c; else {
          if (0 == (1073741824 & c)) return a = null !== f ? f.baseLanes | c : c, b.lanes = b.childLanes = 1073741824, 
          b.memoizedState = {
            baseLanes: a,
            cachePool: null,
            transitions: null
          }, b.updateQueue = null, G(fj, gj), gj |= a, null;
          b.memoizedState = {
            baseLanes: 0,
            cachePool: null,
            transitions: null
          }, d = null !== f ? f.baseLanes : c, G(fj, gj), gj |= d;
        } else null !== f ? (d = f.baseLanes | c, b.memoizedState = null) : d = c, G(fj, gj), 
        gj |= d;
        return Yi(a, b, e, c), b.child;
      }
      function hj(a, b) {
        var c = b.ref;
        (null === a && null !== c || null !== a && a.ref !== c) && (b.flags |= 512, b.flags |= 2097152);
      }
      function dj(a, b, c, d, e) {
        var f = Zf(c) ? Xf : H.current;
        return f = Yf(b, f), Tg(b, e), c = Xh(a, b, c, d, f, e), d = bi(), null === a || Ug ? (I && d && vg(b), 
        b.flags |= 1, Yi(a, b, c, e), b.child) : (b.updateQueue = a.updateQueue, b.flags &= -2053, 
        a.lanes &= ~e, $i(a, b, e));
      }
      function ij(a, b, c, d, e) {
        if (Zf(c)) {
          var f = !0;
          cg(b);
        } else f = !1;
        if (Tg(b, e), null === b.stateNode) jj(a, b), ph(b, c, d), rh(b, c, d, e), d = !0; else if (null === a) {
          var g = b.stateNode, h = b.memoizedProps;
          g.props = h;
          var k = g.context, l = c.contextType;
          "object" == typeof l && null !== l ? l = Vg(l) : l = Yf(b, l = Zf(c) ? Xf : H.current);
          var m = c.getDerivedStateFromProps, q = "function" == typeof m || "function" == typeof g.getSnapshotBeforeUpdate;
          q || "function" != typeof g.UNSAFE_componentWillReceiveProps && "function" != typeof g.componentWillReceiveProps || (h !== d || k !== l) && qh(b, g, d, l), 
          $g = !1;
          var r = b.memoizedState;
          g.state = r, gh(b, d, g, e), k = b.memoizedState, h !== d || r !== k || Wf.current || $g ? ("function" == typeof m && (kh(b, c, m, d), 
          k = b.memoizedState), (h = $g || oh(b, c, h, d, r, k, l)) ? (q || "function" != typeof g.UNSAFE_componentWillMount && "function" != typeof g.componentWillMount || ("function" == typeof g.componentWillMount && g.componentWillMount(), 
          "function" == typeof g.UNSAFE_componentWillMount && g.UNSAFE_componentWillMount()), 
          "function" == typeof g.componentDidMount && (b.flags |= 4194308)) : ("function" == typeof g.componentDidMount && (b.flags |= 4194308), 
          b.memoizedProps = d, b.memoizedState = k), g.props = d, g.state = k, g.context = l, 
          d = h) : ("function" == typeof g.componentDidMount && (b.flags |= 4194308), d = !1);
        } else {
          g = b.stateNode, bh(a, b), h = b.memoizedProps, l = b.type === b.elementType ? h : Lg(b.type, h), 
          g.props = l, q = b.pendingProps, r = g.context, "object" == typeof (k = c.contextType) && null !== k ? k = Vg(k) : k = Yf(b, k = Zf(c) ? Xf : H.current);
          var y = c.getDerivedStateFromProps;
          (m = "function" == typeof y || "function" == typeof g.getSnapshotBeforeUpdate) || "function" != typeof g.UNSAFE_componentWillReceiveProps && "function" != typeof g.componentWillReceiveProps || (h !== q || r !== k) && qh(b, g, d, k), 
          $g = !1, r = b.memoizedState, g.state = r, gh(b, d, g, e);
          var n = b.memoizedState;
          h !== q || r !== n || Wf.current || $g ? ("function" == typeof y && (kh(b, c, y, d), 
          n = b.memoizedState), (l = $g || oh(b, c, l, d, r, n, k) || !1) ? (m || "function" != typeof g.UNSAFE_componentWillUpdate && "function" != typeof g.componentWillUpdate || ("function" == typeof g.componentWillUpdate && g.componentWillUpdate(d, n, k), 
          "function" == typeof g.UNSAFE_componentWillUpdate && g.UNSAFE_componentWillUpdate(d, n, k)), 
          "function" == typeof g.componentDidUpdate && (b.flags |= 4), "function" == typeof g.getSnapshotBeforeUpdate && (b.flags |= 1024)) : ("function" != typeof g.componentDidUpdate || h === a.memoizedProps && r === a.memoizedState || (b.flags |= 4), 
          "function" != typeof g.getSnapshotBeforeUpdate || h === a.memoizedProps && r === a.memoizedState || (b.flags |= 1024), 
          b.memoizedProps = d, b.memoizedState = n), g.props = d, g.state = n, g.context = k, 
          d = l) : ("function" != typeof g.componentDidUpdate || h === a.memoizedProps && r === a.memoizedState || (b.flags |= 4), 
          "function" != typeof g.getSnapshotBeforeUpdate || h === a.memoizedProps && r === a.memoizedState || (b.flags |= 1024), 
          d = !1);
        }
        return kj(a, b, c, d, f, e);
      }
      function kj(a, b, c, d, e, f) {
        hj(a, b);
        var g = 0 != (128 & b.flags);
        if (!d && !g) return e && dg(b, c, !1), $i(a, b, f);
        d = b.stateNode, Xi.current = b;
        var h = g && "function" != typeof c.getDerivedStateFromError ? null : d.render();
        return b.flags |= 1, null !== a && g ? (b.child = Bh(b, a.child, null, f), b.child = Bh(b, null, h, f)) : Yi(a, b, h, f), 
        b.memoizedState = d.state, e && dg(b, c, !0), b.child;
      }
      function lj(a) {
        var b = a.stateNode;
        b.pendingContext ? ag(0, b.pendingContext, b.pendingContext !== b.context) : b.context && ag(0, b.context, !1), 
        Ih(a, b.containerInfo);
      }
      function mj(a, b, c, d, e) {
        return Ig(), Jg(e), b.flags |= 256, Yi(a, b, c, d), b.child;
      }
      var Aj, Bj, Cj, Dj, nj = {
        dehydrated: null,
        treeContext: null,
        retryLane: 0
      };
      function oj(a) {
        return {
          baseLanes: a,
          cachePool: null,
          transitions: null
        };
      }
      function pj(a, b, c) {
        var h, d = b.pendingProps, e = M.current, f = !1, g = 0 != (128 & b.flags);
        if ((h = g) || (h = (null === a || null !== a.memoizedState) && 0 != (2 & e)), h ? (f = !0, 
        b.flags &= -129) : null !== a && null === a.memoizedState || (e |= 1), G(M, 1 & e), 
        null === a) return Eg(b), null !== (a = b.memoizedState) && null !== (a = a.dehydrated) ? (0 == (1 & b.mode) ? b.lanes = 1 : "$!" === a.data ? b.lanes = 8 : b.lanes = 1073741824, 
        null) : (g = d.children, a = d.fallback, f ? (d = b.mode, f = b.child, g = {
          mode: "hidden",
          children: g
        }, 0 == (1 & d) && null !== f ? (f.childLanes = 0, f.pendingProps = g) : f = qj(g, d, 0, null), 
        a = Ah(a, d, c, null), f.return = b, a.return = b, f.sibling = a, b.child = f, b.child.memoizedState = oj(c), 
        b.memoizedState = nj, a) : rj(b, g));
        if (null !== (e = a.memoizedState) && null !== (h = e.dehydrated)) return function(a, b, c, d, e, f, g) {
          if (c) return 256 & b.flags ? (b.flags &= -257, tj(a, b, g, d = Li(Error(p(422))))) : null !== b.memoizedState ? (b.child = a.child, 
          b.flags |= 128, null) : (f = d.fallback, e = b.mode, d = qj({
            mode: "visible",
            children: d.children
          }, e, 0, null), (f = Ah(f, e, g, null)).flags |= 2, d.return = b, f.return = b, 
          d.sibling = f, b.child = d, 0 != (1 & b.mode) && Bh(b, a.child, null, g), b.child.memoizedState = oj(g), 
          b.memoizedState = nj, f);
          if (0 == (1 & b.mode)) return tj(a, b, g, null);
          if ("$!" === e.data) {
            if (d = e.nextSibling && e.nextSibling.dataset) var h = d.dgst;
            return d = h, tj(a, b, g, d = Li(f = Error(p(419)), d, void 0));
          }
          if (h = 0 != (g & a.childLanes), Ug || h) {
            if (null !== (d = R)) {
              switch (g & -g) {
               case 4:
                e = 2;
                break;

               case 16:
                e = 8;
                break;

               case 64:
               case 128:
               case 256:
               case 512:
               case 1024:
               case 2048:
               case 4096:
               case 8192:
               case 16384:
               case 32768:
               case 65536:
               case 131072:
               case 262144:
               case 524288:
               case 1048576:
               case 2097152:
               case 4194304:
               case 8388608:
               case 16777216:
               case 33554432:
               case 67108864:
                e = 32;
                break;

               case 536870912:
                e = 268435456;
                break;

               default:
                e = 0;
              }
              0 !== (e = 0 != (e & (d.suspendedLanes | g)) ? 0 : e) && e !== f.retryLane && (f.retryLane = e, 
              Zg(a, e), mh(d, a, e, -1));
            }
            return uj(), tj(a, b, g, d = Li(Error(p(421))));
          }
          return "$?" === e.data ? (b.flags |= 128, b.child = a.child, b = vj.bind(null, a), 
          e._reactRetry = b, null) : (a = f.treeContext, yg = Lf(e.nextSibling), xg = b, I = !0, 
          zg = null, null !== a && (og[pg++] = rg, og[pg++] = sg, og[pg++] = qg, rg = a.id, 
          sg = a.overflow, qg = b), b = rj(b, d.children), b.flags |= 4096, b);
        }(a, b, g, d, h, e, c);
        if (f) {
          f = d.fallback, g = b.mode, h = (e = a.child).sibling;
          var k = {
            mode: "hidden",
            children: d.children
          };
          return 0 == (1 & g) && b.child !== e ? ((d = b.child).childLanes = 0, d.pendingProps = k, 
          b.deletions = null) : (d = wh(e, k)).subtreeFlags = 14680064 & e.subtreeFlags, null !== h ? f = wh(h, f) : (f = Ah(f, g, c, null)).flags |= 2, 
          f.return = b, d.return = b, d.sibling = f, b.child = d, d = f, f = b.child, g = null === (g = a.child.memoizedState) ? oj(c) : {
            baseLanes: g.baseLanes | c,
            cachePool: null,
            transitions: g.transitions
          }, f.memoizedState = g, f.childLanes = a.childLanes & ~c, b.memoizedState = nj, 
          d;
        }
        return a = (f = a.child).sibling, d = wh(f, {
          mode: "visible",
          children: d.children
        }), 0 == (1 & b.mode) && (d.lanes = c), d.return = b, d.sibling = null, null !== a && (null === (c = b.deletions) ? (b.deletions = [ a ], 
        b.flags |= 16) : c.push(a)), b.child = d, b.memoizedState = null, d;
      }
      function rj(a, b) {
        return (b = qj({
          mode: "visible",
          children: b
        }, a.mode, 0, null)).return = a, a.child = b;
      }
      function tj(a, b, c, d) {
        return null !== d && Jg(d), Bh(b, a.child, null, c), (a = rj(b, b.pendingProps.children)).flags |= 2, 
        b.memoizedState = null, a;
      }
      function wj(a, b, c) {
        a.lanes |= b;
        var d = a.alternate;
        null !== d && (d.lanes |= b), Sg(a.return, b, c);
      }
      function xj(a, b, c, d, e) {
        var f = a.memoizedState;
        null === f ? a.memoizedState = {
          isBackwards: b,
          rendering: null,
          renderingStartTime: 0,
          last: d,
          tail: c,
          tailMode: e
        } : (f.isBackwards = b, f.rendering = null, f.renderingStartTime = 0, f.last = d, 
        f.tail = c, f.tailMode = e);
      }
      function yj(a, b, c) {
        var d = b.pendingProps, e = d.revealOrder, f = d.tail;
        if (Yi(a, b, d.children, c), 0 != (2 & (d = M.current))) d = 1 & d | 2, b.flags |= 128; else {
          if (null !== a && 0 != (128 & a.flags)) a: for (a = b.child; null !== a; ) {
            if (13 === a.tag) null !== a.memoizedState && wj(a, c, b); else if (19 === a.tag) wj(a, c, b); else if (null !== a.child) {
              a.child.return = a, a = a.child;
              continue;
            }
            if (a === b) break a;
            for (;null === a.sibling; ) {
              if (null === a.return || a.return === b) break a;
              a = a.return;
            }
            a.sibling.return = a.return, a = a.sibling;
          }
          d &= 1;
        }
        if (G(M, d), 0 == (1 & b.mode)) b.memoizedState = null; else switch (e) {
         case "forwards":
          for (c = b.child, e = null; null !== c; ) null !== (a = c.alternate) && null === Mh(a) && (e = c), 
          c = c.sibling;
          null === (c = e) ? (e = b.child, b.child = null) : (e = c.sibling, c.sibling = null), 
          xj(b, !1, e, c, f);
          break;

         case "backwards":
          for (c = null, e = b.child, b.child = null; null !== e; ) {
            if (null !== (a = e.alternate) && null === Mh(a)) {
              b.child = e;
              break;
            }
            a = e.sibling, e.sibling = c, c = e, e = a;
          }
          xj(b, !0, c, null, f);
          break;

         case "together":
          xj(b, !1, null, null, void 0);
          break;

         default:
          b.memoizedState = null;
        }
        return b.child;
      }
      function jj(a, b) {
        0 == (1 & b.mode) && null !== a && (a.alternate = null, b.alternate = null, b.flags |= 2);
      }
      function $i(a, b, c) {
        if (null !== a && (b.dependencies = a.dependencies), hh |= b.lanes, 0 == (c & b.childLanes)) return null;
        if (null !== a && b.child !== a.child) throw Error(p(153));
        if (null !== b.child) {
          for (c = wh(a = b.child, a.pendingProps), b.child = c, c.return = b; null !== a.sibling; ) a = a.sibling, 
          (c = c.sibling = wh(a, a.pendingProps)).return = b;
          c.sibling = null;
        }
        return b.child;
      }
      function Ej(a, b) {
        if (!I) switch (a.tailMode) {
         case "hidden":
          b = a.tail;
          for (var c = null; null !== b; ) null !== b.alternate && (c = b), b = b.sibling;
          null === c ? a.tail = null : c.sibling = null;
          break;

         case "collapsed":
          c = a.tail;
          for (var d = null; null !== c; ) null !== c.alternate && (d = c), c = c.sibling;
          null === d ? b || null === a.tail ? a.tail = null : a.tail.sibling = null : d.sibling = null;
        }
      }
      function S(a) {
        var b = null !== a.alternate && a.alternate.child === a.child, c = 0, d = 0;
        if (b) for (var e = a.child; null !== e; ) c |= e.lanes | e.childLanes, d |= 14680064 & e.subtreeFlags, 
        d |= 14680064 & e.flags, e.return = a, e = e.sibling; else for (e = a.child; null !== e; ) c |= e.lanes | e.childLanes, 
        d |= e.subtreeFlags, d |= e.flags, e.return = a, e = e.sibling;
        return a.subtreeFlags |= d, a.childLanes = c, b;
      }
      function Fj(a, b, c) {
        var d = b.pendingProps;
        switch (wg(b), b.tag) {
         case 2:
         case 16:
         case 15:
         case 0:
         case 11:
         case 7:
         case 8:
         case 12:
         case 9:
         case 14:
          return S(b), null;

         case 1:
         case 17:
          return Zf(b.type) && $f(), S(b), null;

         case 3:
          return d = b.stateNode, Jh(), E(Wf), E(H), Oh(), d.pendingContext && (d.context = d.pendingContext, 
          d.pendingContext = null), null !== a && null !== a.child || (Gg(b) ? b.flags |= 4 : null === a || a.memoizedState.isDehydrated && 0 == (256 & b.flags) || (b.flags |= 1024, 
          null !== zg && (Gj(zg), zg = null))), Bj(a, b), S(b), null;

         case 5:
          Lh(b);
          var e = Hh(Gh.current);
          if (c = b.type, null !== a && null != b.stateNode) Cj(a, b, c, d, e), a.ref !== b.ref && (b.flags |= 512, 
          b.flags |= 2097152); else {
            if (!d) {
              if (null === b.stateNode) throw Error(p(166));
              return S(b), null;
            }
            if (a = Hh(Eh.current), Gg(b)) {
              d = b.stateNode, c = b.type;
              var f = b.memoizedProps;
              switch (d[Of] = b, d[Pf] = f, a = 0 != (1 & b.mode), c) {
               case "dialog":
                D("cancel", d), D("close", d);
                break;

               case "iframe":
               case "object":
               case "embed":
                D("load", d);
                break;

               case "video":
               case "audio":
                for (e = 0; e < lf.length; e++) D(lf[e], d);
                break;

               case "source":
                D("error", d);
                break;

               case "img":
               case "image":
               case "link":
                D("error", d), D("load", d);
                break;

               case "details":
                D("toggle", d);
                break;

               case "input":
                Za(d, f), D("invalid", d);
                break;

               case "select":
                d._wrapperState = {
                  wasMultiple: !!f.multiple
                }, D("invalid", d);
                break;

               case "textarea":
                hb(d, f), D("invalid", d);
              }
              for (var g in ub(c, f), e = null, f) if (f.hasOwnProperty(g)) {
                var h = f[g];
                "children" === g ? "string" == typeof h ? d.textContent !== h && (!0 !== f.suppressHydrationWarning && Af(d.textContent, h, a), 
                e = [ "children", h ]) : "number" == typeof h && d.textContent !== "" + h && (!0 !== f.suppressHydrationWarning && Af(d.textContent, h, a), 
                e = [ "children", "" + h ]) : ea.hasOwnProperty(g) && null != h && "onScroll" === g && D("scroll", d);
              }
              switch (c) {
               case "input":
                Va(d), db(d, f, !0);
                break;

               case "textarea":
                Va(d), jb(d);
                break;

               case "select":
               case "option":
                break;

               default:
                "function" == typeof f.onClick && (d.onclick = Bf);
              }
              d = e, b.updateQueue = d, null !== d && (b.flags |= 4);
            } else {
              g = 9 === e.nodeType ? e : e.ownerDocument, "http://www.w3.org/1999/xhtml" === a && (a = kb(c)), 
              "http://www.w3.org/1999/xhtml" === a ? "script" === c ? ((a = g.createElement("div")).innerHTML = "<script><\/script>", 
              a = a.removeChild(a.firstChild)) : "string" == typeof d.is ? a = g.createElement(c, {
                is: d.is
              }) : (a = g.createElement(c), "select" === c && (g = a, d.multiple ? g.multiple = !0 : d.size && (g.size = d.size))) : a = g.createElementNS(a, c), 
              a[Of] = b, a[Pf] = d, Aj(a, b, !1, !1), b.stateNode = a;
              a: {
                switch (g = vb(c, d), c) {
                 case "dialog":
                  D("cancel", a), D("close", a), e = d;
                  break;

                 case "iframe":
                 case "object":
                 case "embed":
                  D("load", a), e = d;
                  break;

                 case "video":
                 case "audio":
                  for (e = 0; e < lf.length; e++) D(lf[e], a);
                  e = d;
                  break;

                 case "source":
                  D("error", a), e = d;
                  break;

                 case "img":
                 case "image":
                 case "link":
                  D("error", a), D("load", a), e = d;
                  break;

                 case "details":
                  D("toggle", a), e = d;
                  break;

                 case "input":
                  Za(a, d), e = Ya(a, d), D("invalid", a);
                  break;

                 case "option":
                 default:
                  e = d;
                  break;

                 case "select":
                  a._wrapperState = {
                    wasMultiple: !!d.multiple
                  }, e = A({}, d, {
                    value: void 0
                  }), D("invalid", a);
                  break;

                 case "textarea":
                  hb(a, d), e = gb(a, d), D("invalid", a);
                }
                for (f in ub(c, e), h = e) if (h.hasOwnProperty(f)) {
                  var k = h[f];
                  "style" === f ? sb(a, k) : "dangerouslySetInnerHTML" === f ? null != (k = k ? k.__html : void 0) && nb(a, k) : "children" === f ? "string" == typeof k ? ("textarea" !== c || "" !== k) && ob(a, k) : "number" == typeof k && ob(a, "" + k) : "suppressContentEditableWarning" !== f && "suppressHydrationWarning" !== f && "autoFocus" !== f && (ea.hasOwnProperty(f) ? null != k && "onScroll" === f && D("scroll", a) : null != k && ta(a, f, k, g));
                }
                switch (c) {
                 case "input":
                  Va(a), db(a, d, !1);
                  break;

                 case "textarea":
                  Va(a), jb(a);
                  break;

                 case "option":
                  null != d.value && a.setAttribute("value", "" + Sa(d.value));
                  break;

                 case "select":
                  a.multiple = !!d.multiple, null != (f = d.value) ? fb(a, !!d.multiple, f, !1) : null != d.defaultValue && fb(a, !!d.multiple, d.defaultValue, !0);
                  break;

                 default:
                  "function" == typeof e.onClick && (a.onclick = Bf);
                }
                switch (c) {
                 case "button":
                 case "input":
                 case "select":
                 case "textarea":
                  d = !!d.autoFocus;
                  break a;

                 case "img":
                  d = !0;
                  break a;

                 default:
                  d = !1;
                }
              }
              d && (b.flags |= 4);
            }
            null !== b.ref && (b.flags |= 512, b.flags |= 2097152);
          }
          return S(b), null;

         case 6:
          if (a && null != b.stateNode) Dj(a, b, a.memoizedProps, d); else {
            if ("string" != typeof d && null === b.stateNode) throw Error(p(166));
            if (c = Hh(Gh.current), Hh(Eh.current), Gg(b)) {
              if (d = b.stateNode, c = b.memoizedProps, d[Of] = b, (f = d.nodeValue !== c) && null !== (a = xg)) switch (a.tag) {
               case 3:
                Af(d.nodeValue, c, 0 != (1 & a.mode));
                break;

               case 5:
                !0 !== a.memoizedProps.suppressHydrationWarning && Af(d.nodeValue, c, 0 != (1 & a.mode));
              }
              f && (b.flags |= 4);
            } else (d = (9 === c.nodeType ? c : c.ownerDocument).createTextNode(d))[Of] = b, 
            b.stateNode = d;
          }
          return S(b), null;

         case 13:
          if (E(M), d = b.memoizedState, null === a || null !== a.memoizedState && null !== a.memoizedState.dehydrated) {
            if (I && null !== yg && 0 != (1 & b.mode) && 0 == (128 & b.flags)) Hg(), Ig(), b.flags |= 98560, 
            f = !1; else if (f = Gg(b), null !== d && null !== d.dehydrated) {
              if (null === a) {
                if (!f) throw Error(p(318));
                if (!(f = null !== (f = b.memoizedState) ? f.dehydrated : null)) throw Error(p(317));
                f[Of] = b;
              } else Ig(), 0 == (128 & b.flags) && (b.memoizedState = null), b.flags |= 4;
              S(b), f = !1;
            } else null !== zg && (Gj(zg), zg = null), f = !0;
            if (!f) return 65536 & b.flags ? b : null;
          }
          return 0 != (128 & b.flags) ? (b.lanes = c, b) : ((d = null !== d) !== (null !== a && null !== a.memoizedState) && d && (b.child.flags |= 8192, 
          0 != (1 & b.mode) && (null === a || 0 != (1 & M.current) ? 0 === T && (T = 3) : uj())), 
          null !== b.updateQueue && (b.flags |= 4), S(b), null);

         case 4:
          return Jh(), Bj(a, b), null === a && sf(b.stateNode.containerInfo), S(b), null;

         case 10:
          return Rg(b.type._context), S(b), null;

         case 19:
          if (E(M), null === (f = b.memoizedState)) return S(b), null;
          if (d = 0 != (128 & b.flags), null === (g = f.rendering)) if (d) Ej(f, !1); else {
            if (0 !== T || null !== a && 0 != (128 & a.flags)) for (a = b.child; null !== a; ) {
              if (null !== (g = Mh(a))) {
                for (b.flags |= 128, Ej(f, !1), null !== (d = g.updateQueue) && (b.updateQueue = d, 
                b.flags |= 4), b.subtreeFlags = 0, d = c, c = b.child; null !== c; ) a = d, (f = c).flags &= 14680066, 
                null === (g = f.alternate) ? (f.childLanes = 0, f.lanes = a, f.child = null, f.subtreeFlags = 0, 
                f.memoizedProps = null, f.memoizedState = null, f.updateQueue = null, f.dependencies = null, 
                f.stateNode = null) : (f.childLanes = g.childLanes, f.lanes = g.lanes, f.child = g.child, 
                f.subtreeFlags = 0, f.deletions = null, f.memoizedProps = g.memoizedProps, f.memoizedState = g.memoizedState, 
                f.updateQueue = g.updateQueue, f.type = g.type, a = g.dependencies, f.dependencies = null === a ? null : {
                  lanes: a.lanes,
                  firstContext: a.firstContext
                }), c = c.sibling;
                return G(M, 1 & M.current | 2), b.child;
              }
              a = a.sibling;
            }
            null !== f.tail && B() > Hj && (b.flags |= 128, d = !0, Ej(f, !1), b.lanes = 4194304);
          } else {
            if (!d) if (null !== (a = Mh(g))) {
              if (b.flags |= 128, d = !0, null !== (c = a.updateQueue) && (b.updateQueue = c, 
              b.flags |= 4), Ej(f, !0), null === f.tail && "hidden" === f.tailMode && !g.alternate && !I) return S(b), 
              null;
            } else 2 * B() - f.renderingStartTime > Hj && 1073741824 !== c && (b.flags |= 128, 
            d = !0, Ej(f, !1), b.lanes = 4194304);
            f.isBackwards ? (g.sibling = b.child, b.child = g) : (null !== (c = f.last) ? c.sibling = g : b.child = g, 
            f.last = g);
          }
          return null !== f.tail ? (b = f.tail, f.rendering = b, f.tail = b.sibling, f.renderingStartTime = B(), 
          b.sibling = null, c = M.current, G(M, d ? 1 & c | 2 : 1 & c), b) : (S(b), null);

         case 22:
         case 23:
          return Ij(), d = null !== b.memoizedState, null !== a && null !== a.memoizedState !== d && (b.flags |= 8192), 
          d && 0 != (1 & b.mode) ? 0 != (1073741824 & gj) && (S(b), 6 & b.subtreeFlags && (b.flags |= 8192)) : S(b), 
          null;

         case 24:
         case 25:
          return null;
        }
        throw Error(p(156, b.tag));
      }
      function Jj(a, b) {
        switch (wg(b), b.tag) {
         case 1:
          return Zf(b.type) && $f(), 65536 & (a = b.flags) ? (b.flags = -65537 & a | 128, 
          b) : null;

         case 3:
          return Jh(), E(Wf), E(H), Oh(), 0 != (65536 & (a = b.flags)) && 0 == (128 & a) ? (b.flags = -65537 & a | 128, 
          b) : null;

         case 5:
          return Lh(b), null;

         case 13:
          if (E(M), null !== (a = b.memoizedState) && null !== a.dehydrated) {
            if (null === b.alternate) throw Error(p(340));
            Ig();
          }
          return 65536 & (a = b.flags) ? (b.flags = -65537 & a | 128, b) : null;

         case 19:
          return E(M), null;

         case 4:
          return Jh(), null;

         case 10:
          return Rg(b.type._context), null;

         case 22:
         case 23:
          return Ij(), null;

         default:
          return null;
        }
      }
      Aj = function(a, b) {
        for (var c = b.child; null !== c; ) {
          if (5 === c.tag || 6 === c.tag) a.appendChild(c.stateNode); else if (4 !== c.tag && null !== c.child) {
            c.child.return = c, c = c.child;
            continue;
          }
          if (c === b) break;
          for (;null === c.sibling; ) {
            if (null === c.return || c.return === b) return;
            c = c.return;
          }
          c.sibling.return = c.return, c = c.sibling;
        }
      }, Bj = function() {}, Cj = function(a, b, c, d) {
        var e = a.memoizedProps;
        if (e !== d) {
          a = b.stateNode, Hh(Eh.current);
          var g, f = null;
          switch (c) {
           case "input":
            e = Ya(a, e), d = Ya(a, d), f = [];
            break;

           case "select":
            e = A({}, e, {
              value: void 0
            }), d = A({}, d, {
              value: void 0
            }), f = [];
            break;

           case "textarea":
            e = gb(a, e), d = gb(a, d), f = [];
            break;

           default:
            "function" != typeof e.onClick && "function" == typeof d.onClick && (a.onclick = Bf);
          }
          for (l in ub(c, d), c = null, e) if (!d.hasOwnProperty(l) && e.hasOwnProperty(l) && null != e[l]) if ("style" === l) {
            var h = e[l];
            for (g in h) h.hasOwnProperty(g) && (c || (c = {}), c[g] = "");
          } else "dangerouslySetInnerHTML" !== l && "children" !== l && "suppressContentEditableWarning" !== l && "suppressHydrationWarning" !== l && "autoFocus" !== l && (ea.hasOwnProperty(l) ? f || (f = []) : (f = f || []).push(l, null));
          for (l in d) {
            var k = d[l];
            if (h = null != e ? e[l] : void 0, d.hasOwnProperty(l) && k !== h && (null != k || null != h)) if ("style" === l) if (h) {
              for (g in h) !h.hasOwnProperty(g) || k && k.hasOwnProperty(g) || (c || (c = {}), 
              c[g] = "");
              for (g in k) k.hasOwnProperty(g) && h[g] !== k[g] && (c || (c = {}), c[g] = k[g]);
            } else c || (f || (f = []), f.push(l, c)), c = k; else "dangerouslySetInnerHTML" === l ? (k = k ? k.__html : void 0, 
            h = h ? h.__html : void 0, null != k && h !== k && (f = f || []).push(l, k)) : "children" === l ? "string" != typeof k && "number" != typeof k || (f = f || []).push(l, "" + k) : "suppressContentEditableWarning" !== l && "suppressHydrationWarning" !== l && (ea.hasOwnProperty(l) ? (null != k && "onScroll" === l && D("scroll", a), 
            f || h === k || (f = [])) : (f = f || []).push(l, k));
          }
          c && (f = f || []).push("style", c);
          var l = f;
          (b.updateQueue = l) && (b.flags |= 4);
        }
      }, Dj = function(a, b, c, d) {
        c !== d && (b.flags |= 4);
      };
      var Kj = !1, U = !1, Lj = "function" == typeof WeakSet ? WeakSet : Set, V = null;
      function Mj(a, b) {
        var c = a.ref;
        if (null !== c) if ("function" == typeof c) try {
          c(null);
        } catch (d) {
          W(a, b, d);
        } else c.current = null;
      }
      function Nj(a, b, c) {
        try {
          c();
        } catch (d) {
          W(a, b, d);
        }
      }
      var Oj = !1;
      function Qj(a, b, c) {
        var d = b.updateQueue;
        if (null !== (d = null !== d ? d.lastEffect : null)) {
          var e = d = d.next;
          do {
            if ((e.tag & a) === a) {
              var f = e.destroy;
              e.destroy = void 0, void 0 !== f && Nj(b, c, f);
            }
            e = e.next;
          } while (e !== d);
        }
      }
      function Rj(a, b) {
        if (null !== (b = null !== (b = b.updateQueue) ? b.lastEffect : null)) {
          var c = b = b.next;
          do {
            if ((c.tag & a) === a) {
              var d = c.create;
              c.destroy = d();
            }
            c = c.next;
          } while (c !== b);
        }
      }
      function Sj(a) {
        var b = a.ref;
        if (null !== b) {
          var c = a.stateNode;
          a.tag, a = c, "function" == typeof b ? b(a) : b.current = a;
        }
      }
      function Tj(a) {
        var b = a.alternate;
        null !== b && (a.alternate = null, Tj(b)), a.child = null, a.deletions = null, a.sibling = null, 
        5 === a.tag && (null !== (b = a.stateNode) && (delete b[Of], delete b[Pf], delete b[of], 
        delete b[Qf], delete b[Rf])), a.stateNode = null, a.return = null, a.dependencies = null, 
        a.memoizedProps = null, a.memoizedState = null, a.pendingProps = null, a.stateNode = null, 
        a.updateQueue = null;
      }
      function Uj(a) {
        return 5 === a.tag || 3 === a.tag || 4 === a.tag;
      }
      function Vj(a) {
        a: for (;;) {
          for (;null === a.sibling; ) {
            if (null === a.return || Uj(a.return)) return null;
            a = a.return;
          }
          for (a.sibling.return = a.return, a = a.sibling; 5 !== a.tag && 6 !== a.tag && 18 !== a.tag; ) {
            if (2 & a.flags) continue a;
            if (null === a.child || 4 === a.tag) continue a;
            a.child.return = a, a = a.child;
          }
          if (!(2 & a.flags)) return a.stateNode;
        }
      }
      function Wj(a, b, c) {
        var d = a.tag;
        if (5 === d || 6 === d) a = a.stateNode, b ? 8 === c.nodeType ? c.parentNode.insertBefore(a, b) : c.insertBefore(a, b) : (8 === c.nodeType ? (b = c.parentNode).insertBefore(a, c) : (b = c).appendChild(a), 
        null != (c = c._reactRootContainer) || null !== b.onclick || (b.onclick = Bf)); else if (4 !== d && null !== (a = a.child)) for (Wj(a, b, c), 
        a = a.sibling; null !== a; ) Wj(a, b, c), a = a.sibling;
      }
      function Xj(a, b, c) {
        var d = a.tag;
        if (5 === d || 6 === d) a = a.stateNode, b ? c.insertBefore(a, b) : c.appendChild(a); else if (4 !== d && null !== (a = a.child)) for (Xj(a, b, c), 
        a = a.sibling; null !== a; ) Xj(a, b, c), a = a.sibling;
      }
      var X = null, Yj = !1;
      function Zj(a, b, c) {
        for (c = c.child; null !== c; ) ak(a, b, c), c = c.sibling;
      }
      function ak(a, b, c) {
        if (lc && "function" == typeof lc.onCommitFiberUnmount) try {
          lc.onCommitFiberUnmount(kc, c);
        } catch (h) {}
        switch (c.tag) {
         case 5:
          U || Mj(c, b);

         case 6:
          var d = X, e = Yj;
          X = null, Zj(a, b, c), Yj = e, null !== (X = d) && (Yj ? (a = X, c = c.stateNode, 
          8 === a.nodeType ? a.parentNode.removeChild(c) : a.removeChild(c)) : X.removeChild(c.stateNode));
          break;

         case 18:
          null !== X && (Yj ? (a = X, c = c.stateNode, 8 === a.nodeType ? Kf(a.parentNode, c) : 1 === a.nodeType && Kf(a, c), 
          bd(a)) : Kf(X, c.stateNode));
          break;

         case 4:
          d = X, e = Yj, X = c.stateNode.containerInfo, Yj = !0, Zj(a, b, c), X = d, Yj = e;
          break;

         case 0:
         case 11:
         case 14:
         case 15:
          if (!U && (null !== (d = c.updateQueue) && null !== (d = d.lastEffect))) {
            e = d = d.next;
            do {
              var f = e, g = f.destroy;
              f = f.tag, void 0 !== g && (0 != (2 & f) || 0 != (4 & f)) && Nj(c, b, g), e = e.next;
            } while (e !== d);
          }
          Zj(a, b, c);
          break;

         case 1:
          if (!U && (Mj(c, b), "function" == typeof (d = c.stateNode).componentWillUnmount)) try {
            d.props = c.memoizedProps, d.state = c.memoizedState, d.componentWillUnmount();
          } catch (h) {
            W(c, b, h);
          }
          Zj(a, b, c);
          break;

         case 21:
          Zj(a, b, c);
          break;

         case 22:
          1 & c.mode ? (U = (d = U) || null !== c.memoizedState, Zj(a, b, c), U = d) : Zj(a, b, c);
          break;

         default:
          Zj(a, b, c);
        }
      }
      function bk(a) {
        var b = a.updateQueue;
        if (null !== b) {
          a.updateQueue = null;
          var c = a.stateNode;
          null === c && (c = a.stateNode = new Lj), b.forEach((function(b) {
            var d = ck.bind(null, a, b);
            c.has(b) || (c.add(b), b.then(d, d));
          }));
        }
      }
      function dk(a, b) {
        var c = b.deletions;
        if (null !== c) for (var d = 0; d < c.length; d++) {
          var e = c[d];
          try {
            var f = a, g = b, h = g;
            a: for (;null !== h; ) {
              switch (h.tag) {
               case 5:
                X = h.stateNode, Yj = !1;
                break a;

               case 3:
               case 4:
                X = h.stateNode.containerInfo, Yj = !0;
                break a;
              }
              h = h.return;
            }
            if (null === X) throw Error(p(160));
            ak(f, g, e), X = null, Yj = !1;
            var k = e.alternate;
            null !== k && (k.return = null), e.return = null;
          } catch (l) {
            W(e, b, l);
          }
        }
        if (12854 & b.subtreeFlags) for (b = b.child; null !== b; ) ek(b, a), b = b.sibling;
      }
      function ek(a, b) {
        var c = a.alternate, d = a.flags;
        switch (a.tag) {
         case 0:
         case 11:
         case 14:
         case 15:
          if (dk(b, a), fk(a), 4 & d) {
            try {
              Qj(3, a, a.return), Rj(3, a);
            } catch (t) {
              W(a, a.return, t);
            }
            try {
              Qj(5, a, a.return);
            } catch (t) {
              W(a, a.return, t);
            }
          }
          break;

         case 1:
          dk(b, a), fk(a), 512 & d && null !== c && Mj(c, c.return);
          break;

         case 5:
          if (dk(b, a), fk(a), 512 & d && null !== c && Mj(c, c.return), 32 & a.flags) {
            var e = a.stateNode;
            try {
              ob(e, "");
            } catch (t) {
              W(a, a.return, t);
            }
          }
          if (4 & d && null != (e = a.stateNode)) {
            var f = a.memoizedProps, g = null !== c ? c.memoizedProps : f, h = a.type, k = a.updateQueue;
            if (a.updateQueue = null, null !== k) try {
              "input" === h && "radio" === f.type && null != f.name && ab(e, f), vb(h, g);
              var l = vb(h, f);
              for (g = 0; g < k.length; g += 2) {
                var m = k[g], q = k[g + 1];
                "style" === m ? sb(e, q) : "dangerouslySetInnerHTML" === m ? nb(e, q) : "children" === m ? ob(e, q) : ta(e, m, q, l);
              }
              switch (h) {
               case "input":
                bb(e, f);
                break;

               case "textarea":
                ib(e, f);
                break;

               case "select":
                var r = e._wrapperState.wasMultiple;
                e._wrapperState.wasMultiple = !!f.multiple;
                var y = f.value;
                null != y ? fb(e, !!f.multiple, y, !1) : r !== !!f.multiple && (null != f.defaultValue ? fb(e, !!f.multiple, f.defaultValue, !0) : fb(e, !!f.multiple, f.multiple ? [] : "", !1));
              }
              e[Pf] = f;
            } catch (t) {
              W(a, a.return, t);
            }
          }
          break;

         case 6:
          if (dk(b, a), fk(a), 4 & d) {
            if (null === a.stateNode) throw Error(p(162));
            e = a.stateNode, f = a.memoizedProps;
            try {
              e.nodeValue = f;
            } catch (t) {
              W(a, a.return, t);
            }
          }
          break;

         case 3:
          if (dk(b, a), fk(a), 4 & d && null !== c && c.memoizedState.isDehydrated) try {
            bd(b.containerInfo);
          } catch (t) {
            W(a, a.return, t);
          }
          break;

         case 4:
         default:
          dk(b, a), fk(a);
          break;

         case 13:
          dk(b, a), fk(a), 8192 & (e = a.child).flags && (f = null !== e.memoizedState, e.stateNode.isHidden = f, 
          !f || null !== e.alternate && null !== e.alternate.memoizedState || (gk = B())), 
          4 & d && bk(a);
          break;

         case 22:
          if (m = null !== c && null !== c.memoizedState, 1 & a.mode ? (U = (l = U) || m, 
          dk(b, a), U = l) : dk(b, a), fk(a), 8192 & d) {
            if (l = null !== a.memoizedState, (a.stateNode.isHidden = l) && !m && 0 != (1 & a.mode)) for (V = a, 
            m = a.child; null !== m; ) {
              for (q = V = m; null !== V; ) {
                switch (y = (r = V).child, r.tag) {
                 case 0:
                 case 11:
                 case 14:
                 case 15:
                  Qj(4, r, r.return);
                  break;

                 case 1:
                  Mj(r, r.return);
                  var n = r.stateNode;
                  if ("function" == typeof n.componentWillUnmount) {
                    d = r, c = r.return;
                    try {
                      b = d, n.props = b.memoizedProps, n.state = b.memoizedState, n.componentWillUnmount();
                    } catch (t) {
                      W(d, c, t);
                    }
                  }
                  break;

                 case 5:
                  Mj(r, r.return);
                  break;

                 case 22:
                  if (null !== r.memoizedState) {
                    hk(q);
                    continue;
                  }
                }
                null !== y ? (y.return = r, V = y) : hk(q);
              }
              m = m.sibling;
            }
            a: for (m = null, q = a; ;) {
              if (5 === q.tag) {
                if (null === m) {
                  m = q;
                  try {
                    e = q.stateNode, l ? "function" == typeof (f = e.style).setProperty ? f.setProperty("display", "none", "important") : f.display = "none" : (h = q.stateNode, 
                    g = null != (k = q.memoizedProps.style) && k.hasOwnProperty("display") ? k.display : null, 
                    h.style.display = rb("display", g));
                  } catch (t) {
                    W(a, a.return, t);
                  }
                }
              } else if (6 === q.tag) {
                if (null === m) try {
                  q.stateNode.nodeValue = l ? "" : q.memoizedProps;
                } catch (t) {
                  W(a, a.return, t);
                }
              } else if ((22 !== q.tag && 23 !== q.tag || null === q.memoizedState || q === a) && null !== q.child) {
                q.child.return = q, q = q.child;
                continue;
              }
              if (q === a) break a;
              for (;null === q.sibling; ) {
                if (null === q.return || q.return === a) break a;
                m === q && (m = null), q = q.return;
              }
              m === q && (m = null), q.sibling.return = q.return, q = q.sibling;
            }
          }
          break;

         case 19:
          dk(b, a), fk(a), 4 & d && bk(a);

         case 21:
        }
      }
      function fk(a) {
        var b = a.flags;
        if (2 & b) {
          try {
            a: {
              for (var c = a.return; null !== c; ) {
                if (Uj(c)) {
                  var d = c;
                  break a;
                }
                c = c.return;
              }
              throw Error(p(160));
            }
            switch (d.tag) {
             case 5:
              var e = d.stateNode;
              32 & d.flags && (ob(e, ""), d.flags &= -33), Xj(a, Vj(a), e);
              break;

             case 3:
             case 4:
              var g = d.stateNode.containerInfo;
              Wj(a, Vj(a), g);
              break;

             default:
              throw Error(p(161));
            }
          } catch (k) {
            W(a, a.return, k);
          }
          a.flags &= -3;
        }
        4096 & b && (a.flags &= -4097);
      }
      function ik(a, b, c) {
        V = a, jk(a, b, c);
      }
      function jk(a, b, c) {
        for (var d = 0 != (1 & a.mode); null !== V; ) {
          var e = V, f = e.child;
          if (22 === e.tag && d) {
            var g = null !== e.memoizedState || Kj;
            if (!g) {
              var h = e.alternate, k = null !== h && null !== h.memoizedState || U;
              h = Kj;
              var l = U;
              if (Kj = g, (U = k) && !l) for (V = e; null !== V; ) k = (g = V).child, 22 === g.tag && null !== g.memoizedState ? kk(e) : null !== k ? (k.return = g, 
              V = k) : kk(e);
              for (;null !== f; ) V = f, jk(f, b, c), f = f.sibling;
              V = e, Kj = h, U = l;
            }
            lk(a);
          } else 0 != (8772 & e.subtreeFlags) && null !== f ? (f.return = e, V = f) : lk(a);
        }
      }
      function lk(a) {
        for (;null !== V; ) {
          var b = V;
          if (0 != (8772 & b.flags)) {
            var c = b.alternate;
            try {
              if (0 != (8772 & b.flags)) switch (b.tag) {
               case 0:
               case 11:
               case 15:
                U || Rj(5, b);
                break;

               case 1:
                var d = b.stateNode;
                if (4 & b.flags && !U) if (null === c) d.componentDidMount(); else {
                  var e = b.elementType === b.type ? c.memoizedProps : Lg(b.type, c.memoizedProps);
                  d.componentDidUpdate(e, c.memoizedState, d.__reactInternalSnapshotBeforeUpdate);
                }
                var f = b.updateQueue;
                null !== f && ih(b, f, d);
                break;

               case 3:
                var g = b.updateQueue;
                if (null !== g) {
                  if (c = null, null !== b.child) switch (b.child.tag) {
                   case 5:
                   case 1:
                    c = b.child.stateNode;
                  }
                  ih(b, g, c);
                }
                break;

               case 5:
                var h = b.stateNode;
                if (null === c && 4 & b.flags) {
                  c = h;
                  var k = b.memoizedProps;
                  switch (b.type) {
                   case "button":
                   case "input":
                   case "select":
                   case "textarea":
                    k.autoFocus && c.focus();
                    break;

                   case "img":
                    k.src && (c.src = k.src);
                  }
                }
                break;

               case 6:
               case 4:
               case 12:
               case 19:
               case 17:
               case 21:
               case 22:
               case 23:
               case 25:
                break;

               case 13:
                if (null === b.memoizedState) {
                  var l = b.alternate;
                  if (null !== l) {
                    var m = l.memoizedState;
                    if (null !== m) {
                      var q = m.dehydrated;
                      null !== q && bd(q);
                    }
                  }
                }
                break;

               default:
                throw Error(p(163));
              }
              U || 512 & b.flags && Sj(b);
            } catch (r) {
              W(b, b.return, r);
            }
          }
          if (b === a) {
            V = null;
            break;
          }
          if (null !== (c = b.sibling)) {
            c.return = b.return, V = c;
            break;
          }
          V = b.return;
        }
      }
      function hk(a) {
        for (;null !== V; ) {
          var b = V;
          if (b === a) {
            V = null;
            break;
          }
          var c = b.sibling;
          if (null !== c) {
            c.return = b.return, V = c;
            break;
          }
          V = b.return;
        }
      }
      function kk(a) {
        for (;null !== V; ) {
          var b = V;
          try {
            switch (b.tag) {
             case 0:
             case 11:
             case 15:
              var c = b.return;
              try {
                Rj(4, b);
              } catch (k) {
                W(b, c, k);
              }
              break;

             case 1:
              var d = b.stateNode;
              if ("function" == typeof d.componentDidMount) {
                var e = b.return;
                try {
                  d.componentDidMount();
                } catch (k) {
                  W(b, e, k);
                }
              }
              var f = b.return;
              try {
                Sj(b);
              } catch (k) {
                W(b, f, k);
              }
              break;

             case 5:
              var g = b.return;
              try {
                Sj(b);
              } catch (k) {
                W(b, g, k);
              }
            }
          } catch (k) {
            W(b, b.return, k);
          }
          if (b === a) {
            V = null;
            break;
          }
          var h = b.sibling;
          if (null !== h) {
            h.return = b.return, V = h;
            break;
          }
          V = b.return;
        }
      }
      var Wk, mk = Math.ceil, nk = ua.ReactCurrentDispatcher, ok = ua.ReactCurrentOwner, pk = ua.ReactCurrentBatchConfig, K = 0, R = null, Y = null, Z = 0, gj = 0, fj = Uf(0), T = 0, qk = null, hh = 0, rk = 0, sk = 0, tk = null, uk = null, gk = 0, Hj = 1 / 0, vk = null, Pi = !1, Qi = null, Si = null, wk = !1, xk = null, yk = 0, zk = 0, Ak = null, Bk = -1, Ck = 0;
      function L() {
        return 0 != (6 & K) ? B() : -1 !== Bk ? Bk : Bk = B();
      }
      function lh(a) {
        return 0 == (1 & a.mode) ? 1 : 0 != (2 & K) && 0 !== Z ? Z & -Z : null !== Kg.transition ? (0 === Ck && (Ck = yc()), 
        Ck) : 0 !== (a = C) ? a : a = void 0 === (a = window.event) ? 16 : jd(a.type);
      }
      function mh(a, b, c, d) {
        if (50 < zk) throw zk = 0, Ak = null, Error(p(185));
        Ac(a, c, d), 0 != (2 & K) && a === R || (a === R && (0 == (2 & K) && (rk |= c), 
        4 === T && Dk(a, Z)), Ek(a, d), 1 === c && 0 === K && 0 == (1 & b.mode) && (Hj = B() + 500, 
        fg && jg()));
      }
      function Ek(a, b) {
        var c = a.callbackNode;
        !function(a, b) {
          for (var c = a.suspendedLanes, d = a.pingedLanes, e = a.expirationTimes, f = a.pendingLanes; 0 < f; ) {
            var g = 31 - oc(f), h = 1 << g, k = e[g];
            -1 === k ? 0 != (h & c) && 0 == (h & d) || (e[g] = vc(h, b)) : k <= b && (a.expiredLanes |= h), 
            f &= ~h;
          }
        }(a, b);
        var d = uc(a, a === R ? Z : 0);
        if (0 === d) null !== c && bc(c), a.callbackNode = null, a.callbackPriority = 0; else if (b = d & -d, 
        a.callbackPriority !== b) {
          if (null != c && bc(c), 1 === b) 0 === a.tag ? function(a) {
            fg = !0, hg(a);
          }(Fk.bind(null, a)) : hg(Fk.bind(null, a)), Jf((function() {
            0 == (6 & K) && jg();
          })), c = null; else {
            switch (Dc(d)) {
             case 1:
              c = fc;
              break;

             case 4:
              c = gc;
              break;

             case 16:
             default:
              c = hc;
              break;

             case 536870912:
              c = jc;
            }
            c = Gk(c, Hk.bind(null, a));
          }
          a.callbackPriority = b, a.callbackNode = c;
        }
      }
      function Hk(a, b) {
        if (Bk = -1, Ck = 0, 0 != (6 & K)) throw Error(p(327));
        var c = a.callbackNode;
        if (Ik() && a.callbackNode !== c) return null;
        var d = uc(a, a === R ? Z : 0);
        if (0 === d) return null;
        if (0 != (30 & d) || 0 != (d & a.expiredLanes) || b) b = Jk(a, d); else {
          b = d;
          var e = K;
          K |= 2;
          var f = Kk();
          for (R === a && Z === b || (vk = null, Hj = B() + 500, Lk(a, b)); ;) try {
            Mk();
            break;
          } catch (h) {
            Nk(a, h);
          }
          Qg(), nk.current = f, K = e, null !== Y ? b = 0 : (R = null, Z = 0, b = T);
        }
        if (0 !== b) {
          if (2 === b && (0 !== (e = xc(a)) && (d = e, b = Ok(a, e))), 1 === b) throw c = qk, 
          Lk(a, 0), Dk(a, d), Ek(a, B()), c;
          if (6 === b) Dk(a, d); else {
            if (e = a.current.alternate, 0 == (30 & d) && !function(a) {
              for (var b = a; ;) {
                if (16384 & b.flags) {
                  var c = b.updateQueue;
                  if (null !== c && null !== (c = c.stores)) for (var d = 0; d < c.length; d++) {
                    var e = c[d], f = e.getSnapshot;
                    e = e.value;
                    try {
                      if (!He(f(), e)) return !1;
                    } catch (g) {
                      return !1;
                    }
                  }
                }
                if (c = b.child, 16384 & b.subtreeFlags && null !== c) c.return = b, b = c; else {
                  if (b === a) break;
                  for (;null === b.sibling; ) {
                    if (null === b.return || b.return === a) return !0;
                    b = b.return;
                  }
                  b.sibling.return = b.return, b = b.sibling;
                }
              }
              return !0;
            }(e) && (2 === (b = Jk(a, d)) && (0 !== (f = xc(a)) && (d = f, b = Ok(a, f))), 1 === b)) throw c = qk, 
            Lk(a, 0), Dk(a, d), Ek(a, B()), c;
            switch (a.finishedWork = e, a.finishedLanes = d, b) {
             case 0:
             case 1:
              throw Error(p(345));

             case 2:
             case 5:
              Qk(a, uk, vk);
              break;

             case 3:
              if (Dk(a, d), (130023424 & d) === d && 10 < (b = gk + 500 - B())) {
                if (0 !== uc(a, 0)) break;
                if (((e = a.suspendedLanes) & d) !== d) {
                  L(), a.pingedLanes |= a.suspendedLanes & e;
                  break;
                }
                a.timeoutHandle = Ff(Qk.bind(null, a, uk, vk), b);
                break;
              }
              Qk(a, uk, vk);
              break;

             case 4:
              if (Dk(a, d), (4194240 & d) === d) break;
              for (b = a.eventTimes, e = -1; 0 < d; ) {
                var g = 31 - oc(d);
                f = 1 << g, (g = b[g]) > e && (e = g), d &= ~f;
              }
              if (d = e, 10 < (d = (120 > (d = B() - d) ? 120 : 480 > d ? 480 : 1080 > d ? 1080 : 1920 > d ? 1920 : 3e3 > d ? 3e3 : 4320 > d ? 4320 : 1960 * mk(d / 1960)) - d)) {
                a.timeoutHandle = Ff(Qk.bind(null, a, uk, vk), d);
                break;
              }
              Qk(a, uk, vk);
              break;

             default:
              throw Error(p(329));
            }
          }
        }
        return Ek(a, B()), a.callbackNode === c ? Hk.bind(null, a) : null;
      }
      function Ok(a, b) {
        var c = tk;
        return a.current.memoizedState.isDehydrated && (Lk(a, b).flags |= 256), 2 !== (a = Jk(a, b)) && (b = uk, 
        uk = c, null !== b && Gj(b)), a;
      }
      function Gj(a) {
        null === uk ? uk = a : uk.push.apply(uk, a);
      }
      function Dk(a, b) {
        for (b &= ~sk, b &= ~rk, a.suspendedLanes |= b, a.pingedLanes &= ~b, a = a.expirationTimes; 0 < b; ) {
          var c = 31 - oc(b), d = 1 << c;
          a[c] = -1, b &= ~d;
        }
      }
      function Fk(a) {
        if (0 != (6 & K)) throw Error(p(327));
        Ik();
        var b = uc(a, 0);
        if (0 == (1 & b)) return Ek(a, B()), null;
        var c = Jk(a, b);
        if (0 !== a.tag && 2 === c) {
          var d = xc(a);
          0 !== d && (b = d, c = Ok(a, d));
        }
        if (1 === c) throw c = qk, Lk(a, 0), Dk(a, b), Ek(a, B()), c;
        if (6 === c) throw Error(p(345));
        return a.finishedWork = a.current.alternate, a.finishedLanes = b, Qk(a, uk, vk), 
        Ek(a, B()), null;
      }
      function Rk(a, b) {
        var c = K;
        K |= 1;
        try {
          return a(b);
        } finally {
          0 === (K = c) && (Hj = B() + 500, fg && jg());
        }
      }
      function Sk(a) {
        null !== xk && 0 === xk.tag && 0 == (6 & K) && Ik();
        var b = K;
        K |= 1;
        var c = pk.transition, d = C;
        try {
          if (pk.transition = null, C = 1, a) return a();
        } finally {
          C = d, pk.transition = c, 0 == (6 & (K = b)) && jg();
        }
      }
      function Ij() {
        gj = fj.current, E(fj);
      }
      function Lk(a, b) {
        a.finishedWork = null, a.finishedLanes = 0;
        var c = a.timeoutHandle;
        if (-1 !== c && (a.timeoutHandle = -1, Gf(c)), null !== Y) for (c = Y.return; null !== c; ) {
          var d = c;
          switch (wg(d), d.tag) {
           case 1:
            null != (d = d.type.childContextTypes) && $f();
            break;

           case 3:
            Jh(), E(Wf), E(H), Oh();
            break;

           case 5:
            Lh(d);
            break;

           case 4:
            Jh();
            break;

           case 13:
           case 19:
            E(M);
            break;

           case 10:
            Rg(d.type._context);
            break;

           case 22:
           case 23:
            Ij();
          }
          c = c.return;
        }
        if (R = a, Y = a = wh(a.current, null), Z = gj = b, T = 0, qk = null, sk = rk = hh = 0, 
        uk = tk = null, null !== Wg) {
          for (b = 0; b < Wg.length; b++) if (null !== (d = (c = Wg[b]).interleaved)) {
            c.interleaved = null;
            var e = d.next, f = c.pending;
            if (null !== f) {
              var g = f.next;
              f.next = e, d.next = g;
            }
            c.pending = d;
          }
          Wg = null;
        }
        return a;
      }
      function Nk(a, b) {
        for (;;) {
          var c = Y;
          try {
            if (Qg(), Ph.current = ai, Sh) {
              for (var d = N.memoizedState; null !== d; ) {
                var e = d.queue;
                null !== e && (e.pending = null), d = d.next;
              }
              Sh = !1;
            }
            if (Rh = 0, P = O = N = null, Th = !1, Uh = 0, ok.current = null, null === c || null === c.return) {
              T = 1, qk = b, Y = null;
              break;
            }
            a: {
              var f = a, g = c.return, h = c, k = b;
              if (b = Z, h.flags |= 32768, null !== k && "object" == typeof k && "function" == typeof k.then) {
                var l = k, m = h, q = m.tag;
                if (0 == (1 & m.mode) && (0 === q || 11 === q || 15 === q)) {
                  var r = m.alternate;
                  r ? (m.updateQueue = r.updateQueue, m.memoizedState = r.memoizedState, m.lanes = r.lanes) : (m.updateQueue = null, 
                  m.memoizedState = null);
                }
                var y = Vi(g);
                if (null !== y) {
                  y.flags &= -257, Wi(y, g, h, 0, b), 1 & y.mode && Ti(f, l, b), k = l;
                  var n = (b = y).updateQueue;
                  if (null === n) {
                    var t = new Set;
                    t.add(k), b.updateQueue = t;
                  } else n.add(k);
                  break a;
                }
                if (0 == (1 & b)) {
                  Ti(f, l, b), uj();
                  break a;
                }
                k = Error(p(426));
              } else if (I && 1 & h.mode) {
                var J = Vi(g);
                if (null !== J) {
                  0 == (65536 & J.flags) && (J.flags |= 256), Wi(J, g, h, 0, b), Jg(Ki(k, h));
                  break a;
                }
              }
              f = k = Ki(k, h), 4 !== T && (T = 2), null === tk ? tk = [ f ] : tk.push(f), f = g;
              do {
                switch (f.tag) {
                 case 3:
                  f.flags |= 65536, b &= -b, f.lanes |= b, fh(f, Oi(0, k, b));
                  break a;

                 case 1:
                  h = k;
                  var w = f.type, u = f.stateNode;
                  if (0 == (128 & f.flags) && ("function" == typeof w.getDerivedStateFromError || null !== u && "function" == typeof u.componentDidCatch && (null === Si || !Si.has(u)))) {
                    f.flags |= 65536, b &= -b, f.lanes |= b, fh(f, Ri(f, h, b));
                    break a;
                  }
                }
                f = f.return;
              } while (null !== f);
            }
            Tk(c);
          } catch (na) {
            b = na, Y === c && null !== c && (Y = c = c.return);
            continue;
          }
          break;
        }
      }
      function Kk() {
        var a = nk.current;
        return nk.current = ai, null === a ? ai : a;
      }
      function uj() {
        0 !== T && 3 !== T && 2 !== T || (T = 4), null === R || 0 == (268435455 & hh) && 0 == (268435455 & rk) || Dk(R, Z);
      }
      function Jk(a, b) {
        var c = K;
        K |= 2;
        var d = Kk();
        for (R === a && Z === b || (vk = null, Lk(a, b)); ;) try {
          Uk();
          break;
        } catch (e) {
          Nk(a, e);
        }
        if (Qg(), K = c, nk.current = d, null !== Y) throw Error(p(261));
        return R = null, Z = 0, T;
      }
      function Uk() {
        for (;null !== Y; ) Vk(Y);
      }
      function Mk() {
        for (;null !== Y && !cc(); ) Vk(Y);
      }
      function Vk(a) {
        var b = Wk(a.alternate, a, gj);
        a.memoizedProps = a.pendingProps, null === b ? Tk(a) : Y = b, ok.current = null;
      }
      function Tk(a) {
        var b = a;
        do {
          var c = b.alternate;
          if (a = b.return, 0 == (32768 & b.flags)) {
            if (null !== (c = Fj(c, b, gj))) return void (Y = c);
          } else {
            if (null !== (c = Jj(c, b))) return c.flags &= 32767, void (Y = c);
            if (null === a) return T = 6, void (Y = null);
            a.flags |= 32768, a.subtreeFlags = 0, a.deletions = null;
          }
          if (null !== (b = b.sibling)) return void (Y = b);
          Y = b = a;
        } while (null !== b);
        0 === T && (T = 5);
      }
      function Qk(a, b, c) {
        var d = C, e = pk.transition;
        try {
          pk.transition = null, C = 1, function(a, b, c, d) {
            do {
              Ik();
            } while (null !== xk);
            if (0 != (6 & K)) throw Error(p(327));
            c = a.finishedWork;
            var e = a.finishedLanes;
            if (null === c) return null;
            if (a.finishedWork = null, a.finishedLanes = 0, c === a.current) throw Error(p(177));
            a.callbackNode = null, a.callbackPriority = 0;
            var f = c.lanes | c.childLanes;
            if (function(a, b) {
              var c = a.pendingLanes & ~b;
              a.pendingLanes = b, a.suspendedLanes = 0, a.pingedLanes = 0, a.expiredLanes &= b, 
              a.mutableReadLanes &= b, a.entangledLanes &= b, b = a.entanglements;
              var d = a.eventTimes;
              for (a = a.expirationTimes; 0 < c; ) {
                var e = 31 - oc(c), f = 1 << e;
                b[e] = 0, d[e] = -1, a[e] = -1, c &= ~f;
              }
            }(a, f), a === R && (Y = R = null, Z = 0), 0 == (2064 & c.subtreeFlags) && 0 == (2064 & c.flags) || wk || (wk = !0, 
            Gk(hc, (function() {
              return Ik(), null;
            }))), f = 0 != (15990 & c.flags), 0 != (15990 & c.subtreeFlags) || f) {
              f = pk.transition, pk.transition = null;
              var g = C;
              C = 1;
              var h = K;
              K |= 4, ok.current = null, function(a, b) {
                if (Cf = dd, Ne(a = Me())) {
                  if ("selectionStart" in a) var c = {
                    start: a.selectionStart,
                    end: a.selectionEnd
                  }; else a: {
                    var d = (c = (c = a.ownerDocument) && c.defaultView || window).getSelection && c.getSelection();
                    if (d && 0 !== d.rangeCount) {
                      c = d.anchorNode;
                      var e = d.anchorOffset, f = d.focusNode;
                      d = d.focusOffset;
                      try {
                        c.nodeType, f.nodeType;
                      } catch (F) {
                        c = null;
                        break a;
                      }
                      var g = 0, h = -1, k = -1, l = 0, m = 0, q = a, r = null;
                      b: for (;;) {
                        for (var y; q !== c || 0 !== e && 3 !== q.nodeType || (h = g + e), q !== f || 0 !== d && 3 !== q.nodeType || (k = g + d), 
                        3 === q.nodeType && (g += q.nodeValue.length), null !== (y = q.firstChild); ) r = q, 
                        q = y;
                        for (;;) {
                          if (q === a) break b;
                          if (r === c && ++l === e && (h = g), r === f && ++m === d && (k = g), null !== (y = q.nextSibling)) break;
                          r = (q = r).parentNode;
                        }
                        q = y;
                      }
                      c = -1 === h || -1 === k ? null : {
                        start: h,
                        end: k
                      };
                    } else c = null;
                  }
                  c = c || {
                    start: 0,
                    end: 0
                  };
                } else c = null;
                for (Df = {
                  focusedElem: a,
                  selectionRange: c
                }, dd = !1, V = b; null !== V; ) if (a = (b = V).child, 0 != (1028 & b.subtreeFlags) && null !== a) a.return = b, 
                V = a; else for (;null !== V; ) {
                  b = V;
                  try {
                    var n = b.alternate;
                    if (0 != (1024 & b.flags)) switch (b.tag) {
                     case 0:
                     case 11:
                     case 15:
                     case 5:
                     case 6:
                     case 4:
                     case 17:
                      break;

                     case 1:
                      if (null !== n) {
                        var t = n.memoizedProps, J = n.memoizedState, x = b.stateNode, w = x.getSnapshotBeforeUpdate(b.elementType === b.type ? t : Lg(b.type, t), J);
                        x.__reactInternalSnapshotBeforeUpdate = w;
                      }
                      break;

                     case 3:
                      var u = b.stateNode.containerInfo;
                      1 === u.nodeType ? u.textContent = "" : 9 === u.nodeType && u.documentElement && u.removeChild(u.documentElement);
                      break;

                     default:
                      throw Error(p(163));
                    }
                  } catch (F) {
                    W(b, b.return, F);
                  }
                  if (null !== (a = b.sibling)) {
                    a.return = b.return, V = a;
                    break;
                  }
                  V = b.return;
                }
                n = Oj, Oj = !1;
              }(a, c), ek(c, a), Oe(Df), dd = !!Cf, Df = Cf = null, a.current = c, ik(c, a, e), 
              dc(), K = h, C = g, pk.transition = f;
            } else a.current = c;
            if (wk && (wk = !1, xk = a, yk = e), f = a.pendingLanes, 0 === f && (Si = null), 
            function(a) {
              if (lc && "function" == typeof lc.onCommitFiberRoot) try {
                lc.onCommitFiberRoot(kc, a, void 0, 128 == (128 & a.current.flags));
              } catch (b) {}
            }(c.stateNode), Ek(a, B()), null !== b) for (d = a.onRecoverableError, c = 0; c < b.length; c++) e = b[c], 
            d(e.value, {
              componentStack: e.stack,
              digest: e.digest
            });
            if (Pi) throw Pi = !1, a = Qi, Qi = null, a;
            0 != (1 & yk) && 0 !== a.tag && Ik(), f = a.pendingLanes, 0 != (1 & f) ? a === Ak ? zk++ : (zk = 0, 
            Ak = a) : zk = 0, jg();
          }(a, b, c, d);
        } finally {
          pk.transition = e, C = d;
        }
        return null;
      }
      function Ik() {
        if (null !== xk) {
          var a = Dc(yk), b = pk.transition, c = C;
          try {
            if (pk.transition = null, C = 16 > a ? 16 : a, null === xk) var d = !1; else {
              if (a = xk, xk = null, yk = 0, 0 != (6 & K)) throw Error(p(331));
              var e = K;
              for (K |= 4, V = a.current; null !== V; ) {
                var f = V, g = f.child;
                if (0 != (16 & V.flags)) {
                  var h = f.deletions;
                  if (null !== h) {
                    for (var k = 0; k < h.length; k++) {
                      var l = h[k];
                      for (V = l; null !== V; ) {
                        var m = V;
                        switch (m.tag) {
                         case 0:
                         case 11:
                         case 15:
                          Qj(8, m, f);
                        }
                        var q = m.child;
                        if (null !== q) q.return = m, V = q; else for (;null !== V; ) {
                          var r = (m = V).sibling, y = m.return;
                          if (Tj(m), m === l) {
                            V = null;
                            break;
                          }
                          if (null !== r) {
                            r.return = y, V = r;
                            break;
                          }
                          V = y;
                        }
                      }
                    }
                    var n = f.alternate;
                    if (null !== n) {
                      var t = n.child;
                      if (null !== t) {
                        n.child = null;
                        do {
                          var J = t.sibling;
                          t.sibling = null, t = J;
                        } while (null !== t);
                      }
                    }
                    V = f;
                  }
                }
                if (0 != (2064 & f.subtreeFlags) && null !== g) g.return = f, V = g; else b: for (;null !== V; ) {
                  if (0 != (2048 & (f = V).flags)) switch (f.tag) {
                   case 0:
                   case 11:
                   case 15:
                    Qj(9, f, f.return);
                  }
                  var x = f.sibling;
                  if (null !== x) {
                    x.return = f.return, V = x;
                    break b;
                  }
                  V = f.return;
                }
              }
              var w = a.current;
              for (V = w; null !== V; ) {
                var u = (g = V).child;
                if (0 != (2064 & g.subtreeFlags) && null !== u) u.return = g, V = u; else b: for (g = w; null !== V; ) {
                  if (0 != (2048 & (h = V).flags)) try {
                    switch (h.tag) {
                     case 0:
                     case 11:
                     case 15:
                      Rj(9, h);
                    }
                  } catch (na) {
                    W(h, h.return, na);
                  }
                  if (h === g) {
                    V = null;
                    break b;
                  }
                  var F = h.sibling;
                  if (null !== F) {
                    F.return = h.return, V = F;
                    break b;
                  }
                  V = h.return;
                }
              }
              if (K = e, jg(), lc && "function" == typeof lc.onPostCommitFiberRoot) try {
                lc.onPostCommitFiberRoot(kc, a);
              } catch (na) {}
              d = !0;
            }
            return d;
          } finally {
            C = c, pk.transition = b;
          }
        }
        return !1;
      }
      function Yk(a, b, c) {
        a = dh(a, b = Oi(0, b = Ki(c, b), 1), 1), b = L(), null !== a && (Ac(a, 1, b), Ek(a, b));
      }
      function W(a, b, c) {
        if (3 === a.tag) Yk(a, a, c); else for (;null !== b; ) {
          if (3 === b.tag) {
            Yk(b, a, c);
            break;
          }
          if (1 === b.tag) {
            var d = b.stateNode;
            if ("function" == typeof b.type.getDerivedStateFromError || "function" == typeof d.componentDidCatch && (null === Si || !Si.has(d))) {
              b = dh(b, a = Ri(b, a = Ki(c, a), 1), 1), a = L(), null !== b && (Ac(b, 1, a), Ek(b, a));
              break;
            }
          }
          b = b.return;
        }
      }
      function Ui(a, b, c) {
        var d = a.pingCache;
        null !== d && d.delete(b), b = L(), a.pingedLanes |= a.suspendedLanes & c, R === a && (Z & c) === c && (4 === T || 3 === T && (130023424 & Z) === Z && 500 > B() - gk ? Lk(a, 0) : sk |= c), 
        Ek(a, b);
      }
      function Zk(a, b) {
        0 === b && (0 == (1 & a.mode) ? b = 1 : (b = sc, 0 == (130023424 & (sc <<= 1)) && (sc = 4194304)));
        var c = L();
        null !== (a = Zg(a, b)) && (Ac(a, b, c), Ek(a, c));
      }
      function vj(a) {
        var b = a.memoizedState, c = 0;
        null !== b && (c = b.retryLane), Zk(a, c);
      }
      function ck(a, b) {
        var c = 0;
        switch (a.tag) {
         case 13:
          var d = a.stateNode, e = a.memoizedState;
          null !== e && (c = e.retryLane);
          break;

         case 19:
          d = a.stateNode;
          break;

         default:
          throw Error(p(314));
        }
        null !== d && d.delete(b), Zk(a, c);
      }
      function Gk(a, b) {
        return ac(a, b);
      }
      function al(a, b, c, d) {
        this.tag = a, this.key = c, this.sibling = this.child = this.return = this.stateNode = this.type = this.elementType = null, 
        this.index = 0, this.ref = null, this.pendingProps = b, this.dependencies = this.memoizedState = this.updateQueue = this.memoizedProps = null, 
        this.mode = d, this.subtreeFlags = this.flags = 0, this.deletions = null, this.childLanes = this.lanes = 0, 
        this.alternate = null;
      }
      function Bg(a, b, c, d) {
        return new al(a, b, c, d);
      }
      function bj(a) {
        return !(!(a = a.prototype) || !a.isReactComponent);
      }
      function wh(a, b) {
        var c = a.alternate;
        return null === c ? ((c = Bg(a.tag, b, a.key, a.mode)).elementType = a.elementType, 
        c.type = a.type, c.stateNode = a.stateNode, c.alternate = a, a.alternate = c) : (c.pendingProps = b, 
        c.type = a.type, c.flags = 0, c.subtreeFlags = 0, c.deletions = null), c.flags = 14680064 & a.flags, 
        c.childLanes = a.childLanes, c.lanes = a.lanes, c.child = a.child, c.memoizedProps = a.memoizedProps, 
        c.memoizedState = a.memoizedState, c.updateQueue = a.updateQueue, b = a.dependencies, 
        c.dependencies = null === b ? null : {
          lanes: b.lanes,
          firstContext: b.firstContext
        }, c.sibling = a.sibling, c.index = a.index, c.ref = a.ref, c;
      }
      function yh(a, b, c, d, e, f) {
        var g = 2;
        if (d = a, "function" == typeof a) bj(a) && (g = 1); else if ("string" == typeof a) g = 5; else a: switch (a) {
         case ya:
          return Ah(c.children, e, f, b);

         case za:
          g = 8, e |= 8;
          break;

         case Aa:
          return (a = Bg(12, c, b, 2 | e)).elementType = Aa, a.lanes = f, a;

         case Ea:
          return (a = Bg(13, c, b, e)).elementType = Ea, a.lanes = f, a;

         case Fa:
          return (a = Bg(19, c, b, e)).elementType = Fa, a.lanes = f, a;

         case Ia:
          return qj(c, e, f, b);

         default:
          if ("object" == typeof a && null !== a) switch (a.$$typeof) {
           case Ba:
            g = 10;
            break a;

           case Ca:
            g = 9;
            break a;

           case Da:
            g = 11;
            break a;

           case Ga:
            g = 14;
            break a;

           case Ha:
            g = 16, d = null;
            break a;
          }
          throw Error(p(130, null == a ? a : typeof a, ""));
        }
        return (b = Bg(g, c, b, e)).elementType = a, b.type = d, b.lanes = f, b;
      }
      function Ah(a, b, c, d) {
        return (a = Bg(7, a, d, b)).lanes = c, a;
      }
      function qj(a, b, c, d) {
        return (a = Bg(22, a, d, b)).elementType = Ia, a.lanes = c, a.stateNode = {
          isHidden: !1
        }, a;
      }
      function xh(a, b, c) {
        return (a = Bg(6, a, null, b)).lanes = c, a;
      }
      function zh(a, b, c) {
        return (b = Bg(4, null !== a.children ? a.children : [], a.key, b)).lanes = c, b.stateNode = {
          containerInfo: a.containerInfo,
          pendingChildren: null,
          implementation: a.implementation
        }, b;
      }
      function bl(a, b, c, d, e) {
        this.tag = b, this.containerInfo = a, this.finishedWork = this.pingCache = this.current = this.pendingChildren = null, 
        this.timeoutHandle = -1, this.callbackNode = this.pendingContext = this.context = null, 
        this.callbackPriority = 0, this.eventTimes = zc(0), this.expirationTimes = zc(-1), 
        this.entangledLanes = this.finishedLanes = this.mutableReadLanes = this.expiredLanes = this.pingedLanes = this.suspendedLanes = this.pendingLanes = 0, 
        this.entanglements = zc(0), this.identifierPrefix = d, this.onRecoverableError = e, 
        this.mutableSourceEagerHydrationData = null;
      }
      function cl(a, b, c, d, e, f, g, h, k) {
        return a = new bl(a, b, c, h, k), 1 === b ? (b = 1, !0 === f && (b |= 8)) : b = 0, 
        f = Bg(3, null, null, b), a.current = f, f.stateNode = a, f.memoizedState = {
          element: d,
          isDehydrated: c,
          cache: null,
          transitions: null,
          pendingSuspenseBoundaries: null
        }, ah(f), a;
      }
      function el(a) {
        if (!a) return Vf;
        a: {
          if (Vb(a = a._reactInternals) !== a || 1 !== a.tag) throw Error(p(170));
          var b = a;
          do {
            switch (b.tag) {
             case 3:
              b = b.stateNode.context;
              break a;

             case 1:
              if (Zf(b.type)) {
                b = b.stateNode.__reactInternalMemoizedMergedChildContext;
                break a;
              }
            }
            b = b.return;
          } while (null !== b);
          throw Error(p(171));
        }
        if (1 === a.tag) {
          var c = a.type;
          if (Zf(c)) return bg(a, c, b);
        }
        return b;
      }
      function fl(a, b, c, d, e, f, g, h, k) {
        return (a = cl(c, d, !0, a, 0, f, 0, h, k)).context = el(null), c = a.current, (f = ch(d = L(), e = lh(c))).callback = null != b ? b : null, 
        dh(c, f, e), a.current.lanes = e, Ac(a, e, d), Ek(a, d), a;
      }
      function gl(a, b, c, d) {
        var e = b.current, f = L(), g = lh(e);
        return c = el(c), null === b.context ? b.context = c : b.pendingContext = c, (b = ch(f, g)).payload = {
          element: a
        }, null !== (d = void 0 === d ? null : d) && (b.callback = d), null !== (a = dh(e, b, g)) && (mh(a, e, g, f), 
        eh(a, e, g)), g;
      }
      function hl(a) {
        return (a = a.current).child ? (a.child.tag, a.child.stateNode) : null;
      }
      function il(a, b) {
        if (null !== (a = a.memoizedState) && null !== a.dehydrated) {
          var c = a.retryLane;
          a.retryLane = 0 !== c && c < b ? c : b;
        }
      }
      function jl(a, b) {
        il(a, b), (a = a.alternate) && il(a, b);
      }
      Wk = function(a, b, c) {
        if (null !== a) if (a.memoizedProps !== b.pendingProps || Wf.current) Ug = !0; else {
          if (0 == (a.lanes & c) && 0 == (128 & b.flags)) return Ug = !1, function(a, b, c) {
            switch (b.tag) {
             case 3:
              lj(b), Ig();
              break;

             case 5:
              Kh(b);
              break;

             case 1:
              Zf(b.type) && cg(b);
              break;

             case 4:
              Ih(b, b.stateNode.containerInfo);
              break;

             case 10:
              var d = b.type._context, e = b.memoizedProps.value;
              G(Mg, d._currentValue), d._currentValue = e;
              break;

             case 13:
              if (null !== (d = b.memoizedState)) return null !== d.dehydrated ? (G(M, 1 & M.current), 
              b.flags |= 128, null) : 0 != (c & b.child.childLanes) ? pj(a, b, c) : (G(M, 1 & M.current), 
              null !== (a = $i(a, b, c)) ? a.sibling : null);
              G(M, 1 & M.current);
              break;

             case 19:
              if (d = 0 != (c & b.childLanes), 0 != (128 & a.flags)) {
                if (d) return yj(a, b, c);
                b.flags |= 128;
              }
              if (null !== (e = b.memoizedState) && (e.rendering = null, e.tail = null, e.lastEffect = null), 
              G(M, M.current), d) break;
              return null;

             case 22:
             case 23:
              return b.lanes = 0, ej(a, b, c);
            }
            return $i(a, b, c);
          }(a, b, c);
          Ug = 0 != (131072 & a.flags);
        } else Ug = !1, I && 0 != (1048576 & b.flags) && ug(b, ng, b.index);
        switch (b.lanes = 0, b.tag) {
         case 2:
          var d = b.type;
          jj(a, b), a = b.pendingProps;
          var e = Yf(b, H.current);
          Tg(b, c), e = Xh(null, b, d, a, e, c);
          var f = bi();
          return b.flags |= 1, "object" == typeof e && null !== e && "function" == typeof e.render && void 0 === e.$$typeof ? (b.tag = 1, 
          b.memoizedState = null, b.updateQueue = null, Zf(d) ? (f = !0, cg(b)) : f = !1, 
          b.memoizedState = null !== e.state && void 0 !== e.state ? e.state : null, ah(b), 
          e.updater = nh, b.stateNode = e, e._reactInternals = b, rh(b, d, a, c), b = kj(null, b, d, !0, f, c)) : (b.tag = 0, 
          I && f && vg(b), Yi(null, b, e, c), b = b.child), b;

         case 16:
          d = b.elementType;
          a: {
            switch (jj(a, b), a = b.pendingProps, d = (e = d._init)(d._payload), b.type = d, 
            e = b.tag = function(a) {
              if ("function" == typeof a) return bj(a) ? 1 : 0;
              if (null != a) {
                if ((a = a.$$typeof) === Da) return 11;
                if (a === Ga) return 14;
              }
              return 2;
            }(d), a = Lg(d, a), e) {
             case 0:
              b = dj(null, b, d, a, c);
              break a;

             case 1:
              b = ij(null, b, d, a, c);
              break a;

             case 11:
              b = Zi(null, b, d, a, c);
              break a;

             case 14:
              b = aj(null, b, d, Lg(d.type, a), c);
              break a;
            }
            throw Error(p(306, d, ""));
          }
          return b;

         case 0:
          return d = b.type, e = b.pendingProps, dj(a, b, d, e = b.elementType === d ? e : Lg(d, e), c);

         case 1:
          return d = b.type, e = b.pendingProps, ij(a, b, d, e = b.elementType === d ? e : Lg(d, e), c);

         case 3:
          a: {
            if (lj(b), null === a) throw Error(p(387));
            d = b.pendingProps, e = (f = b.memoizedState).element, bh(a, b), gh(b, d, null, c);
            var g = b.memoizedState;
            if (d = g.element, f.isDehydrated) {
              if (f = {
                element: d,
                isDehydrated: !1,
                cache: g.cache,
                pendingSuspenseBoundaries: g.pendingSuspenseBoundaries,
                transitions: g.transitions
              }, b.updateQueue.baseState = f, b.memoizedState = f, 256 & b.flags) {
                b = mj(a, b, d, c, e = Ki(Error(p(423)), b));
                break a;
              }
              if (d !== e) {
                b = mj(a, b, d, c, e = Ki(Error(p(424)), b));
                break a;
              }
              for (yg = Lf(b.stateNode.containerInfo.firstChild), xg = b, I = !0, zg = null, c = Ch(b, null, d, c), 
              b.child = c; c; ) c.flags = -3 & c.flags | 4096, c = c.sibling;
            } else {
              if (Ig(), d === e) {
                b = $i(a, b, c);
                break a;
              }
              Yi(a, b, d, c);
            }
            b = b.child;
          }
          return b;

         case 5:
          return Kh(b), null === a && Eg(b), d = b.type, e = b.pendingProps, f = null !== a ? a.memoizedProps : null, 
          g = e.children, Ef(d, e) ? g = null : null !== f && Ef(d, f) && (b.flags |= 32), 
          hj(a, b), Yi(a, b, g, c), b.child;

         case 6:
          return null === a && Eg(b), null;

         case 13:
          return pj(a, b, c);

         case 4:
          return Ih(b, b.stateNode.containerInfo), d = b.pendingProps, null === a ? b.child = Bh(b, null, d, c) : Yi(a, b, d, c), 
          b.child;

         case 11:
          return d = b.type, e = b.pendingProps, Zi(a, b, d, e = b.elementType === d ? e : Lg(d, e), c);

         case 7:
          return Yi(a, b, b.pendingProps, c), b.child;

         case 8:
         case 12:
          return Yi(a, b, b.pendingProps.children, c), b.child;

         case 10:
          a: {
            if (d = b.type._context, e = b.pendingProps, f = b.memoizedProps, g = e.value, G(Mg, d._currentValue), 
            d._currentValue = g, null !== f) if (He(f.value, g)) {
              if (f.children === e.children && !Wf.current) {
                b = $i(a, b, c);
                break a;
              }
            } else for (null !== (f = b.child) && (f.return = b); null !== f; ) {
              var h = f.dependencies;
              if (null !== h) {
                g = f.child;
                for (var k = h.firstContext; null !== k; ) {
                  if (k.context === d) {
                    if (1 === f.tag) {
                      (k = ch(-1, c & -c)).tag = 2;
                      var l = f.updateQueue;
                      if (null !== l) {
                        var m = (l = l.shared).pending;
                        null === m ? k.next = k : (k.next = m.next, m.next = k), l.pending = k;
                      }
                    }
                    f.lanes |= c, null !== (k = f.alternate) && (k.lanes |= c), Sg(f.return, c, b), 
                    h.lanes |= c;
                    break;
                  }
                  k = k.next;
                }
              } else if (10 === f.tag) g = f.type === b.type ? null : f.child; else if (18 === f.tag) {
                if (null === (g = f.return)) throw Error(p(341));
                g.lanes |= c, null !== (h = g.alternate) && (h.lanes |= c), Sg(g, c, b), g = f.sibling;
              } else g = f.child;
              if (null !== g) g.return = f; else for (g = f; null !== g; ) {
                if (g === b) {
                  g = null;
                  break;
                }
                if (null !== (f = g.sibling)) {
                  f.return = g.return, g = f;
                  break;
                }
                g = g.return;
              }
              f = g;
            }
            Yi(a, b, e.children, c), b = b.child;
          }
          return b;

         case 9:
          return e = b.type, d = b.pendingProps.children, Tg(b, c), d = d(e = Vg(e)), b.flags |= 1, 
          Yi(a, b, d, c), b.child;

         case 14:
          return e = Lg(d = b.type, b.pendingProps), aj(a, b, d, e = Lg(d.type, e), c);

         case 15:
          return cj(a, b, b.type, b.pendingProps, c);

         case 17:
          return d = b.type, e = b.pendingProps, e = b.elementType === d ? e : Lg(d, e), jj(a, b), 
          b.tag = 1, Zf(d) ? (a = !0, cg(b)) : a = !1, Tg(b, c), ph(b, d, e), rh(b, d, e, c), 
          kj(null, b, d, !0, a, c);

         case 19:
          return yj(a, b, c);

         case 22:
          return ej(a, b, c);
        }
        throw Error(p(156, b.tag));
      };
      var ll = "function" == typeof reportError ? reportError : function(a) {
        console.error(a);
      };
      function ml(a) {
        this._internalRoot = a;
      }
      function nl(a) {
        this._internalRoot = a;
      }
      function ol(a) {
        return !(!a || 1 !== a.nodeType && 9 !== a.nodeType && 11 !== a.nodeType);
      }
      function pl(a) {
        return !(!a || 1 !== a.nodeType && 9 !== a.nodeType && 11 !== a.nodeType && (8 !== a.nodeType || " react-mount-point-unstable " !== a.nodeValue));
      }
      function ql() {}
      function sl(a, b, c, d, e) {
        var f = c._reactRootContainer;
        if (f) {
          var g = f;
          if ("function" == typeof e) {
            var h = e;
            e = function() {
              var a = hl(g);
              h.call(a);
            };
          }
          gl(b, g, a, e);
        } else g = function(a, b, c, d, e) {
          if (e) {
            if ("function" == typeof d) {
              var f = d;
              d = function() {
                var a = hl(g);
                f.call(a);
              };
            }
            var g = fl(b, d, a, 0, null, !1, 0, "", ql);
            return a._reactRootContainer = g, a[uf] = g.current, sf(8 === a.nodeType ? a.parentNode : a), 
            Sk(), g;
          }
          for (;e = a.lastChild; ) a.removeChild(e);
          if ("function" == typeof d) {
            var h = d;
            d = function() {
              var a = hl(k);
              h.call(a);
            };
          }
          var k = cl(a, 0, !1, null, 0, !1, 0, "", ql);
          return a._reactRootContainer = k, a[uf] = k.current, sf(8 === a.nodeType ? a.parentNode : a), 
          Sk((function() {
            gl(b, k, c, d);
          })), k;
        }(c, b, a, e, d);
        return hl(g);
      }
      nl.prototype.render = ml.prototype.render = function(a) {
        var b = this._internalRoot;
        if (null === b) throw Error(p(409));
        gl(a, b, null, null);
      }, nl.prototype.unmount = ml.prototype.unmount = function() {
        var a = this._internalRoot;
        if (null !== a) {
          this._internalRoot = null;
          var b = a.containerInfo;
          Sk((function() {
            gl(null, a, null, null);
          })), b[uf] = null;
        }
      }, nl.prototype.unstable_scheduleHydration = function(a) {
        if (a) {
          var b = Hc();
          a = {
            blockedOn: null,
            target: a,
            priority: b
          };
          for (var c = 0; c < Qc.length && 0 !== b && b < Qc[c].priority; c++) ;
          Qc.splice(c, 0, a), 0 === c && Vc(a);
        }
      }, Ec = function(a) {
        switch (a.tag) {
         case 3:
          var b = a.stateNode;
          if (b.current.memoizedState.isDehydrated) {
            var c = tc(b.pendingLanes);
            0 !== c && (Cc(b, 1 | c), Ek(b, B()), 0 == (6 & K) && (Hj = B() + 500, jg()));
          }
          break;

         case 13:
          Sk((function() {
            var b = Zg(a, 1);
            if (null !== b) {
              var c = L();
              mh(b, a, 1, c);
            }
          })), jl(a, 1);
        }
      }, Fc = function(a) {
        if (13 === a.tag) {
          var b = Zg(a, 134217728);
          if (null !== b) mh(b, a, 134217728, L());
          jl(a, 134217728);
        }
      }, Gc = function(a) {
        if (13 === a.tag) {
          var b = lh(a), c = Zg(a, b);
          if (null !== c) mh(c, a, b, L());
          jl(a, b);
        }
      }, Hc = function() {
        return C;
      }, Ic = function(a, b) {
        var c = C;
        try {
          return C = a, b();
        } finally {
          C = c;
        }
      }, yb = function(a, b, c) {
        switch (b) {
         case "input":
          if (bb(a, c), b = c.name, "radio" === c.type && null != b) {
            for (c = a; c.parentNode; ) c = c.parentNode;
            for (c = c.querySelectorAll("input[name=" + JSON.stringify("" + b) + '][type="radio"]'), 
            b = 0; b < c.length; b++) {
              var d = c[b];
              if (d !== a && d.form === a.form) {
                var e = Db(d);
                if (!e) throw Error(p(90));
                Wa(d), bb(d, e);
              }
            }
          }
          break;

         case "textarea":
          ib(a, c);
          break;

         case "select":
          null != (b = c.value) && fb(a, !!c.multiple, b, !1);
        }
      }, Gb = Rk, Hb = Sk;
      var tl = {
        usingClientEntryPoint: !1,
        Events: [ Cb, ue, Db, Eb, Fb, Rk ]
      }, ul = {
        findFiberByHostInstance: Wc,
        bundleType: 0,
        version: "18.2.0",
        rendererPackageName: "react-dom"
      }, vl = {
        bundleType: ul.bundleType,
        version: ul.version,
        rendererPackageName: ul.rendererPackageName,
        rendererConfig: ul.rendererConfig,
        overrideHookState: null,
        overrideHookStateDeletePath: null,
        overrideHookStateRenamePath: null,
        overrideProps: null,
        overridePropsDeletePath: null,
        overridePropsRenamePath: null,
        setErrorHandler: null,
        setSuspenseHandler: null,
        scheduleUpdate: null,
        currentDispatcherRef: ua.ReactCurrentDispatcher,
        findHostInstanceByFiber: function(a) {
          return null === (a = Zb(a)) ? null : a.stateNode;
        },
        findFiberByHostInstance: ul.findFiberByHostInstance || function() {
          return null;
        },
        findHostInstancesForRefresh: null,
        scheduleRefresh: null,
        scheduleRoot: null,
        setRefreshHandler: null,
        getCurrentFiber: null,
        reconcilerVersion: "18.2.0-next-9e3b772b8-20220608"
      };
      if ("undefined" != typeof __REACT_DEVTOOLS_GLOBAL_HOOK__) {
        var wl = __REACT_DEVTOOLS_GLOBAL_HOOK__;
        if (!wl.isDisabled && wl.supportsFiber) try {
          kc = wl.inject(vl), lc = wl;
        } catch (a) {}
      }
      exports.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED = tl, exports.createPortal = function(a, b) {
        var c = 2 < arguments.length && void 0 !== arguments[2] ? arguments[2] : null;
        if (!ol(b)) throw Error(p(200));
        return function(a, b, c) {
          var d = 3 < arguments.length && void 0 !== arguments[3] ? arguments[3] : null;
          return {
            $$typeof: wa,
            key: null == d ? null : "" + d,
            children: a,
            containerInfo: b,
            implementation: c
          };
        }(a, b, null, c);
      }, exports.createRoot = function(a, b) {
        if (!ol(a)) throw Error(p(299));
        var c = !1, d = "", e = ll;
        return null != b && (!0 === b.unstable_strictMode && (c = !0), void 0 !== b.identifierPrefix && (d = b.identifierPrefix), 
        void 0 !== b.onRecoverableError && (e = b.onRecoverableError)), b = cl(a, 1, !1, null, 0, c, 0, d, e), 
        a[uf] = b.current, sf(8 === a.nodeType ? a.parentNode : a), new ml(b);
      }, exports.findDOMNode = function(a) {
        if (null == a) return null;
        if (1 === a.nodeType) return a;
        var b = a._reactInternals;
        if (void 0 === b) {
          if ("function" == typeof a.render) throw Error(p(188));
          throw a = Object.keys(a).join(","), Error(p(268, a));
        }
        return a = null === (a = Zb(b)) ? null : a.stateNode;
      }, exports.flushSync = function(a) {
        return Sk(a);
      }, exports.hydrate = function(a, b, c) {
        if (!pl(b)) throw Error(p(200));
        return sl(null, a, b, !0, c);
      }, exports.hydrateRoot = function(a, b, c) {
        if (!ol(a)) throw Error(p(405));
        var d = null != c && c.hydratedSources || null, e = !1, f = "", g = ll;
        if (null != c && (!0 === c.unstable_strictMode && (e = !0), void 0 !== c.identifierPrefix && (f = c.identifierPrefix), 
        void 0 !== c.onRecoverableError && (g = c.onRecoverableError)), b = fl(b, null, a, 1, null != c ? c : null, e, 0, f, g), 
        a[uf] = b.current, sf(a), d) for (a = 0; a < d.length; a++) e = (e = (c = d[a])._getVersion)(c._source), 
        null == b.mutableSourceEagerHydrationData ? b.mutableSourceEagerHydrationData = [ c, e ] : b.mutableSourceEagerHydrationData.push(c, e);
        return new nl(b);
      }, exports.render = function(a, b, c) {
        if (!pl(b)) throw Error(p(200));
        return sl(null, a, b, !1, c);
      }, exports.unmountComponentAtNode = function(a) {
        if (!pl(a)) throw Error(p(40));
        return !!a._reactRootContainer && (Sk((function() {
          sl(null, null, a, !1, (function() {
            a._reactRootContainer = null, a[uf] = null;
          }));
        })), !0);
      }, exports.unstable_batchedUpdates = Rk, exports.unstable_renderSubtreeIntoContainer = function(a, b, c, d) {
        if (!pl(c)) throw Error(p(200));
        if (null == a || void 0 === a._reactInternals) throw Error(p(38));
        return sl(a, b, c, !1, d);
      }, exports.version = "18.2.0-next-9e3b772b8-20220608";
    },
    1618: (module, __unused_webpack_exports, __webpack_require__) => {
      "use strict";
      !function checkDCE() {
        if ("undefined" != typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ && "function" == typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE) try {
          __REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE(checkDCE);
        } catch (err) {
          console.error(err);
        }
      }(), module.exports = __webpack_require__(4814);
    },
    5563: (__unused_webpack_module, exports) => {
      "use strict";
      var b = "function" == typeof Symbol && Symbol.for, c = b ? Symbol.for("react.element") : 60103, d = b ? Symbol.for("react.portal") : 60106, e = b ? Symbol.for("react.fragment") : 60107, f = b ? Symbol.for("react.strict_mode") : 60108, g = b ? Symbol.for("react.profiler") : 60114, h = b ? Symbol.for("react.provider") : 60109, k = b ? Symbol.for("react.context") : 60110, l = b ? Symbol.for("react.async_mode") : 60111, m = b ? Symbol.for("react.concurrent_mode") : 60111, n = b ? Symbol.for("react.forward_ref") : 60112, p = b ? Symbol.for("react.suspense") : 60113, q = b ? Symbol.for("react.suspense_list") : 60120, r = b ? Symbol.for("react.memo") : 60115, t = b ? Symbol.for("react.lazy") : 60116, v = b ? Symbol.for("react.block") : 60121, w = b ? Symbol.for("react.fundamental") : 60117, x = b ? Symbol.for("react.responder") : 60118, y = b ? Symbol.for("react.scope") : 60119;
      function z(a) {
        if ("object" == typeof a && null !== a) {
          var u = a.$$typeof;
          switch (u) {
           case c:
            switch (a = a.type) {
             case l:
             case m:
             case e:
             case g:
             case f:
             case p:
              return a;

             default:
              switch (a = a && a.$$typeof) {
               case k:
               case n:
               case t:
               case r:
               case h:
                return a;

               default:
                return u;
              }
            }

           case d:
            return u;
          }
        }
      }
      function A(a) {
        return z(a) === m;
      }
      exports.AsyncMode = l, exports.ConcurrentMode = m, exports.ContextConsumer = k, 
      exports.ContextProvider = h, exports.Element = c, exports.ForwardRef = n, exports.Fragment = e, 
      exports.Lazy = t, exports.Memo = r, exports.Portal = d, exports.Profiler = g, exports.StrictMode = f, 
      exports.Suspense = p, exports.isAsyncMode = function(a) {
        return A(a) || z(a) === l;
      }, exports.isConcurrentMode = A, exports.isContextConsumer = function(a) {
        return z(a) === k;
      }, exports.isContextProvider = function(a) {
        return z(a) === h;
      }, exports.isElement = function(a) {
        return "object" == typeof a && null !== a && a.$$typeof === c;
      }, exports.isForwardRef = function(a) {
        return z(a) === n;
      }, exports.isFragment = function(a) {
        return z(a) === e;
      }, exports.isLazy = function(a) {
        return z(a) === t;
      }, exports.isMemo = function(a) {
        return z(a) === r;
      }, exports.isPortal = function(a) {
        return z(a) === d;
      }, exports.isProfiler = function(a) {
        return z(a) === g;
      }, exports.isStrictMode = function(a) {
        return z(a) === f;
      }, exports.isSuspense = function(a) {
        return z(a) === p;
      }, exports.isValidElementType = function(a) {
        return "string" == typeof a || "function" == typeof a || a === e || a === m || a === g || a === f || a === p || a === q || "object" == typeof a && null !== a && (a.$$typeof === t || a.$$typeof === r || a.$$typeof === h || a.$$typeof === k || a.$$typeof === n || a.$$typeof === w || a.$$typeof === x || a.$$typeof === y || a.$$typeof === v);
      }, exports.typeOf = z;
    },
    951: (module, __unused_webpack_exports, __webpack_require__) => {
      "use strict";
      module.exports = __webpack_require__(5563);
    },
    9050: (module, __unused_webpack_exports, __webpack_require__) => {
      module.exports = __webpack_require__(2314);
    },
    4895: module => {
      "use strict";
      function getComponentName(component) {
        return component.displayName || component.name || "Component";
      }
      module.exports = {
        getComponentName,
        getContainerName: function(Component) {
          return "Relay(" + getComponentName(Component) + ")";
        }
      };
    },
    3483: (module, __unused_webpack_exports, __webpack_require__) => {
      "use strict";
      var React = __webpack_require__(7130), createRelayContext = __webpack_require__(402).__internal.createRelayContext;
      module.exports = createRelayContext(React);
    },
    1034: (module, __unused_webpack_exports, __webpack_require__) => {
      "use strict";
      var _interopRequireDefault = __webpack_require__(3404).default, _extends2 = _interopRequireDefault(__webpack_require__(6750)), _objectWithoutPropertiesLoose2 = _interopRequireDefault(__webpack_require__(6783)), _assertThisInitialized2 = _interopRequireDefault(__webpack_require__(1795)), _inheritsLoose2 = _interopRequireDefault(__webpack_require__(8474)), _defineProperty2 = _interopRequireDefault(__webpack_require__(1329)), _excluded = [ "componentRef", "__relayContext", "__rootIsQueryRenderer" ], buildReactRelayContainer = __webpack_require__(0), getContainerName = __webpack_require__(4895).getContainerName, assertRelayContext = __webpack_require__(1461).assertRelayContext, areEqual = __webpack_require__(1345), React = __webpack_require__(7130), _require3 = __webpack_require__(402), createFragmentSpecResolver = _require3.createFragmentSpecResolver, getDataIDsFromObject = _require3.getDataIDsFromObject, isScalarAndEqual = _require3.isScalarAndEqual;
      function createContainerWithFragments(Component, fragments) {
        var _class, containerName = getContainerName(Component);
        return _class = function(_React$Component) {
          function _class(props) {
            var _props$__rootIsQueryR, _this;
            _this = _React$Component.call(this, props) || this, (0, _defineProperty2.default)((0, 
            _assertThisInitialized2.default)(_this), "_handleFragmentDataUpdate", (function() {
              var resolverFromThisUpdate = _this.state.resolver;
              _this.setState((function(updatedState) {
                return resolverFromThisUpdate === updatedState.resolver ? {
                  data: updatedState.resolver.resolve(),
                  relayProp: getRelayProp(updatedState.relayProp.environment)
                } : null;
              }));
            }));
            var relayContext = assertRelayContext(props.__relayContext), rootIsQueryRenderer = null !== (_props$__rootIsQueryR = props.__rootIsQueryRenderer) && void 0 !== _props$__rootIsQueryR && _props$__rootIsQueryR, resolver = createFragmentSpecResolver(relayContext, containerName, fragments, props, rootIsQueryRenderer);
            return _this.state = {
              data: resolver.resolve(),
              prevProps: props,
              prevPropsContext: relayContext,
              relayProp: getRelayProp(relayContext.environment),
              resolver
            }, _this;
          }
          (0, _inheritsLoose2.default)(_class, _React$Component), _class.getDerivedStateFromProps = function(nextProps, prevState) {
            var _nextProps$__rootIsQu, prevProps = prevState.prevProps, relayContext = assertRelayContext(nextProps.__relayContext), rootIsQueryRenderer = null !== (_nextProps$__rootIsQu = nextProps.__rootIsQueryRenderer) && void 0 !== _nextProps$__rootIsQu && _nextProps$__rootIsQu, prevIDs = getDataIDsFromObject(fragments, prevProps), nextIDs = getDataIDsFromObject(fragments, nextProps), resolver = prevState.resolver;
            if (prevState.prevPropsContext.environment !== relayContext.environment || !areEqual(prevIDs, nextIDs)) return {
              data: (resolver = createFragmentSpecResolver(relayContext, containerName, fragments, nextProps, rootIsQueryRenderer)).resolve(),
              prevPropsContext: relayContext,
              prevProps: nextProps,
              relayProp: getRelayProp(relayContext.environment),
              resolver
            };
            resolver.setProps(nextProps);
            var data = resolver.resolve();
            return data !== prevState.data ? {
              data,
              prevProps: nextProps,
              prevPropsContext: relayContext,
              relayProp: getRelayProp(relayContext.environment)
            } : null;
          };
          var _proto = _class.prototype;
          return _proto.componentDidMount = function() {
            this._subscribeToNewResolverAndRerenderIfStoreHasChanged();
          }, _proto.componentDidUpdate = function(prevProps, prevState) {
            this.state.resolver !== prevState.resolver ? (prevState.resolver.dispose(), this._subscribeToNewResolverAndRerenderIfStoreHasChanged()) : this._rerenderIfStoreHasChanged();
          }, _proto.componentWillUnmount = function() {
            this.state.resolver.dispose();
          }, _proto.shouldComponentUpdate = function(nextProps, nextState) {
            if (nextState.data !== this.state.data) return !0;
            for (var keys = Object.keys(nextProps), ii = 0; ii < keys.length; ii++) {
              var key = keys[ii];
              if ("__relayContext" === key) {
                if (nextState.prevPropsContext.environment !== this.state.prevPropsContext.environment) return !0;
              } else if (!fragments.hasOwnProperty(key) && !isScalarAndEqual(nextProps[key], this.props[key])) return !0;
            }
            return !1;
          }, _proto._rerenderIfStoreHasChanged = function() {
            var _this$state = this.state, data = _this$state.data, maybeNewData = _this$state.resolver.resolve();
            data !== maybeNewData && this.setState({
              data: maybeNewData
            });
          }, _proto._subscribeToNewResolverAndRerenderIfStoreHasChanged = function() {
            var _this$state2 = this.state, data = _this$state2.data, resolver = _this$state2.resolver, maybeNewData = resolver.resolve();
            resolver.setCallback(this.props, this._handleFragmentDataUpdate), data !== maybeNewData && this.setState({
              data: maybeNewData
            });
          }, _proto.render = function() {
            var _this$props = this.props, componentRef = _this$props.componentRef, props = (_this$props.__relayContext, 
            _this$props.__rootIsQueryRenderer, (0, _objectWithoutPropertiesLoose2.default)(_this$props, _excluded));
            return React.createElement(Component, (0, _extends2.default)({}, props, this.state.data, {
              ref: componentRef,
              relay: this.state.relayProp
            }));
          }, _class;
        }(React.Component), (0, _defineProperty2.default)(_class, "displayName", containerName), 
        _class;
      }
      function getRelayProp(environment) {
        return {
          environment
        };
      }
      module.exports = {
        createContainer: function(Component, fragmentSpec) {
          return buildReactRelayContainer(Component, fragmentSpec, createContainerWithFragments);
        }
      };
    },
    3465: (module, __unused_webpack_exports, __webpack_require__) => {
      "use strict";
      var ReactRelayContext = __webpack_require__(3483), ReactRelayQueryRendererContext = __webpack_require__(6269), areEqual = __webpack_require__(1345), React = __webpack_require__(7130), _require = __webpack_require__(402), createOperationDescriptor = _require.createOperationDescriptor, getRequest = (_require.deepFreeze, 
      _require.getRequest), useLayoutEffect = React.useLayoutEffect, useState = React.useState, useRef = React.useRef, useMemo = React.useMemo, queryRendererContext = {
        rootIsQueryRenderer: !0
      };
      module.exports = function(props) {
        var value, latestValue, environment = props.environment, query = props.query, variables = props.variables, render = props.render, latestVariables = (value = variables, 
        latestValue = React.useRef(value), areEqual(latestValue.current, value) || (latestValue.current = value), 
        latestValue.current), operation = useMemo((function() {
          var request = getRequest(query);
          return createOperationDescriptor(request, latestVariables);
        }), [ query, latestVariables ]), relayContext = useMemo((function() {
          return {
            environment
          };
        }), [ environment ]), dataRef = useRef(null), forceUpdate = useState(null)[1], cleanupFnRef = useRef(null), snapshot = useMemo((function() {
          environment.check(operation);
          var res = environment.lookup(operation.fragment);
          dataRef.current = res.data;
          var retainDisposable = environment.retain(operation), subscribeDisposable = environment.subscribe(res, (function(newSnapshot) {
            dataRef.current = newSnapshot.data, forceUpdate(dataRef.current);
          })), disposed = !1;
          return cleanupFnRef.current && cleanupFnRef.current(), cleanupFnRef.current = function() {
            disposed || (disposed = !0, cleanupFnRef.current = null, retainDisposable.dispose(), 
            subscribeDisposable.dispose());
          }, res;
        }), [ environment, operation ]);
        return useLayoutEffect((function() {
          var cleanupFn = cleanupFnRef.current;
          return function() {
            cleanupFn && cleanupFn();
          };
        }), [ snapshot ]), React.createElement(ReactRelayContext.Provider, {
          value: relayContext
        }, React.createElement(ReactRelayQueryRendererContext.Provider, {
          value: queryRendererContext
        }, render({
          props: dataRef.current
        })));
      };
    },
    6624: (module, __unused_webpack_exports, __webpack_require__) => {
      "use strict";
      var _interopRequireDefault = __webpack_require__(3404).default, _extends2 = _interopRequireDefault(__webpack_require__(6750)), _objectWithoutPropertiesLoose2 = _interopRequireDefault(__webpack_require__(6783)), _assertThisInitialized2 = _interopRequireDefault(__webpack_require__(1795)), _inheritsLoose2 = _interopRequireDefault(__webpack_require__(8474)), _defineProperty2 = _interopRequireDefault(__webpack_require__(1329)), _objectSpread3 = _interopRequireDefault(__webpack_require__(9004)), _excluded = [ "componentRef" ], _excluded2 = [ "componentRef", "__relayContext", "__rootIsQueryRenderer" ], _excluded3 = [ "componentRef", "__relayContext", "__rootIsQueryRenderer" ], buildReactRelayContainer = __webpack_require__(0), getRootVariablesForFragments = __webpack_require__(9687), _require = __webpack_require__(4895), getComponentName = _require.getComponentName, getContainerName = _require.getContainerName, ReactRelayContext = __webpack_require__(3483), ReactRelayQueryFetcher = __webpack_require__(9202), assertRelayContext = __webpack_require__(1461).assertRelayContext, areEqual = __webpack_require__(1345), invariant = __webpack_require__(1235), React = __webpack_require__(7130), _require3 = __webpack_require__(402), ConnectionInterface = _require3.ConnectionInterface, Observable = _require3.Observable, RelayFeatureFlags = _require3.RelayFeatureFlags, createFragmentSpecResolver = _require3.createFragmentSpecResolver, createOperationDescriptor = _require3.createOperationDescriptor, getDataIDsFromObject = _require3.getDataIDsFromObject, getRequest = _require3.getRequest, getVariablesFromObject = _require3.getVariablesFromObject, isScalarAndEqual = _require3.isScalarAndEqual, FORWARD = (__webpack_require__(3349), 
      "forward");
      function toObserver(observerOrCallback) {
        return "function" == typeof observerOrCallback ? {
          error: observerOrCallback,
          complete: observerOrCallback,
          unsubscribe: function(subscription) {
            "function" == typeof observerOrCallback && observerOrCallback();
          }
        } : observerOrCallback || {};
      }
      function createContainerWithFragments(Component, fragments, connectionConfig) {
        getComponentName(Component);
        var _class, containerName = getContainerName(Component), metadata = function(fragments) {
          var foundConnectionMetadata = null, isRelayModern = !1;
          for (var fragmentName in fragments) {
            var fragment = fragments[fragmentName], connectionMetadata = fragment.metadata && fragment.metadata.connection;
            void 0 !== fragment.metadata && (isRelayModern = !0), connectionMetadata && (1 !== connectionMetadata.length && invariant(!1), 
            foundConnectionMetadata && invariant(!1), foundConnectionMetadata = (0, _objectSpread3.default)((0, 
            _objectSpread3.default)({}, connectionMetadata[0]), {}, {
              fragmentName
            }));
          }
          return isRelayModern && null === foundConnectionMetadata && invariant(!1), foundConnectionMetadata || {};
        }(fragments), getConnectionFromProps = connectionConfig.getConnectionFromProps || function(metadata) {
          var path = metadata.path;
          return path || invariant(!1), function(props) {
            for (var data = props[metadata.fragmentName], i = 0; i < path.length; i++) {
              if (!data || "object" != typeof data) return null;
              data = data[path[i]];
            }
            return data;
          };
        }(metadata), direction = connectionConfig.direction || metadata.direction;
        direction || invariant(!1);
        var getFragmentVariables = connectionConfig.getFragmentVariables || function(metadata) {
          var countVariable = metadata.count;
          return countVariable || invariant(!1), function(prevVars, totalCount) {
            return (0, _objectSpread3.default)((0, _objectSpread3.default)({}, prevVars), {}, (0, 
            _defineProperty2.default)({}, countVariable, totalCount));
          };
        }(metadata);
        return _class = function(_React$Component) {
          function _class(props) {
            var _props$__rootIsQueryR, _this;
            _this = _React$Component.call(this, props) || this, (0, _defineProperty2.default)((0, 
            _assertThisInitialized2.default)(_this), "_handleFragmentDataUpdate", (function() {
              _this.setState({
                data: _this._resolver.resolve()
              });
            })), (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), "_hasMore", (function() {
              var connectionData = _this._getConnectionData();
              return !!(connectionData && connectionData.hasMore && connectionData.cursor);
            })), (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), "_isLoading", (function() {
              return !!_this._refetchSubscription;
            })), (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), "_refetchConnection", (function(totalCount, observerOrCallback, refetchVariables) {
              if (!_this._canFetchPage("refetchConnection")) return {
                dispose: function() {}
              };
              _this._refetchVariables = refetchVariables;
              var paginatingVariables = {
                count: totalCount,
                cursor: null,
                totalCount
              };
              return {
                dispose: _this._fetchPage(paginatingVariables, toObserver(observerOrCallback), {
                  force: !0
                }).unsubscribe
              };
            })), (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), "_loadMore", (function(pageSize, observerOrCallback, options) {
              if (!_this._canFetchPage("loadMore")) return {
                dispose: function() {}
              };
              var observer = toObserver(observerOrCallback), connectionData = _this._getConnectionData();
              if (!connectionData) return Observable.create((function(sink) {
                return sink.complete();
              })).subscribe(observer), null;
              var totalCount = connectionData.edgeCount + pageSize;
              if (options && options.force) return _this._refetchConnection(totalCount, observerOrCallback);
              var _ConnectionInterface$ = ConnectionInterface.get(), paginatingVariables = (_ConnectionInterface$.END_CURSOR, 
              _ConnectionInterface$.START_CURSOR, {
                count: pageSize,
                cursor: connectionData.cursor,
                totalCount
              });
              return {
                dispose: _this._fetchPage(paginatingVariables, observer, options).unsubscribe
              };
            }));
            var relayContext = assertRelayContext(props.__relayContext), rootIsQueryRenderer = null !== (_props$__rootIsQueryR = props.__rootIsQueryRenderer) && void 0 !== _props$__rootIsQueryR && _props$__rootIsQueryR;
            return _this._isARequestInFlight = !1, _this._refetchSubscription = null, _this._refetchVariables = null, 
            !0 === RelayFeatureFlags.ENABLE_CONTAINERS_SUBSCRIBE_ON_COMMIT ? _this._resolver = createFragmentSpecResolver(relayContext, containerName, fragments, props, rootIsQueryRenderer) : _this._resolver = createFragmentSpecResolver(relayContext, containerName, fragments, props, rootIsQueryRenderer, _this._handleFragmentDataUpdate), 
            _this.state = {
              data: _this._resolver.resolve(),
              prevContext: relayContext,
              contextForChildren: relayContext,
              relayProp: _this._buildRelayProp(relayContext),
              resolverGeneration: 0
            }, _this._isUnmounted = !1, _this._hasFetched = !1, _this;
          }
          (0, _inheritsLoose2.default)(_class, _React$Component);
          var _proto = _class.prototype;
          return _proto.componentDidMount = function() {
            this._isUnmounted = !1, !0 === RelayFeatureFlags.ENABLE_CONTAINERS_SUBSCRIBE_ON_COMMIT && this._subscribeToNewResolverAndRerenderIfStoreHasChanged();
          }, _proto.componentDidUpdate = function(prevProps, prevState) {
            !0 === RelayFeatureFlags.ENABLE_CONTAINERS_SUBSCRIBE_ON_COMMIT && (prevState.resolverGeneration !== this.state.resolverGeneration ? this._subscribeToNewResolverAndRerenderIfStoreHasChanged() : this._rerenderIfStoreHasChanged());
          }, _proto.UNSAFE_componentWillReceiveProps = function(nextProps) {
            var _nextProps$__rootIsQu, _this2 = this, relayContext = assertRelayContext(nextProps.__relayContext), rootIsQueryRenderer = null !== (_nextProps$__rootIsQu = nextProps.__rootIsQueryRenderer) && void 0 !== _nextProps$__rootIsQu && _nextProps$__rootIsQu, prevIDs = getDataIDsFromObject(fragments, this.props), nextIDs = getDataIDsFromObject(fragments, nextProps), prevRootVariables = getRootVariablesForFragments(fragments, this.props), nextRootVariables = getRootVariablesForFragments(fragments, nextProps);
            relayContext.environment === this.state.prevContext.environment && areEqual(prevRootVariables, nextRootVariables) && areEqual(prevIDs, nextIDs) ? this._hasFetched || this._resolver.setProps(nextProps) : (this._cleanup(), 
            !0 === RelayFeatureFlags.ENABLE_CONTAINERS_SUBSCRIBE_ON_COMMIT ? this._resolver = createFragmentSpecResolver(relayContext, containerName, fragments, nextProps, rootIsQueryRenderer) : this._resolver = createFragmentSpecResolver(relayContext, containerName, fragments, nextProps, rootIsQueryRenderer, this._handleFragmentDataUpdate), 
            this.setState((function(prevState) {
              return {
                prevContext: relayContext,
                contextForChildren: relayContext,
                relayProp: _this2._buildRelayProp(relayContext),
                resolverGeneration: prevState.resolverGeneration + 1
              };
            })));
            var data = this._resolver.resolve();
            data !== this.state.data && this.setState({
              data
            });
          }, _proto.componentWillUnmount = function() {
            this._isUnmounted = !0, this._cleanup();
          }, _proto.shouldComponentUpdate = function(nextProps, nextState) {
            if (nextState.data !== this.state.data || nextState.relayProp !== this.state.relayProp || nextState.resolverGeneration !== this.state.resolverGeneration) return !0;
            for (var keys = Object.keys(nextProps), ii = 0; ii < keys.length; ii++) {
              var key = keys[ii];
              if ("__relayContext" === key) {
                if (nextState.prevContext.environment !== this.state.prevContext.environment) return !0;
              } else if (!fragments.hasOwnProperty(key) && !isScalarAndEqual(nextProps[key], this.props[key])) return !0;
            }
            return !1;
          }, _proto._buildRelayProp = function(relayContext) {
            return {
              hasMore: this._hasMore,
              isLoading: this._isLoading,
              loadMore: this._loadMore,
              refetchConnection: this._refetchConnection,
              environment: relayContext.environment
            };
          }, _proto._rerenderIfStoreHasChanged = function() {
            var data = this.state.data, maybeNewData = this._resolver.resolve();
            data !== maybeNewData && this.setState({
              data: maybeNewData
            });
          }, _proto._subscribeToNewResolverAndRerenderIfStoreHasChanged = function() {
            var data = this.state.data, maybeNewData = this._resolver.resolve();
            this._resolver.setCallback(this.props, this._handleFragmentDataUpdate), data !== maybeNewData && this.setState({
              data: maybeNewData
            });
          }, _proto._getConnectionData = function() {
            var _this$props = this.props, restProps = (_this$props.componentRef, (0, _objectWithoutPropertiesLoose2.default)(_this$props, _excluded)), props = (0, 
            _objectSpread3.default)((0, _objectSpread3.default)({}, restProps), this.state.data), connectionData = getConnectionFromProps(props);
            if (null == connectionData) return null;
            var _ConnectionInterface$2 = ConnectionInterface.get(), EDGES = _ConnectionInterface$2.EDGES, PAGE_INFO = _ConnectionInterface$2.PAGE_INFO, HAS_NEXT_PAGE = _ConnectionInterface$2.HAS_NEXT_PAGE, HAS_PREV_PAGE = _ConnectionInterface$2.HAS_PREV_PAGE, END_CURSOR = _ConnectionInterface$2.END_CURSOR, START_CURSOR = _ConnectionInterface$2.START_CURSOR;
            "object" != typeof connectionData && invariant(!1);
            var edges = connectionData[EDGES], pageInfo = connectionData[PAGE_INFO];
            if (null == edges || null == pageInfo) return null;
            Array.isArray(edges) || invariant(!1), "object" != typeof pageInfo && invariant(!1);
            var hasMore = direction === FORWARD ? pageInfo[HAS_NEXT_PAGE] : pageInfo[HAS_PREV_PAGE], cursor = direction === FORWARD ? pageInfo[END_CURSOR] : pageInfo[START_CURSOR];
            return "boolean" != typeof hasMore || 0 !== edges.length && void 0 === cursor ? null : {
              cursor,
              edgeCount: edges.length,
              hasMore
            };
          }, _proto._getQueryFetcher = function() {
            return this._queryFetcher || (this._queryFetcher = new ReactRelayQueryFetcher), 
            this._queryFetcher;
          }, _proto._canFetchPage = function(method) {
            return !this._isUnmounted;
          }, _proto._fetchPage = function(paginatingVariables, observer, options) {
            var fragmentVariables, _this3 = this, environment = assertRelayContext(this.props.__relayContext).environment, _this$props2 = this.props, restProps = (_this$props2.componentRef, 
            _this$props2.__relayContext, _this$props2.__rootIsQueryRenderer, (0, _objectWithoutPropertiesLoose2.default)(_this$props2, _excluded2)), props = (0, 
            _objectSpread3.default)((0, _objectSpread3.default)({}, restProps), this.state.data), rootVariables = getRootVariablesForFragments(fragments, restProps);
            fragmentVariables = getVariablesFromObject(fragments, restProps), fragmentVariables = (0, 
            _objectSpread3.default)((0, _objectSpread3.default)((0, _objectSpread3.default)({}, rootVariables), fragmentVariables), this._refetchVariables);
            var fetchVariables = connectionConfig.getVariables(props, {
              count: paginatingVariables.count,
              cursor: paginatingVariables.cursor
            }, fragmentVariables);
            ("object" != typeof fetchVariables || null === fetchVariables) && invariant(!1), 
            fetchVariables = (0, _objectSpread3.default)((0, _objectSpread3.default)({}, fetchVariables), this._refetchVariables), 
            fragmentVariables = (0, _objectSpread3.default)((0, _objectSpread3.default)({}, fetchVariables), fragmentVariables);
            var cacheConfig = options ? {
              force: !!options.force
            } : void 0;
            null != cacheConfig && null != (null == options ? void 0 : options.metadata) && (cacheConfig.metadata = null == options ? void 0 : options.metadata);
            var request = getRequest(connectionConfig.query), operation = createOperationDescriptor(request, fetchVariables, cacheConfig), refetchSubscription = null;
            this._refetchSubscription && this._refetchSubscription.unsubscribe(), this._hasFetched = !0;
            var cleanup = function() {
              _this3._refetchSubscription === refetchSubscription && (_this3._refetchSubscription = null, 
              _this3._isARequestInFlight = !1);
            };
            return this._isARequestInFlight = !0, refetchSubscription = this._getQueryFetcher().execute({
              environment,
              operation,
              preservePreviousReferences: !0
            }).mergeMap((function(payload) {
              return Observable.create((function(sink) {
                !function(payload, complete) {
                  var prevData = _this3._resolver.resolve();
                  _this3._resolver.setVariables(getFragmentVariables(fragmentVariables, paginatingVariables.totalCount), operation.request.node);
                  var nextData = _this3._resolver.resolve();
                  areEqual(prevData, nextData) ? complete() : _this3.setState({
                    data: nextData,
                    contextForChildren: {
                      environment: _this3.props.__relayContext.environment
                    }
                  }, complete);
                }(0, (function() {
                  sink.next(), sink.complete();
                }));
              }));
            })).do({
              error: cleanup,
              complete: cleanup,
              unsubscribe: cleanup
            }).subscribe(observer || {}), this._refetchSubscription = this._isARequestInFlight ? refetchSubscription : null, 
            refetchSubscription;
          }, _proto._cleanup = function() {
            this._resolver.dispose(), this._refetchVariables = null, this._hasFetched = !1, 
            this._refetchSubscription && (this._refetchSubscription.unsubscribe(), this._refetchSubscription = null, 
            this._isARequestInFlight = !1), this._queryFetcher && this._queryFetcher.dispose();
          }, _proto.render = function() {
            var _this$props3 = this.props, componentRef = _this$props3.componentRef, props = (_this$props3.__relayContext, 
            _this$props3.__rootIsQueryRenderer, (0, _objectWithoutPropertiesLoose2.default)(_this$props3, _excluded3));
            return React.createElement(ReactRelayContext.Provider, {
              value: this.state.contextForChildren
            }, React.createElement(Component, (0, _extends2.default)({}, props, this.state.data, {
              ref: componentRef,
              relay: this.state.relayProp
            })));
          }, _class;
        }(React.Component), (0, _defineProperty2.default)(_class, "displayName", containerName), 
        _class;
      }
      module.exports = {
        createContainer: function(Component, fragmentSpec, connectionConfig) {
          return buildReactRelayContainer(Component, fragmentSpec, (function(ComponentClass, fragments) {
            return createContainerWithFragments(ComponentClass, fragments, connectionConfig);
          }));
        }
      };
    },
    9202: (module, __unused_webpack_exports, __webpack_require__) => {
      "use strict";
      var _defineProperty2 = (0, __webpack_require__(3404).default)(__webpack_require__(1329)), invariant = __webpack_require__(1235), _require = __webpack_require__(402), fetchQuery = _require.__internal.fetchQuery, createOperationDescriptor = _require.createOperationDescriptor, isRelayModernEnvironment = _require.isRelayModernEnvironment, ReactRelayQueryFetcher = function() {
        function ReactRelayQueryFetcher(args) {
          (0, _defineProperty2.default)(this, "_selectionReferences", []), (0, _defineProperty2.default)(this, "_didFetchFinish", !1), 
          null != args && (this._cacheSelectionReference = args.cacheSelectionReference, this._selectionReferences = args.selectionReferences);
        }
        var _proto = ReactRelayQueryFetcher.prototype;
        return _proto.getSelectionReferences = function() {
          return {
            cacheSelectionReference: this._cacheSelectionReference,
            selectionReferences: this._selectionReferences
          };
        }, _proto.lookupInStore = function(environment, operation, fetchPolicy) {
          return "store-and-network" !== fetchPolicy && "store-or-network" !== fetchPolicy || "available" !== environment.check(operation).status ? null : (this._retainCachedOperation(environment, operation), 
          environment.lookup(operation.fragment));
        }, _proto.getFetchResult = function() {
          return this._didFetchFinish ? null != this._error ? {
            error: this._error
          } : null != this._snapshot ? {
            snapshot: this._snapshot
          } : void 0 : null;
        }, _proto.execute = function(_ref) {
          var _this = this, environment = _ref.environment, operation = _ref.operation, _ref$preservePrevious = _ref.preservePreviousReferences, preservePreviousReferences = void 0 !== _ref$preservePrevious && _ref$preservePrevious, reference = environment.retain(operation), error = function() {
            _this._selectionReferences = _this._selectionReferences.concat(reference);
          }, complete = function() {
            preservePreviousReferences || _this.disposeSelectionReferences(), _this._selectionReferences = _this._selectionReferences.concat(reference);
          }, unsubscribe = function() {
            _this._selectionReferences = _this._selectionReferences.concat(reference);
          };
          return isRelayModernEnvironment(environment) ? fetchQuery(environment, operation).do({
            error,
            complete,
            unsubscribe
          }) : environment.execute({
            operation
          }).do({
            error,
            complete,
            unsubscribe
          });
        }, _proto.setOnDataChange = function(onDataChange) {
          this._fetchOptions || invariant(!1), "function" == typeof onDataChange && (this._fetchOptions.onDataChangeCallbacks = this._fetchOptions.onDataChangeCallbacks || [], 
          this._fetchOptions.onDataChangeCallbacks.push(onDataChange), this._didFetchFinish && (null != this._error ? onDataChange({
            error: this._error
          }) : null != this._snapshot && onDataChange({
            snapshot: this._snapshot
          })));
        }, _proto.fetch = function(fetchOptions, cacheConfigOverride) {
          var _error, _this2 = this, environment = fetchOptions.environment, operation = fetchOptions.operation, onDataChange = fetchOptions.onDataChange, fetchHasReturned = !1;
          this.disposeRequest();
          var oldOnDataChangeCallbacks = this._fetchOptions && this._fetchOptions.onDataChangeCallbacks;
          this._fetchOptions = {
            environment,
            onDataChangeCallbacks: oldOnDataChangeCallbacks || [],
            operation
          }, onDataChange && -1 === this._fetchOptions.onDataChangeCallbacks.indexOf(onDataChange) && this._fetchOptions.onDataChangeCallbacks.push(onDataChange);
          var operationOverride = cacheConfigOverride ? createOperationDescriptor(operation.request.node, operation.request.variables, cacheConfigOverride) : operation, request = this.execute({
            environment,
            operation: operationOverride
          }).finally((function() {
            _this2._pendingRequest = null;
          })).subscribe({
            next: function() {
              _this2._didFetchFinish = !0, _this2._error = null, _this2._onQueryDataAvailable({
                notifyFirstResult: fetchHasReturned
              });
            },
            error: function(err) {
              _this2._didFetchFinish = !0, _this2._error = err, _this2._snapshot = null;
              var onDataChangeCallbacks = _this2._fetchOptions && _this2._fetchOptions.onDataChangeCallbacks;
              fetchHasReturned ? onDataChangeCallbacks && onDataChangeCallbacks.forEach((function(onDataChange) {
                onDataChange({
                  error: err
                });
              })) : _error = err;
            }
          });
          if (this._pendingRequest = {
            dispose: function() {
              request.unsubscribe();
            }
          }, fetchHasReturned = !0, _error) throw _error;
          return this._snapshot;
        }, _proto.retry = function(cacheConfigOverride) {
          return this._fetchOptions || invariant(!1), this.fetch({
            environment: this._fetchOptions.environment,
            operation: this._fetchOptions.operation,
            onDataChange: null
          }, cacheConfigOverride);
        }, _proto.dispose = function() {
          this.disposeRequest(), this.disposeSelectionReferences();
        }, _proto.disposeRequest = function() {
          this._error = null, this._snapshot = null, this._pendingRequest && this._pendingRequest.dispose(), 
          this._rootSubscription && (this._rootSubscription.dispose(), this._rootSubscription = null);
        }, _proto._retainCachedOperation = function(environment, operation) {
          this._disposeCacheSelectionReference(), this._cacheSelectionReference = environment.retain(operation);
        }, _proto._disposeCacheSelectionReference = function() {
          this._cacheSelectionReference && this._cacheSelectionReference.dispose(), this._cacheSelectionReference = null;
        }, _proto.disposeSelectionReferences = function() {
          this._disposeCacheSelectionReference(), this._selectionReferences.forEach((function(r) {
            return r.dispose();
          })), this._selectionReferences = [];
        }, _proto._onQueryDataAvailable = function(_ref2) {
          var _this3 = this, notifyFirstResult = _ref2.notifyFirstResult;
          this._fetchOptions || invariant(!1);
          var _this$_fetchOptions = this._fetchOptions, environment = _this$_fetchOptions.environment, onDataChangeCallbacks = _this$_fetchOptions.onDataChangeCallbacks, operation = _this$_fetchOptions.operation;
          if (!this._snapshot && (this._snapshot = environment.lookup(operation.fragment), 
          this._rootSubscription = environment.subscribe(this._snapshot, (function(snapshot) {
            if (null != _this3._fetchOptions) {
              var maybeNewOnDataChangeCallbacks = _this3._fetchOptions.onDataChangeCallbacks;
              Array.isArray(maybeNewOnDataChangeCallbacks) && maybeNewOnDataChangeCallbacks.forEach((function(onDataChange) {
                return onDataChange({
                  snapshot
                });
              }));
            }
          })), this._snapshot && notifyFirstResult && Array.isArray(onDataChangeCallbacks))) {
            var snapshot = this._snapshot;
            onDataChangeCallbacks.forEach((function(onDataChange) {
              return onDataChange({
                snapshot
              });
            }));
          }
        }, ReactRelayQueryFetcher;
      }();
      module.exports = ReactRelayQueryFetcher;
    },
    4490: (module, __unused_webpack_exports, __webpack_require__) => {
      "use strict";
      var _interopRequireDefault = __webpack_require__(3404).default, _objectSpread2 = _interopRequireDefault(__webpack_require__(9004)), _assertThisInitialized2 = _interopRequireDefault(__webpack_require__(1795)), _inheritsLoose2 = _interopRequireDefault(__webpack_require__(8474)), _defineProperty2 = _interopRequireDefault(__webpack_require__(1329)), ReactRelayContext = __webpack_require__(3483), ReactRelayQueryFetcher = __webpack_require__(9202), ReactRelayQueryRendererContext = __webpack_require__(6269), areEqual = __webpack_require__(1345), React = __webpack_require__(7130), _require = __webpack_require__(402), createOperationDescriptor = _require.createOperationDescriptor, getRequest = (_require.deepFreeze, 
      _require.getRequest), requestCache = {}, queryRendererContext = {
        rootIsQueryRenderer: !0
      }, ReactRelayQueryRenderer = function(_React$Component) {
        function ReactRelayQueryRenderer(props) {
          var _this;
          _this = _React$Component.call(this, props) || this, (0, _defineProperty2.default)((0, 
          _assertThisInitialized2.default)(_this), "_handleDataChange", (function(params) {
            var error = null == params.error ? null : params.error, snapshot = null == params.snapshot ? null : params.snapshot;
            _this.setState((function(prevState) {
              var prevRequestCacheKey = prevState.requestCacheKey;
              return prevRequestCacheKey && delete requestCache[prevRequestCacheKey], snapshot === prevState.snapshot && error === prevState.error ? null : {
                renderProps: getRenderProps(error, snapshot, prevState.queryFetcher, prevState.retryCallbacks),
                snapshot,
                requestCacheKey: null
              };
            }));
          }));
          var queryFetcher, requestCacheKey, retryCallbacks = {
            handleDataChange: null,
            handleRetryAfterError: null
          };
          if (props.query) {
            var query = props.query;
            requestCacheKey = getRequestCacheKey(getRequest(query).params, props.variables), 
            queryFetcher = requestCache[requestCacheKey] ? requestCache[requestCacheKey].queryFetcher : new ReactRelayQueryFetcher;
          } else queryFetcher = new ReactRelayQueryFetcher;
          return _this._maybeHiddenOrFastRefresh = !1, _this.state = (0, _objectSpread2.default)({
            prevPropsEnvironment: props.environment,
            prevPropsVariables: props.variables,
            prevQuery: props.query,
            queryFetcher,
            retryCallbacks
          }, fetchQueryAndComputeStateFromProps(props, queryFetcher, retryCallbacks, requestCacheKey)), 
          _this;
        }
        (0, _inheritsLoose2.default)(ReactRelayQueryRenderer, _React$Component), ReactRelayQueryRenderer.getDerivedStateFromProps = function(nextProps, prevState) {
          return prevState.prevQuery === nextProps.query && prevState.prevPropsEnvironment === nextProps.environment && areEqual(prevState.prevPropsVariables, nextProps.variables) ? null : resetQueryStateForUpdate(nextProps, prevState);
        };
        var _proto = ReactRelayQueryRenderer.prototype;
        return _proto.componentDidMount = function() {
          var _this2 = this;
          if (!0 === this._maybeHiddenOrFastRefresh) return this._maybeHiddenOrFastRefresh = !1, 
          void this.setState((function(prevState) {
            var newState = resetQueryStateForUpdate(_this2.props, prevState), requestCacheKey = newState.requestCacheKey, queryFetcher = newState.queryFetcher;
            return null != requestCacheKey && null != requestCache[requestCacheKey] && queryFetcher.setOnDataChange(_this2._handleDataChange), 
            newState;
          }));
          var _this$state = this.state, retryCallbacks = _this$state.retryCallbacks, queryFetcher = _this$state.queryFetcher, requestCacheKey = _this$state.requestCacheKey;
          requestCacheKey && delete requestCache[requestCacheKey], retryCallbacks.handleDataChange = this._handleDataChange, 
          retryCallbacks.handleRetryAfterError = function(error) {
            return _this2.setState((function(prevState) {
              var prevRequestCacheKey = prevState.requestCacheKey;
              return prevRequestCacheKey && delete requestCache[prevRequestCacheKey], {
                renderProps: {
                  error: null,
                  props: null,
                  retry: null
                },
                requestCacheKey: null
              };
            }));
          }, this.props.query && queryFetcher.setOnDataChange(this._handleDataChange);
        }, _proto.componentDidUpdate = function(_prevProps, prevState) {
          var _this$state2 = this.state, queryFetcher = _this$state2.queryFetcher, requestCacheKey = _this$state2.requestCacheKey;
          requestCacheKey && (delete requestCache[requestCacheKey], delete this.state.requestCacheKey), 
          this.props.query && queryFetcher !== prevState.queryFetcher && queryFetcher.setOnDataChange(this._handleDataChange);
        }, _proto.componentWillUnmount = function() {
          this.state.queryFetcher.dispose(), this._maybeHiddenOrFastRefresh = !0;
        }, _proto.shouldComponentUpdate = function(nextProps, nextState) {
          return nextProps.render !== this.props.render || nextState.renderProps !== this.state.renderProps;
        }, _proto.render = function() {
          var _this$state3 = this.state, renderProps = _this$state3.renderProps, relayContext = _this$state3.relayContext;
          return React.createElement(ReactRelayContext.Provider, {
            value: relayContext
          }, React.createElement(ReactRelayQueryRendererContext.Provider, {
            value: queryRendererContext
          }, this.props.render(renderProps)));
        }, ReactRelayQueryRenderer;
      }(React.Component);
      function getRenderProps(error, snapshot, queryFetcher, retryCallbacks) {
        return {
          error: error || null,
          props: snapshot ? snapshot.data : null,
          retry: function(cacheConfigOverride) {
            var syncSnapshot = queryFetcher.retry(cacheConfigOverride);
            syncSnapshot && "function" == typeof retryCallbacks.handleDataChange ? retryCallbacks.handleDataChange({
              snapshot: syncSnapshot
            }) : error && "function" == typeof retryCallbacks.handleRetryAfterError && retryCallbacks.handleRetryAfterError(error);
          }
        };
      }
      function getRequestCacheKey(request, variables) {
        return JSON.stringify({
          id: request.cacheID ? request.cacheID : request.id,
          variables
        });
      }
      function resetQueryStateForUpdate(props, prevState) {
        var queryFetcher, query = props.query, prevSelectionReferences = prevState.queryFetcher.getSelectionReferences();
        if (prevState.queryFetcher.disposeRequest(), query) {
          var requestCacheKey = getRequestCacheKey(getRequest(query).params, props.variables);
          queryFetcher = requestCache[requestCacheKey] ? requestCache[requestCacheKey].queryFetcher : new ReactRelayQueryFetcher(prevSelectionReferences);
        } else queryFetcher = new ReactRelayQueryFetcher(prevSelectionReferences);
        return (0, _objectSpread2.default)({
          prevQuery: props.query,
          prevPropsEnvironment: props.environment,
          prevPropsVariables: props.variables,
          queryFetcher
        }, fetchQueryAndComputeStateFromProps(props, queryFetcher, prevState.retryCallbacks));
      }
      function fetchQueryAndComputeStateFromProps(props, queryFetcher, retryCallbacks, requestCacheKey) {
        var environment = props.environment, query = props.query, variables = props.variables, cacheConfig = props.cacheConfig, genericEnvironment = environment;
        if (!query) return queryFetcher.dispose(), {
          error: null,
          relayContext: {
            environment: genericEnvironment
          },
          renderProps: {
            error: null,
            props: {},
            retry: null
          },
          requestCacheKey: null
        };
        var request = getRequest(query), operation = createOperationDescriptor(request, variables, cacheConfig), relayContext = {
          environment: genericEnvironment
        };
        if ("string" == typeof requestCacheKey && requestCache[requestCacheKey]) {
          var snapshot = requestCache[requestCacheKey].snapshot;
          return snapshot ? {
            error: null,
            relayContext,
            renderProps: getRenderProps(null, snapshot, queryFetcher, retryCallbacks),
            snapshot,
            requestCacheKey
          } : {
            error: null,
            relayContext,
            renderProps: {
              error: null,
              props: null,
              retry: null
            },
            snapshot: null,
            requestCacheKey
          };
        }
        try {
          var storeSnapshot = queryFetcher.lookupInStore(genericEnvironment, operation, props.fetchPolicy), _snapshot = queryFetcher.fetch({
            environment: genericEnvironment,
            onDataChange: null,
            operation
          }) || storeSnapshot;
          return requestCacheKey = requestCacheKey || getRequestCacheKey(request.params, props.variables), 
          requestCache[requestCacheKey] = {
            queryFetcher,
            snapshot: _snapshot
          }, _snapshot ? {
            error: null,
            relayContext,
            renderProps: getRenderProps(null, _snapshot, queryFetcher, retryCallbacks),
            snapshot: _snapshot,
            requestCacheKey
          } : {
            error: null,
            relayContext,
            renderProps: {
              error: null,
              props: null,
              retry: null
            },
            snapshot: null,
            requestCacheKey
          };
        } catch (error) {
          return {
            error,
            relayContext,
            renderProps: getRenderProps(error, null, queryFetcher, retryCallbacks),
            snapshot: null,
            requestCacheKey
          };
        }
      }
      module.exports = ReactRelayQueryRenderer;
    },
    6269: (module, __unused_webpack_exports, __webpack_require__) => {
      "use strict";
      var React = __webpack_require__(7130);
      module.exports = React.createContext({
        rootIsQueryRenderer: !1
      });
    },
    2413: (module, __unused_webpack_exports, __webpack_require__) => {
      "use strict";
      var _interopRequireDefault = __webpack_require__(3404).default, _extends2 = _interopRequireDefault(__webpack_require__(6750)), _objectWithoutPropertiesLoose2 = _interopRequireDefault(__webpack_require__(6783)), _objectSpread2 = _interopRequireDefault(__webpack_require__(9004)), _assertThisInitialized2 = _interopRequireDefault(__webpack_require__(1795)), _inheritsLoose2 = _interopRequireDefault(__webpack_require__(8474)), _defineProperty2 = _interopRequireDefault(__webpack_require__(1329)), _excluded = [ "componentRef", "__relayContext", "__rootIsQueryRenderer" ], buildReactRelayContainer = __webpack_require__(0), getRootVariablesForFragments = __webpack_require__(9687), getContainerName = __webpack_require__(4895).getContainerName, ReactRelayContext = __webpack_require__(3483), ReactRelayQueryFetcher = __webpack_require__(9202), assertRelayContext = __webpack_require__(1461).assertRelayContext, areEqual = __webpack_require__(1345), React = __webpack_require__(7130), _require3 = __webpack_require__(402), Observable = _require3.Observable, createFragmentSpecResolver = _require3.createFragmentSpecResolver, createOperationDescriptor = _require3.createOperationDescriptor, getDataIDsFromObject = _require3.getDataIDsFromObject, getRequest = _require3.getRequest, getVariablesFromObject = _require3.getVariablesFromObject, isScalarAndEqual = _require3.isScalarAndEqual;
      __webpack_require__(3349);
      function getRelayProp(environment, refetch) {
        return {
          environment,
          refetch
        };
      }
      module.exports = {
        createContainer: function(Component, fragmentSpec, taggedNode) {
          return buildReactRelayContainer(Component, fragmentSpec, (function(ComponentClass, fragments) {
            return function(Component, fragments, taggedNode) {
              var _class, containerName = getContainerName(Component);
              return _class = function(_React$Component) {
                function _class(props) {
                  var _props$__rootIsQueryR, _this;
                  _this = _React$Component.call(this, props) || this, (0, _defineProperty2.default)((0, 
                  _assertThisInitialized2.default)(_this), "_handleFragmentDataUpdate", (function() {
                    var resolverFromThisUpdate = _this.state.resolver;
                    _this.setState((function(updatedState) {
                      return resolverFromThisUpdate === updatedState.resolver ? {
                        data: updatedState.resolver.resolve()
                      } : null;
                    }));
                  })), (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), "_refetch", (function(refetchVariables, renderVariables, observerOrCallback, options) {
                    if (_this._isUnmounted) return {
                      dispose: function() {}
                    };
                    var environment = assertRelayContext(_this.props.__relayContext).environment, rootVariables = getRootVariablesForFragments(fragments, _this.props), fetchVariables = "function" == typeof refetchVariables ? refetchVariables(_this._getFragmentVariables()) : refetchVariables;
                    fetchVariables = (0, _objectSpread2.default)((0, _objectSpread2.default)({}, rootVariables), fetchVariables);
                    var fragmentVariables = renderVariables ? (0, _objectSpread2.default)((0, _objectSpread2.default)({}, fetchVariables), renderVariables) : fetchVariables, cacheConfig = options ? {
                      force: !!options.force
                    } : void 0;
                    null != cacheConfig && null != (null == options ? void 0 : options.metadata) && (cacheConfig.metadata = null == options ? void 0 : options.metadata);
                    var refetchSubscription, observer = "function" == typeof observerOrCallback ? {
                      next: observerOrCallback,
                      error: observerOrCallback
                    } : observerOrCallback || {}, query = getRequest(taggedNode), operation = createOperationDescriptor(query, fetchVariables, cacheConfig);
                    return _this.state.localVariables = fetchVariables, _this._refetchSubscription && _this._refetchSubscription.unsubscribe(), 
                    null != _this._getQueryFetcher().lookupInStore(environment, operation, null == options ? void 0 : options.fetchPolicy) ? (_this.state.resolver.setVariables(fragmentVariables, operation.request.node), 
                    _this.setState((function(latestState) {
                      return {
                        data: latestState.resolver.resolve(),
                        contextForChildren: {
                          environment: _this.props.__relayContext.environment
                        }
                      };
                    }), (function() {
                      observer.next && observer.next(), observer.complete && observer.complete();
                    })), {
                      dispose: function() {}
                    }) : (_this._getQueryFetcher().execute({
                      environment,
                      operation,
                      preservePreviousReferences: !0
                    }).mergeMap((function(response) {
                      return _this.state.resolver.setVariables(fragmentVariables, operation.request.node), 
                      Observable.create((function(sink) {
                        return _this.setState((function(latestState) {
                          return {
                            data: latestState.resolver.resolve(),
                            contextForChildren: {
                              environment: _this.props.__relayContext.environment
                            }
                          };
                        }), (function() {
                          sink.next(), sink.complete();
                        }));
                      }));
                    })).finally((function() {
                      _this._refetchSubscription === refetchSubscription && (_this._refetchSubscription = null);
                    })).subscribe((0, _objectSpread2.default)((0, _objectSpread2.default)({}, observer), {}, {
                      start: function(subscription) {
                        _this._refetchSubscription = refetchSubscription = subscription, observer.start && observer.start(subscription);
                      }
                    })), {
                      dispose: function() {
                        refetchSubscription && refetchSubscription.unsubscribe();
                      }
                    });
                  }));
                  var relayContext = assertRelayContext(props.__relayContext), rootIsQueryRenderer = null !== (_props$__rootIsQueryR = props.__rootIsQueryRenderer) && void 0 !== _props$__rootIsQueryR && _props$__rootIsQueryR;
                  _this._refetchSubscription = null;
                  var resolver = createFragmentSpecResolver(relayContext, containerName, fragments, props, rootIsQueryRenderer);
                  return _this.state = {
                    data: resolver.resolve(),
                    localVariables: null,
                    prevProps: props,
                    prevPropsContext: relayContext,
                    contextForChildren: relayContext,
                    relayProp: getRelayProp(relayContext.environment, _this._refetch),
                    resolver
                  }, _this._isUnmounted = !1, _this;
                }
                (0, _inheritsLoose2.default)(_class, _React$Component);
                var _proto = _class.prototype;
                return _proto.componentDidMount = function() {
                  this._isUnmounted = !1, this._subscribeToNewResolverAndRerenderIfStoreHasChanged();
                }, _proto.componentDidUpdate = function(prevProps, prevState) {
                  this.state.resolver !== prevState.resolver ? (prevState.resolver.dispose(), this._queryFetcher && this._queryFetcher.dispose(), 
                  this._refetchSubscription && this._refetchSubscription.unsubscribe(), this._subscribeToNewResolverAndRerenderIfStoreHasChanged()) : this._rerenderIfStoreHasChanged();
                }, _class.getDerivedStateFromProps = function(nextProps, prevState) {
                  var _nextProps$__rootIsQu, prevProps = prevState.prevProps, relayContext = assertRelayContext(nextProps.__relayContext), rootIsQueryRenderer = null !== (_nextProps$__rootIsQu = nextProps.__rootIsQueryRenderer) && void 0 !== _nextProps$__rootIsQu && _nextProps$__rootIsQu, prevIDs = getDataIDsFromObject(fragments, prevProps), nextIDs = getDataIDsFromObject(fragments, nextProps), prevRootVariables = getRootVariablesForFragments(fragments, prevProps), nextRootVariables = getRootVariablesForFragments(fragments, nextProps), resolver = prevState.resolver;
                  if (prevState.prevPropsContext.environment !== relayContext.environment || !areEqual(prevRootVariables, nextRootVariables) || !areEqual(prevIDs, nextIDs)) return {
                    data: (resolver = createFragmentSpecResolver(relayContext, containerName, fragments, nextProps, rootIsQueryRenderer)).resolve(),
                    localVariables: null,
                    prevProps: nextProps,
                    prevPropsContext: relayContext,
                    contextForChildren: relayContext,
                    relayProp: getRelayProp(relayContext.environment, prevState.relayProp.refetch),
                    resolver
                  };
                  prevState.localVariables || resolver.setProps(nextProps);
                  var data = resolver.resolve();
                  return data !== prevState.data ? {
                    data,
                    prevProps: nextProps
                  } : null;
                }, _proto.componentWillUnmount = function() {
                  this._isUnmounted = !0, this.state.resolver.dispose(), this._queryFetcher && this._queryFetcher.dispose(), 
                  this._refetchSubscription && this._refetchSubscription.unsubscribe();
                }, _proto.shouldComponentUpdate = function(nextProps, nextState) {
                  if (nextState.data !== this.state.data || nextState.relayProp !== this.state.relayProp) return !0;
                  for (var keys = Object.keys(nextProps), ii = 0; ii < keys.length; ii++) {
                    var key = keys[ii];
                    if ("__relayContext" === key) {
                      if (this.state.prevPropsContext.environment !== nextState.prevPropsContext.environment) return !0;
                    } else if (!fragments.hasOwnProperty(key) && !isScalarAndEqual(nextProps[key], this.props[key])) return !0;
                  }
                  return !1;
                }, _proto._rerenderIfStoreHasChanged = function() {
                  var _this$state = this.state, data = _this$state.data, maybeNewData = _this$state.resolver.resolve();
                  data !== maybeNewData && this.setState({
                    data: maybeNewData
                  });
                }, _proto._subscribeToNewResolverAndRerenderIfStoreHasChanged = function() {
                  var _this$state2 = this.state, data = _this$state2.data, resolver = _this$state2.resolver, maybeNewData = resolver.resolve();
                  resolver.setCallback(this.props, this._handleFragmentDataUpdate), data !== maybeNewData && this.setState({
                    data: maybeNewData
                  });
                }, _proto._getFragmentVariables = function() {
                  return getVariablesFromObject(fragments, this.props);
                }, _proto._getQueryFetcher = function() {
                  return this._queryFetcher || (this._queryFetcher = new ReactRelayQueryFetcher), 
                  this._queryFetcher;
                }, _proto.render = function() {
                  var _this$props = this.props, componentRef = _this$props.componentRef, props = (_this$props.__relayContext, 
                  _this$props.__rootIsQueryRenderer, (0, _objectWithoutPropertiesLoose2.default)(_this$props, _excluded)), _this$state3 = this.state, relayProp = _this$state3.relayProp, contextForChildren = _this$state3.contextForChildren;
                  return React.createElement(ReactRelayContext.Provider, {
                    value: contextForChildren
                  }, React.createElement(Component, (0, _extends2.default)({}, props, this.state.data, {
                    ref: componentRef,
                    relay: relayProp
                  })));
                }, _class;
              }(React.Component), (0, _defineProperty2.default)(_class, "displayName", containerName), 
              _class;
            }(ComponentClass, fragments, taggedNode);
          }));
        }
      };
    },
    1461: (module, __unused_webpack_exports, __webpack_require__) => {
      "use strict";
      var isRelayEnvironment = __webpack_require__(9955), invariant = __webpack_require__(1235);
      function isRelayContext(context) {
        return "object" == typeof context && null !== context && !Array.isArray(context) && isRelayEnvironment(context.environment);
      }
      module.exports = {
        assertRelayContext: function(relay) {
          return isRelayContext(relay) || invariant(!1), relay;
        },
        isRelayContext
      };
    },
    7332: (module, __unused_webpack_exports, __webpack_require__) => {
      "use strict";
      var invariant = __webpack_require__(1235);
      module.exports = function(componentName, fragmentSpec) {
        for (var key in fragmentSpec && "object" == typeof fragmentSpec || invariant(!1), 
        fragmentSpec) if (fragmentSpec.hasOwnProperty(key)) {
          var fragment = fragmentSpec[key];
          (!fragment || "object" != typeof fragment && "function" != typeof fragment) && invariant(!1);
        }
      };
    },
    0: (module, __unused_webpack_exports, __webpack_require__) => {
      "use strict";
      var _extends2 = (0, __webpack_require__(3404).default)(__webpack_require__(6750)), assertFragmentMap = __webpack_require__(7332), _require = __webpack_require__(4895), getComponentName = _require.getComponentName, getContainerName = _require.getContainerName, ReactRelayContext = __webpack_require__(3483), ReactRelayQueryRendererContext = __webpack_require__(6269), invariant = __webpack_require__(1235), React = __webpack_require__(7130), getFragment = __webpack_require__(402).getFragment, useContext = React.useContext;
      module.exports = function(ComponentClass, fragmentSpec, createContainerWithFragments) {
        var containerName = getContainerName(ComponentClass);
        assertFragmentMap(getComponentName(ComponentClass), fragmentSpec);
        var fragments = {};
        for (var key in fragmentSpec) fragments[key] = getFragment(fragmentSpec[key]);
        var Container = createContainerWithFragments(ComponentClass, fragments);
        function ForwardRef(props, ref) {
          var _queryRendererContext, context = useContext(ReactRelayContext);
          null == context && invariant(!1);
          var queryRendererContext = useContext(ReactRelayQueryRendererContext);
          return React.createElement(Container, (0, _extends2.default)({}, props, {
            __relayContext: context,
            __rootIsQueryRenderer: null !== (_queryRendererContext = null == queryRendererContext ? void 0 : queryRendererContext.rootIsQueryRenderer) && void 0 !== _queryRendererContext && _queryRendererContext,
            componentRef: props.componentRef || ref
          }));
        }
        return Container.displayName = containerName, ForwardRef.displayName = containerName, 
        React.forwardRef(ForwardRef);
      };
    },
    9687: (module, __unused_webpack_exports, __webpack_require__) => {
      "use strict";
      var _objectSpread2 = (0, __webpack_require__(3404).default)(__webpack_require__(9004)), getSelector = __webpack_require__(402).getSelector;
      module.exports = function(fragments, props) {
        var rootVariables = {};
        return Object.keys(fragments).forEach((function(key) {
          var _selector$selectors$, _selector$selectors$2, _selector$owner$varia, fragmentNode = fragments[key], fragmentRef = props[key], selector = getSelector(fragmentNode, fragmentRef), fragmentOwnerVariables = null != selector && "PluralReaderSelector" === selector.kind ? null !== (_selector$selectors$ = null === (_selector$selectors$2 = selector.selectors[0]) || void 0 === _selector$selectors$2 ? void 0 : _selector$selectors$2.owner.variables) && void 0 !== _selector$selectors$ ? _selector$selectors$ : {} : null !== (_selector$owner$varia = null == selector ? void 0 : selector.owner.variables) && void 0 !== _selector$owner$varia ? _selector$owner$varia : {};
          rootVariables = (0, _objectSpread2.default)((0, _objectSpread2.default)({}, rootVariables), fragmentOwnerVariables);
        })), rootVariables;
      };
    },
    2314: (module, __unused_webpack_exports, __webpack_require__) => {
      "use strict";
      var ReactRelayContext = __webpack_require__(3483), ReactRelayFragmentContainer = __webpack_require__(1034), ReactRelayLocalQueryRenderer = __webpack_require__(3465), ReactRelayPaginationContainer = __webpack_require__(6624), ReactRelayQueryRenderer = __webpack_require__(4490), ReactRelayRefetchContainer = __webpack_require__(2413), EntryPointContainer = __webpack_require__(6765), loadEntryPoint = __webpack_require__(5412), loadQuery = __webpack_require__(2741).loadQuery, ProfilerContext = __webpack_require__(717), RelayEnvironmentProvider = __webpack_require__(7433), useClientQuery = __webpack_require__(1016), useEntryPointLoader = __webpack_require__(5939), useFragment = __webpack_require__(1202), useLazyLoadQuery = __webpack_require__(7455), useMutation = __webpack_require__(8590), usePaginationFragment = __webpack_require__(8847), usePreloadedQuery = __webpack_require__(5212), useQueryLoader = __webpack_require__(4120), useRefetchableFragment = __webpack_require__(3305), useRelayEnvironment = __webpack_require__(5461), useSubscribeToInvalidationState = __webpack_require__(855), useSubscription = __webpack_require__(8242), RelayRuntime = __webpack_require__(402);
      module.exports = {
        ConnectionHandler: RelayRuntime.ConnectionHandler,
        QueryRenderer: ReactRelayQueryRenderer,
        LocalQueryRenderer: ReactRelayLocalQueryRenderer,
        MutationTypes: RelayRuntime.MutationTypes,
        RangeOperations: RelayRuntime.RangeOperations,
        ReactRelayContext,
        applyOptimisticMutation: RelayRuntime.applyOptimisticMutation,
        commitLocalUpdate: RelayRuntime.commitLocalUpdate,
        commitMutation: RelayRuntime.commitMutation,
        createFragmentContainer: ReactRelayFragmentContainer.createContainer,
        createPaginationContainer: ReactRelayPaginationContainer.createContainer,
        createRefetchContainer: ReactRelayRefetchContainer.createContainer,
        fetchQuery_DEPRECATED: RelayRuntime.fetchQuery_DEPRECATED,
        graphql: RelayRuntime.graphql,
        readInlineData: RelayRuntime.readInlineData,
        requestSubscription: RelayRuntime.requestSubscription,
        EntryPointContainer,
        RelayEnvironmentProvider,
        ProfilerContext,
        fetchQuery: RelayRuntime.fetchQuery,
        loadQuery,
        loadEntryPoint,
        useClientQuery,
        useFragment,
        useLazyLoadQuery,
        useEntryPointLoader,
        useQueryLoader,
        useMutation,
        usePaginationFragment,
        usePreloadedQuery,
        useRefetchableFragment,
        useRelayEnvironment,
        useSubscribeToInvalidationState,
        useSubscription
      };
    },
    9955: module => {
      "use strict";
      module.exports = function(environment) {
        return "object" == typeof environment && null !== environment && "function" == typeof environment.check && "function" == typeof environment.lookup && "function" == typeof environment.retain && "function" == typeof environment.execute && "function" == typeof environment.subscribe;
      };
    },
    6765: (module, __unused_webpack_exports, __webpack_require__) => {
      "use strict";
      var ProfilerContext = __webpack_require__(717), useRelayEnvironment = __webpack_require__(5461), React = __webpack_require__(7130), _require = __webpack_require__(7130), useContext = _require.useContext, useEffect = _require.useEffect;
      __webpack_require__(3349);
      module.exports = function(_ref) {
        var entryPointReference = _ref.entryPointReference, props = _ref.props, getComponent = entryPointReference.getComponent, queries = entryPointReference.queries, entryPoints = entryPointReference.entryPoints, extraProps = entryPointReference.extraProps, rootModuleID = entryPointReference.rootModuleID, Component = getComponent(), profilerContext = useContext(ProfilerContext), environment = useRelayEnvironment();
        return useEffect((function() {
          environment.__log({
            name: "entrypoint.root.consume",
            profilerContext,
            rootModuleID
          });
        }), [ environment, profilerContext, rootModuleID ]), React.createElement(Component, {
          entryPoints,
          extraProps,
          props,
          queries
        });
      };
    },
    7197: (module, __unused_webpack_exports, __webpack_require__) => {
      "use strict";
      var invariant = __webpack_require__(1235), LRUCache = function() {
        function LRUCache(capacity) {
          this._capacity = capacity, this._capacity > 0 || invariant(!1), this._map = new Map;
        }
        var _proto = LRUCache.prototype;
        return _proto.set = function(key, value) {
          if (this._map.delete(key), this._map.set(key, value), this._map.size > this._capacity) {
            var firstKey = this._map.keys().next();
            firstKey.done || this._map.delete(firstKey.value);
          }
        }, _proto.get = function(key) {
          var value = this._map.get(key);
          return null != value && (this._map.delete(key), this._map.set(key, value)), value;
        }, _proto.has = function(key) {
          return this._map.has(key);
        }, _proto.delete = function(key) {
          this._map.delete(key);
        }, _proto.size = function() {
          return this._map.size;
        }, _proto.capacity = function() {
          return this._capacity - this._map.size;
        }, _proto.clear = function() {
          this._map.clear();
        }, LRUCache;
      }();
      module.exports = {
        create: function(capacity) {
          return new LRUCache(capacity);
        }
      };
    },
    717: (module, __unused_webpack_exports, __webpack_require__) => {
      "use strict";
      var ProfilerContext = __webpack_require__(7130).createContext({
        wrapPrepareQueryResource: function(cb) {
          return cb();
        }
      });
      module.exports = ProfilerContext;
    },
    7973: (module, __unused_webpack_exports, __webpack_require__) => {
      "use strict";
      var _interopRequireDefault = __webpack_require__(3404).default, _objectSpread2 = _interopRequireDefault(__webpack_require__(9004)), _defineProperty2 = _interopRequireDefault(__webpack_require__(1329)), LRUCache = __webpack_require__(7197), SuspenseResource = __webpack_require__(5879), invariant = __webpack_require__(1235), isPromise = __webpack_require__(402).isPromise, WEAKMAP_SUPPORTED = (__webpack_require__(3349), 
      "function" == typeof WeakMap);
      function operationIsLiveQuery(operation) {
        return void 0 !== operation.request.node.params.metadata.live;
      }
      function getQueryCacheIdentifier(environment, operation, maybeFetchPolicy, maybeRenderPolicy, cacheBreaker) {
        var fetchPolicy = null != maybeFetchPolicy ? maybeFetchPolicy : operationIsLiveQuery(operation) ? "store-and-network" : "store-or-network", renderPolicy = null != maybeRenderPolicy ? maybeRenderPolicy : environment.UNSTABLE_getDefaultRenderPolicy(), cacheIdentifier = "".concat(fetchPolicy, "-").concat(renderPolicy, "-").concat(operation.request.identifier);
        return null != cacheBreaker ? "".concat(cacheIdentifier, "-").concat(cacheBreaker) : cacheIdentifier;
      }
      function getQueryResult(operation, cacheIdentifier) {
        var rootFragmentRef = {
          __id: operation.fragment.dataID,
          __fragments: (0, _defineProperty2.default)({}, operation.fragment.node.name, operation.request.variables),
          __fragmentOwner: operation.request
        };
        return {
          cacheIdentifier,
          fragmentNode: operation.request.node.fragment,
          fragmentRef: rootFragmentRef,
          operation
        };
      }
      var nextID = 2e5;
      function createCacheEntry(cacheIdentifier, operation, operationAvailability, value, networkSubscription, onDispose) {
        var isLiveQuery = operationIsLiveQuery(operation), currentValue = value, currentNetworkSubscription = networkSubscription, suspenseResource = new SuspenseResource((function(environment) {
          var retention = environment.retain(operation);
          return {
            dispose: function() {
              isLiveQuery && null != currentNetworkSubscription && currentNetworkSubscription.unsubscribe(), 
              retention.dispose(), onDispose(cacheEntry);
            }
          };
        })), cacheEntry = {
          cacheIdentifier,
          id: nextID++,
          processedPayloadsCount: 0,
          operationAvailability,
          getValue: function() {
            return currentValue;
          },
          setValue: function(val) {
            currentValue = val;
          },
          setNetworkSubscription: function(subscription) {
            isLiveQuery && null != currentNetworkSubscription && currentNetworkSubscription.unsubscribe(), 
            currentNetworkSubscription = subscription;
          },
          temporaryRetain: function(environment) {
            return suspenseResource.temporaryRetain(environment);
          },
          permanentRetain: function(environment) {
            return suspenseResource.permanentRetain(environment);
          },
          releaseTemporaryRetain: function() {
            suspenseResource.releaseTemporaryRetain();
          }
        };
        return cacheEntry;
      }
      var QueryResourceImpl = function() {
        function QueryResourceImpl(environment) {
          var _this = this;
          (0, _defineProperty2.default)(this, "_clearCacheEntry", (function(cacheEntry) {
            _this._cache.delete(cacheEntry.cacheIdentifier);
          })), this._environment = environment, this._cache = LRUCache.create(1e3);
        }
        var _proto = QueryResourceImpl.prototype;
        return _proto.prepare = function(operation, fetchObservable, maybeFetchPolicy, maybeRenderPolicy, observer, cacheBreaker, profilerContext) {
          var cacheIdentifier = getQueryCacheIdentifier(this._environment, operation, maybeFetchPolicy, maybeRenderPolicy, cacheBreaker);
          return this.prepareWithIdentifier(cacheIdentifier, operation, fetchObservable, maybeFetchPolicy, maybeRenderPolicy, observer, profilerContext);
        }, _proto.prepareWithIdentifier = function(cacheIdentifier, operation, fetchObservable, maybeFetchPolicy, maybeRenderPolicy, observer, profilerContext) {
          var environment = this._environment, fetchPolicy = null != maybeFetchPolicy ? maybeFetchPolicy : operationIsLiveQuery(operation) ? "store-and-network" : "store-or-network", renderPolicy = null != maybeRenderPolicy ? maybeRenderPolicy : environment.UNSTABLE_getDefaultRenderPolicy(), cacheEntry = this._cache.get(cacheIdentifier), temporaryRetainDisposable = null, entryWasCached = null != cacheEntry;
          null == cacheEntry && (cacheEntry = this._fetchAndSaveQuery(cacheIdentifier, operation, fetchObservable, fetchPolicy, renderPolicy, profilerContext, (0, 
          _objectSpread2.default)((0, _objectSpread2.default)({}, observer), {}, {
            unsubscribe: function(subscription) {
              null != temporaryRetainDisposable && temporaryRetainDisposable.dispose();
              var observerUnsubscribe = null == observer ? void 0 : observer.unsubscribe;
              observerUnsubscribe && observerUnsubscribe(subscription);
            }
          }))), temporaryRetainDisposable = cacheEntry.temporaryRetain(environment);
          var cachedValue = cacheEntry.getValue();
          if (isPromise(cachedValue)) throw environment.__log({
            name: "suspense.query",
            fetchPolicy,
            isPromiseCached: entryWasCached,
            operation,
            queryAvailability: cacheEntry.operationAvailability,
            renderPolicy
          }), cachedValue;
          if (cachedValue instanceof Error) throw cachedValue;
          return cachedValue;
        }, _proto.retain = function(queryResult, profilerContext) {
          var environment = this._environment, cacheIdentifier = queryResult.cacheIdentifier, operation = queryResult.operation, cacheEntry = this._getOrCreateCacheEntry(cacheIdentifier, operation, null, queryResult, null), disposable = cacheEntry.permanentRetain(environment);
          return environment.__log({
            name: "queryresource.retain",
            profilerContext,
            resourceID: cacheEntry.id
          }), {
            dispose: function() {
              disposable.dispose();
            }
          };
        }, _proto.releaseTemporaryRetain = function(queryResult) {
          var cacheEntry = this._cache.get(queryResult.cacheIdentifier);
          null != cacheEntry && cacheEntry.releaseTemporaryRetain();
        }, _proto.TESTS_ONLY__getCacheEntry = function(operation, maybeFetchPolicy, maybeRenderPolicy, cacheBreaker) {
          var cacheIdentifier = getQueryCacheIdentifier(this._environment, operation, maybeFetchPolicy, maybeRenderPolicy, cacheBreaker);
          return this._cache.get(cacheIdentifier);
        }, _proto._getOrCreateCacheEntry = function(cacheIdentifier, operation, operationAvailability, value, networkSubscription) {
          var cacheEntry = this._cache.get(cacheIdentifier);
          return null == cacheEntry && (cacheEntry = createCacheEntry(cacheIdentifier, operation, operationAvailability, value, networkSubscription, this._clearCacheEntry), 
          this._cache.set(cacheIdentifier, cacheEntry)), cacheEntry;
        }, _proto._fetchAndSaveQuery = function(cacheIdentifier, operation, fetchObservable, fetchPolicy, renderPolicy, profilerContext, observer) {
          var shouldFetch, shouldAllowRender, _this2 = this, environment = this._environment, queryAvailability = environment.check(operation), queryStatus = queryAvailability.status, hasFullQuery = "available" === queryStatus, canPartialRender = hasFullQuery || "partial" === renderPolicy && "stale" !== queryStatus, resolveNetworkPromise = function() {};
          switch (fetchPolicy) {
           case "store-only":
            shouldFetch = !1, shouldAllowRender = !0;
            break;

           case "store-or-network":
            shouldFetch = !hasFullQuery, shouldAllowRender = canPartialRender;
            break;

           case "store-and-network":
            shouldFetch = !0, shouldAllowRender = canPartialRender;
            break;

           default:
            shouldFetch = !0, shouldAllowRender = !1;
          }
          if (shouldAllowRender) {
            var queryResult = getQueryResult(operation, cacheIdentifier), _cacheEntry = createCacheEntry(cacheIdentifier, operation, queryAvailability, queryResult, null, this._clearCacheEntry);
            this._cache.set(cacheIdentifier, _cacheEntry);
          }
          if (shouldFetch) {
            var networkSubscription, _queryResult = getQueryResult(operation, cacheIdentifier);
            fetchObservable.subscribe({
              start: function(subscription) {
                networkSubscription = subscription;
                var cacheEntry = _this2._cache.get(cacheIdentifier);
                cacheEntry && cacheEntry.setNetworkSubscription(networkSubscription);
                var observerStart = null == observer ? void 0 : observer.start;
                observerStart && observerStart((0, _objectSpread2.default)((0, _objectSpread2.default)({}, subscription), {}, {
                  unsubscribe: function() {
                    operationIsLiveQuery(operation) && subscription.unsubscribe();
                  }
                }));
              },
              next: function() {
                var cacheEntry = _this2._getOrCreateCacheEntry(cacheIdentifier, operation, queryAvailability, _queryResult, networkSubscription);
                cacheEntry.processedPayloadsCount += 1, cacheEntry.setValue(_queryResult), resolveNetworkPromise();
                var observerNext = null == observer ? void 0 : observer.next;
                null != observerNext && observerNext(environment.lookup(operation.fragment));
              },
              error: function(_error) {
                var cacheEntry = _this2._getOrCreateCacheEntry(cacheIdentifier, operation, queryAvailability, _error, networkSubscription);
                0 === cacheEntry.processedPayloadsCount && cacheEntry.setValue(_error), resolveNetworkPromise(), 
                networkSubscription = null, cacheEntry.setNetworkSubscription(null);
                var observerError = null == observer ? void 0 : observer.error;
                observerError && observerError(_error);
              },
              complete: function() {
                resolveNetworkPromise(), networkSubscription = null;
                var cacheEntry = _this2._cache.get(cacheIdentifier);
                cacheEntry && cacheEntry.setNetworkSubscription(null);
                var observerComplete = null == observer ? void 0 : observer.complete;
                observerComplete && observerComplete();
              },
              unsubscribe: null == observer ? void 0 : observer.unsubscribe
            });
            var _cacheEntry2 = this._cache.get(cacheIdentifier);
            if (!_cacheEntry2) {
              var networkPromise = new Promise((function(resolve) {
                resolveNetworkPromise = resolve;
              }));
              networkPromise.displayName = "Relay(" + operation.fragment.node.name + ")", _cacheEntry2 = createCacheEntry(cacheIdentifier, operation, queryAvailability, networkPromise, networkSubscription, this._clearCacheEntry), 
              this._cache.set(cacheIdentifier, _cacheEntry2);
            }
          } else {
            var observerComplete = null == observer ? void 0 : observer.complete;
            observerComplete && observerComplete();
          }
          var cacheEntry = this._cache.get(cacheIdentifier);
          return null == cacheEntry && invariant(!1), environment.__log({
            name: "queryresource.fetch",
            resourceID: cacheEntry.id,
            operation,
            profilerContext,
            fetchPolicy,
            renderPolicy,
            queryAvailability,
            shouldFetch
          }), cacheEntry;
        }, QueryResourceImpl;
      }();
      function createQueryResource(environment) {
        return new QueryResourceImpl(environment);
      }
      var dataResources = WEAKMAP_SUPPORTED ? new WeakMap : new Map;
      module.exports = {
        createQueryResource,
        getQueryResourceForEnvironment: function(environment) {
          var cached = dataResources.get(environment);
          if (cached) return cached;
          var newDataResource = createQueryResource(environment);
          return dataResources.set(environment, newDataResource), newDataResource;
        },
        getQueryCacheIdentifier
      };
    },
    7433: (module, __unused_webpack_exports, __webpack_require__) => {
      "use strict";
      var ReactRelayContext = __webpack_require__(3483), React = __webpack_require__(7130), useMemo = React.useMemo;
      module.exports = function(props) {
        var children = props.children, environment = props.environment, getEnvironmentForActor = props.getEnvironmentForActor, context = useMemo((function() {
          return {
            environment,
            getEnvironmentForActor
          };
        }), [ environment, getEnvironmentForActor ]);
        return React.createElement(ReactRelayContext.Provider, {
          value: context
        }, children);
      };
    },
    5879: (module, __unused_webpack_exports, __webpack_require__) => {
      "use strict";
      var _defineProperty2 = (0, __webpack_require__(3404).default)(__webpack_require__(1329)), SuspenseResource = (__webpack_require__(3349), 
      function() {
        function SuspenseResource(retain) {
          var _this = this;
          (0, _defineProperty2.default)(this, "_retainCount", 0), (0, _defineProperty2.default)(this, "_retainDisposable", null), 
          (0, _defineProperty2.default)(this, "_releaseTemporaryRetain", null), this._retain = function(environment) {
            return _this._retainCount++, 1 === _this._retainCount && (_this._retainDisposable = retain(environment)), 
            {
              dispose: function() {
                _this._retainCount = Math.max(0, _this._retainCount - 1), 0 === _this._retainCount && null != _this._retainDisposable && (_this._retainDisposable.dispose(), 
                _this._retainDisposable = null);
              }
            };
          };
        }
        var _proto = SuspenseResource.prototype;
        return _proto.temporaryRetain = function(environment) {
          var _this$_releaseTempora, _this2 = this;
          if (environment.isServer()) return {
            dispose: function() {}
          };
          var retention = this._retain(environment), releaseQueryTimeout = null, releaseTemporaryRetain = function() {
            clearTimeout(releaseQueryTimeout), releaseQueryTimeout = null, _this2._releaseTemporaryRetain = null, 
            retention.dispose();
          };
          return releaseQueryTimeout = setTimeout(releaseTemporaryRetain, 3e5), null === (_this$_releaseTempora = this._releaseTemporaryRetain) || void 0 === _this$_releaseTempora || _this$_releaseTempora.call(this), 
          this._releaseTemporaryRetain = releaseTemporaryRetain, {
            dispose: function() {
              var _this$_releaseTempora2;
              null === (_this$_releaseTempora2 = _this2._releaseTemporaryRetain) || void 0 === _this$_releaseTempora2 || _this$_releaseTempora2.call(_this2);
            }
          };
        }, _proto.permanentRetain = function(environment) {
          var disposable = this._retain(environment);
          return this.releaseTemporaryRetain(), disposable;
        }, _proto.releaseTemporaryRetain = function() {
          var _this$_releaseTempora3;
          null === (_this$_releaseTempora3 = this._releaseTemporaryRetain) || void 0 === _this$_releaseTempora3 || _this$_releaseTempora3.call(this), 
          this._releaseTemporaryRetain = null;
        }, _proto.getRetainCount = function() {
          return this._retainCount;
        }, SuspenseResource;
      }());
      module.exports = SuspenseResource;
    },
    4524: (module, __unused_webpack_exports, __webpack_require__) => {
      "use strict";
      var invariant = __webpack_require__(1235), _require = __webpack_require__(402), ConnectionInterface = _require.ConnectionInterface, getValueAtPath = _require.getValueAtPath;
      module.exports = function(direction, fragmentNode, fragmentData, connectionPathInFragmentData) {
        var _pageInfo$END_CURSOR, _pageInfo$START_CURSO, _ConnectionInterface$ = ConnectionInterface.get(), EDGES = _ConnectionInterface$.EDGES, PAGE_INFO = _ConnectionInterface$.PAGE_INFO, HAS_NEXT_PAGE = _ConnectionInterface$.HAS_NEXT_PAGE, HAS_PREV_PAGE = _ConnectionInterface$.HAS_PREV_PAGE, END_CURSOR = _ConnectionInterface$.END_CURSOR, START_CURSOR = _ConnectionInterface$.START_CURSOR, connection = getValueAtPath(fragmentData, connectionPathInFragmentData);
        if (null == connection) return {
          cursor: null,
          hasMore: !1
        };
        "object" != typeof connection && invariant(!1);
        var edges = connection[EDGES], pageInfo = connection[PAGE_INFO];
        if (null == edges || null == pageInfo) return {
          cursor: null,
          hasMore: !1
        };
        Array.isArray(edges) || invariant(!1), "object" != typeof pageInfo && invariant(!1);
        var cursor = "forward" === direction ? null !== (_pageInfo$END_CURSOR = pageInfo[END_CURSOR]) && void 0 !== _pageInfo$END_CURSOR ? _pageInfo$END_CURSOR : null : null !== (_pageInfo$START_CURSO = pageInfo[START_CURSOR]) && void 0 !== _pageInfo$START_CURSO ? _pageInfo$START_CURSO : null;
        return null !== cursor && "string" != typeof cursor && invariant(!1), {
          cursor,
          hasMore: "forward" === direction ? null != cursor && !0 === pageInfo[HAS_NEXT_PAGE] : null != cursor && !0 === pageInfo[HAS_PREV_PAGE]
        };
      };
    },
    5412: (module, __unused_webpack_exports, __webpack_require__) => {
      "use strict";
      var loadQuery = __webpack_require__(2741).loadQuery;
      module.exports = function loadEntryPoint(environmentProvider, entryPoint, entryPointParams) {
        var loadingPromise = null;
        null == entryPoint.root.getModuleIfRequired() && (loadingPromise = entryPoint.root.load());
        var preloadProps = entryPoint.getPreloadProps(entryPointParams), queries = preloadProps.queries, entryPoints = preloadProps.entryPoints, extraProps = preloadProps.extraProps, preloadedQueries = {}, preloadedEntryPoints = {};
        null != queries && Object.keys(queries).forEach((function(queryPropName) {
          var query = queries[queryPropName];
          if (null != query) {
            var environmentProviderOptions = query.environmentProviderOptions, options = query.options, parameters = query.parameters, variables = query.variables, environment = environmentProvider.getEnvironment(environmentProviderOptions);
            preloadedQueries[queryPropName] = loadQuery(environment, parameters, variables, {
              fetchPolicy: null == options ? void 0 : options.fetchPolicy,
              networkCacheConfig: null == options ? void 0 : options.networkCacheConfig,
              __nameForWarning: "loadEntryPoint"
            }, environmentProviderOptions);
          }
        })), null != entryPoints && Object.keys(entryPoints).forEach((function(entryPointPropName) {
          var entryPointDescription = entryPoints[entryPointPropName];
          if (null != entryPointDescription) {
            var nestedEntryPoint = entryPointDescription.entryPoint, nestedParams = entryPointDescription.entryPointParams;
            preloadedEntryPoints[entryPointPropName] = loadEntryPoint(environmentProvider, nestedEntryPoint, nestedParams);
          }
        }));
        var isDisposed = !1;
        return {
          dispose: function() {
            isDisposed || (null != preloadedQueries && Object.values(preloadedQueries).forEach((function(_ref) {
              (0, _ref.dispose)();
            })), null != preloadedEntryPoints && Object.values(preloadedEntryPoints).forEach((function(_ref2) {
              (0, _ref2.dispose)();
            })), isDisposed = !0);
          },
          entryPoints: preloadedEntryPoints,
          extraProps: null != extraProps ? extraProps : null,
          getComponent: function() {
            var _loadingPromise, componentModule = entryPoint.root.getModuleIfRequired();
            if (null == componentModule) throw loadingPromise = null !== (_loadingPromise = loadingPromise) && void 0 !== _loadingPromise ? _loadingPromise : entryPoint.root.load();
            return null != componentModule.default ? componentModule.default : componentModule;
          },
          get isDisposed() {
            return isDisposed;
          },
          queries: preloadedQueries,
          rootModuleID: entryPoint.root.getModuleId()
        };
      };
    },
    2741: (module, __unused_webpack_exports, __webpack_require__) => {
      "use strict";
      var _objectSpread2 = (0, __webpack_require__(3404).default)(__webpack_require__(9004)), invariant = __webpack_require__(1235), _require = __webpack_require__(402), fetchQueryDeduped = _require.__internal.fetchQueryDeduped, Observable = _require.Observable, PreloadableQueryRegistry = _require.PreloadableQueryRegistry, RelayFeatureFlags = _require.RelayFeatureFlags, ReplaySubject = _require.ReplaySubject, createOperationDescriptor = _require.createOperationDescriptor, getRequest = _require.getRequest, getRequestIdentifier = _require.getRequestIdentifier, fetchKey = 100001;
      module.exports = {
        loadQuery: function(environment, preloadableRequest, variables, options, environmentProviderOptions) {
          var _options$fetchPolicy;
          fetchKey++;
          var retainReference, unsubscribeFromNetworkRequest, unsubscribeFromExecution, params, cancelOnLoadCallback, queryId, fetchPolicy = null !== (_options$fetchPolicy = null == options ? void 0 : options.fetchPolicy) && void 0 !== _options$fetchPolicy ? _options$fetchPolicy : "store-or-network", networkCacheConfig = (0, 
          _objectSpread2.default)((0, _objectSpread2.default)({}, null == options ? void 0 : options.networkCacheConfig), {}, {
            force: !0
          }), didExecuteNetworkSource = !1, executeWithNetworkSource = function(operation, networkObservable) {
            return didExecuteNetworkSource = !0, environment.executeWithSource({
              operation,
              source: networkObservable
            });
          }, executionSubject = new ReplaySubject, returnedObservable = Observable.create((function(sink) {
            return executionSubject.subscribe(sink);
          })), networkError = null, didMakeNetworkRequest = !1, makeNetworkRequest = function(params) {
            var observable;
            didMakeNetworkRequest = !0;
            var subject = new ReplaySubject;
            if (!0 === RelayFeatureFlags.ENABLE_LOAD_QUERY_REQUEST_DEDUPING) {
              var identifier = "raw-network-request-" + getRequestIdentifier(params, variables);
              observable = fetchQueryDeduped(environment, identifier, (function() {
                return environment.getNetwork().execute(params, variables, networkCacheConfig);
              }));
            } else {
              observable = environment.getNetwork().execute(params, variables, networkCacheConfig);
            }
            var unsubscribe = observable.subscribe({
              error: function(err) {
                networkError = err, subject.error(err);
              },
              next: function(data) {
                subject.next(data);
              },
              complete: function() {
                subject.complete();
              }
            }).unsubscribe;
            return unsubscribeFromNetworkRequest = unsubscribe, Observable.create((function(sink) {
              var subjectSubscription = subject.subscribe(sink);
              return function() {
                subjectSubscription.unsubscribe(), unsubscribeFromNetworkRequest();
              };
            }));
          }, executeDeduped = function(operation, fetchFn) {
            !0 === RelayFeatureFlags.ENABLE_LOAD_QUERY_REQUEST_DEDUPING && (didMakeNetworkRequest = !0);
            var _fetchQueryDeduped$su = fetchQueryDeduped(environment, operation.request.identifier, fetchFn).subscribe({
              error: function(err) {
                executionSubject.error(err);
              },
              next: function(data) {
                executionSubject.next(data);
              },
              complete: function() {
                executionSubject.complete();
              }
            });
            unsubscribeFromExecution = _fetchQueryDeduped$su.unsubscribe;
          }, checkAvailabilityAndExecute = function(concreteRequest) {
            var operation = createOperationDescriptor(concreteRequest, variables, networkCacheConfig);
            (retainReference = environment.retain(operation), "store-only" !== fetchPolicy) && (("store-or-network" !== fetchPolicy || "available" !== environment.check(operation).status) && executeDeduped(operation, (function() {
              var networkObservable = makeNetworkRequest(concreteRequest.params);
              return executeWithNetworkSource(operation, networkObservable);
            })));
          };
          if ("PreloadableConcreteRequest" === preloadableRequest.kind) {
            null === (queryId = (params = preloadableRequest.params).id) && invariant(!1);
            var _module = PreloadableQueryRegistry.get(queryId);
            if (null != _module) checkAvailabilityAndExecute(_module); else {
              var networkObservable = "store-only" === fetchPolicy ? null : makeNetworkRequest(params), _PreloadableQueryRegi = PreloadableQueryRegistry.onLoad(queryId, (function(preloadedModule) {
                cancelOnLoadCallback();
                var operation = createOperationDescriptor(preloadedModule, variables, networkCacheConfig);
                retainReference = environment.retain(operation), null != networkObservable && executeDeduped(operation, (function() {
                  return executeWithNetworkSource(operation, networkObservable);
                }));
              }));
              cancelOnLoadCallback = _PreloadableQueryRegi.dispose;
            }
          } else {
            var request = getRequest(preloadableRequest);
            queryId = null != (params = request.params).cacheID ? params.cacheID : params.id, 
            checkAvailabilityAndExecute(request);
          }
          var isDisposed = !1, isReleased = !1, isNetworkRequestCancelled = !1, releaseQuery = function() {
            isReleased || (retainReference && retainReference.dispose(), isReleased = !0);
          }, cancelNetworkRequest = function() {
            isNetworkRequestCancelled || (didExecuteNetworkSource ? unsubscribeFromExecution && unsubscribeFromExecution() : unsubscribeFromNetworkRequest && unsubscribeFromNetworkRequest(), 
            cancelOnLoadCallback && cancelOnLoadCallback(), isNetworkRequestCancelled = !0);
          };
          return {
            kind: "PreloadedQuery",
            environment,
            environmentProviderOptions,
            dispose: function() {
              isDisposed || (releaseQuery(), cancelNetworkRequest(), isDisposed = !0);
            },
            releaseQuery,
            cancelNetworkRequest,
            fetchKey,
            id: queryId,
            get isDisposed() {
              return isDisposed || isReleased;
            },
            get networkError() {
              return networkError;
            },
            name: params.name,
            networkCacheConfig,
            fetchPolicy,
            source: didMakeNetworkRequest ? returnedObservable : void 0,
            variables
          };
        }
      };
    },
    4047: (module, __unused_webpack_exports, __webpack_require__) => {
      "use strict";
      var _interopRequireDefault = __webpack_require__(3404).default, _objectSpread2 = _interopRequireDefault(__webpack_require__(9004)), _createForOfIteratorHelper2 = _interopRequireDefault(__webpack_require__(8220)), getQueryResourceForEnvironment = __webpack_require__(7973).getQueryResourceForEnvironment, invariant = __webpack_require__(1235), _require2 = __webpack_require__(402), fetchQueryInternal = _require2.__internal.fetchQuery, RelayFeatureFlags = _require2.RelayFeatureFlags, createOperationDescriptor = _require2.createOperationDescriptor, getPendingOperationsForFragment = _require2.getPendingOperationsForFragment, getSelector = _require2.getSelector, getVariablesFromFragment = _require2.getVariablesFromFragment, handlePotentialSnapshotErrors = _require2.handlePotentialSnapshotErrors;
      __webpack_require__(3349);
      function handleMissingClientEdge(environment, parentFragmentNode, parentFragmentRef, missingClientEdgeRequestInfo, queryOptions) {
        var originalVariables = getVariablesFromFragment(parentFragmentNode, parentFragmentRef), variables = (0, 
        _objectSpread2.default)((0, _objectSpread2.default)({}, originalVariables), {}, {
          id: missingClientEdgeRequestInfo.clientEdgeDestinationID
        }), queryOperationDescriptor = createOperationDescriptor(missingClientEdgeRequestInfo.request, variables, null == queryOptions ? void 0 : queryOptions.networkCacheConfig);
        return getQueryResourceForEnvironment(environment).prepare(queryOperationDescriptor, fetchQueryInternal(environment, queryOperationDescriptor), null == queryOptions ? void 0 : queryOptions.fetchPolicy);
      }
      module.exports = function(environment, fragmentNode, fragmentRef, hookDisplayName, queryOptions, fragmentKey) {
        var _fragmentNode$metadat, _fragmentNode$metadat2, fragmentSelector = getSelector(fragmentNode, fragmentRef), isPlural = !0 === (null == fragmentNode || null === (_fragmentNode$metadat = fragmentNode.metadata) || void 0 === _fragmentNode$metadat ? void 0 : _fragmentNode$metadat.plural);
        isPlural ? null == fragmentRef || Array.isArray(fragmentRef) || invariant(!1) : Array.isArray(fragmentRef) && invariant(!1), 
        null == fragmentRef || isPlural && Array.isArray(fragmentRef) && 0 === fragmentRef.length || null != fragmentSelector || invariant(!1);
        var data, state = function(environment, fragmentSelector) {
          return null == fragmentSelector ? {
            kind: "bailout"
          } : "PluralReaderSelector" === fragmentSelector.kind ? 0 === fragmentSelector.selectors.length ? {
            kind: "bailout"
          } : {
            kind: "plural",
            snapshots: fragmentSelector.selectors.map((function(s) {
              return environment.lookup(s);
            })),
            epoch: environment.getStore().getEpoch()
          } : {
            kind: "singular",
            snapshot: environment.lookup(fragmentSelector),
            epoch: environment.getStore().getEpoch()
          };
        }(environment, fragmentSelector), clientEdgeQueries = null;
        if (!0 === (null === (_fragmentNode$metadat2 = fragmentNode.metadata) || void 0 === _fragmentNode$metadat2 ? void 0 : _fragmentNode$metadat2.hasClientEdges)) {
          var missingClientEdges = function(state) {
            if ("bailout" === state.kind) return null;
            var _state$snapshot$missi;
            if ("singular" === state.kind) return null !== (_state$snapshot$missi = state.snapshot.missingClientEdges) && void 0 !== _state$snapshot$missi ? _state$snapshot$missi : null;
            var _step, edges = null, _iterator = (0, _createForOfIteratorHelper2.default)(state.snapshots);
            try {
              for (_iterator.s(); !(_step = _iterator.n()).done; ) {
                var snapshot = _step.value;
                if (snapshot.missingClientEdges) {
                  var _edges;
                  edges = null !== (_edges = edges) && void 0 !== _edges ? _edges : [];
                  var _step2, _iterator2 = (0, _createForOfIteratorHelper2.default)(snapshot.missingClientEdges);
                  try {
                    for (_iterator2.s(); !(_step2 = _iterator2.n()).done; ) {
                      var edge = _step2.value;
                      edges.push(edge);
                    }
                  } catch (err) {
                    _iterator2.e(err);
                  } finally {
                    _iterator2.f();
                  }
                }
              }
            } catch (err) {
              _iterator.e(err);
            } finally {
              _iterator.f();
            }
            return edges;
          }(state);
          if (null != missingClientEdges && missingClientEdges.length) {
            clientEdgeQueries = [];
            var _step4, _iterator4 = (0, _createForOfIteratorHelper2.default)(missingClientEdges);
            try {
              for (_iterator4.s(); !(_step4 = _iterator4.n()).done; ) {
                var edge = _step4.value;
                clientEdgeQueries.push(handleMissingClientEdge(environment, fragmentNode, fragmentRef, edge, queryOptions));
              }
            } catch (err) {
              _iterator4.e(err);
            } finally {
              _iterator4.f();
            }
          }
        }
        if (function(state) {
          return "bailout" !== state.kind && ("singular" === state.kind ? state.snapshot.isMissingData : state.snapshots.some((function(s) {
            return s.isMissingData;
          })));
        }(state)) {
          null == fragmentSelector && invariant(!1);
          var fragmentOwner = "PluralReaderSelector" === fragmentSelector.kind ? fragmentSelector.selectors[0].owner : fragmentSelector.owner, pendingOperationsResult = getPendingOperationsForFragment(environment, fragmentNode, fragmentOwner);
          if (pendingOperationsResult) throw pendingOperationsResult.promise;
          !function(environment, state) {
            if ("singular" === state.kind) handlePotentialSnapshotErrors(environment, state.snapshot.errorResponseFields); else if ("plural" === state.kind) {
              var _step3, _iterator3 = (0, _createForOfIteratorHelper2.default)(state.snapshots);
              try {
                for (_iterator3.s(); !(_step3 = _iterator3.n()).done; ) {
                  var snapshot = _step3.value;
                  handlePotentialSnapshotErrors(environment, snapshot.errorResponseFields);
                }
              } catch (err) {
                _iterator3.e(err);
              } finally {
                _iterator3.f();
              }
            }
          }(environment, state);
        }
        return data = "bailout" === state.kind ? isPlural ? [] : null : "singular" === state.kind ? state.snapshot.data : state.snapshots.map((function(s) {
          return s.data;
        })), RelayFeatureFlags.LOG_MISSING_RECORDS_IN_PROD && null != fragmentRef && (void 0 === data || Array.isArray(data) && data.length > 0 && data.every((function(d) {
          return void 0 === d;
        }))), {
          data,
          clientEdgeQueries
        };
      };
    },
    1016: (module, __unused_webpack_exports, __webpack_require__) => {
      "use strict";
      var _objectSpread2 = (0, __webpack_require__(3404).default)(__webpack_require__(9004)), useLazyLoadQuery = __webpack_require__(7455);
      module.exports = function(gqlQuery, variables, options) {
        return useLazyLoadQuery(gqlQuery, variables, (0, _objectSpread2.default)((0, _objectSpread2.default)({}, options), {}, {
          fetchPolicy: "store-only"
        }));
      };
    },
    5939: (module, __unused_webpack_exports, __webpack_require__) => {
      "use strict";
      var _createForOfIteratorHelper2 = (0, __webpack_require__(3404).default)(__webpack_require__(8220)), loadEntryPoint = __webpack_require__(5412), useIsMountedRef = __webpack_require__(3452), _require = __webpack_require__(7130), useCallback = _require.useCallback, useEffect = _require.useEffect, useRef = _require.useRef, useState = _require.useState, initialNullEntryPointReferenceState = {
        kind: "NullEntryPointReference"
      };
      module.exports = function(environmentProvider, entryPoint, options) {
        var _options$TEST_ONLY__i, _options$TEST_ONLY__i2, _options$TEST_ONLY__i3, _options$TEST_ONLY__i4, initialEntryPointReferenceInternal = null !== (_options$TEST_ONLY__i = null == options || null === (_options$TEST_ONLY__i2 = options.TEST_ONLY__initialEntryPointData) || void 0 === _options$TEST_ONLY__i2 ? void 0 : _options$TEST_ONLY__i2.entryPointReference) && void 0 !== _options$TEST_ONLY__i ? _options$TEST_ONLY__i : initialNullEntryPointReferenceState, initialEntryPointParamsInternal = null !== (_options$TEST_ONLY__i3 = null == options || null === (_options$TEST_ONLY__i4 = options.TEST_ONLY__initialEntryPointData) || void 0 === _options$TEST_ONLY__i4 ? void 0 : _options$TEST_ONLY__i4.entryPointParams) && void 0 !== _options$TEST_ONLY__i3 ? _options$TEST_ONLY__i3 : null, isMountedRef = useIsMountedRef(), undisposedEntryPointReferencesRef = useRef(new Set([ initialEntryPointReferenceInternal ])), _useState = useState(initialEntryPointReferenceInternal), entryPointReference = _useState[0], setEntryPointReference = _useState[1], _useState2 = useState(initialEntryPointParamsInternal), entryPointParams = _useState2[0], setEntryPointParams = _useState2[1], disposeEntryPoint = useCallback((function() {
          if (isMountedRef.current) {
            var nullEntryPointReference = {
              kind: "NullEntryPointReference"
            };
            undisposedEntryPointReferencesRef.current.add(nullEntryPointReference), setEntryPointReference(nullEntryPointReference);
          }
        }), [ setEntryPointReference, isMountedRef ]), entryPointLoaderCallback = useCallback((function(params) {
          if (isMountedRef.current) {
            var updatedEntryPointReference = loadEntryPoint(environmentProvider, entryPoint, params);
            undisposedEntryPointReferencesRef.current.add(updatedEntryPointReference), setEntryPointReference(updatedEntryPointReference), 
            setEntryPointParams(params);
          }
        }), [ environmentProvider, entryPoint, setEntryPointReference, isMountedRef ]), maybeHiddenOrFastRefresh = useRef(!1);
        return useEffect((function() {
          return function() {
            maybeHiddenOrFastRefresh.current = !0;
          };
        }), []), useEffect((function() {
          if (!0 === maybeHiddenOrFastRefresh.current) return maybeHiddenOrFastRefresh.current = !1, 
          void ("NullEntryPointReference" !== entryPointReference.kind && null != entryPointParams && entryPointLoaderCallback(entryPointParams));
          var undisposedEntryPointReferences = undisposedEntryPointReferencesRef.current;
          if (isMountedRef.current) {
            var _step, _iterator = (0, _createForOfIteratorHelper2.default)(undisposedEntryPointReferences);
            try {
              for (_iterator.s(); !(_step = _iterator.n()).done; ) {
                var undisposedEntryPointReference = _step.value;
                if (undisposedEntryPointReference === entryPointReference) break;
                undisposedEntryPointReferences.delete(undisposedEntryPointReference), "NullEntryPointReference" !== undisposedEntryPointReference.kind && undisposedEntryPointReference.dispose();
              }
            } catch (err) {
              _iterator.e(err);
            } finally {
              _iterator.f();
            }
          }
        }), [ entryPointReference, entryPointParams, entryPointLoaderCallback, isMountedRef ]), 
        useEffect((function() {
          return function() {
            var _step2, _iterator2 = (0, _createForOfIteratorHelper2.default)(undisposedEntryPointReferencesRef.current);
            try {
              for (_iterator2.s(); !(_step2 = _iterator2.n()).done; ) {
                var unhandledStateChange = _step2.value;
                "NullEntryPointReference" !== unhandledStateChange.kind && unhandledStateChange.dispose();
              }
            } catch (err) {
              _iterator2.e(err);
            } finally {
              _iterator2.f();
            }
          };
        }), []), [ "NullEntryPointReference" === entryPointReference.kind ? null : entryPointReference, entryPointLoaderCallback, disposeEntryPoint ];
      };
    },
    7216: (module, __unused_webpack_exports, __webpack_require__) => {
      "use strict";
      var useUnsafeRef_DEPRECATED = __webpack_require__(5515), _require = __webpack_require__(7130), useCallback = _require.useCallback, useEffect = _require.useEffect;
      module.exports = function() {
        var subscriptionRef = useUnsafeRef_DEPRECATED(null), isFetchingRef = useUnsafeRef_DEPRECATED(!1), disposeFetch = useCallback((function() {
          null != subscriptionRef.current && (subscriptionRef.current.unsubscribe(), subscriptionRef.current = null), 
          isFetchingRef.current = !1;
        }), []), startFetch = useCallback((function(subscription) {
          subscriptionRef.current = subscription, isFetchingRef.current = !0;
        }), []), completeFetch = useCallback((function() {
          subscriptionRef.current = null, isFetchingRef.current = !1;
        }), []);
        return useEffect((function() {
          return disposeFetch;
        }), [ disposeFetch ]), {
          isFetchingRef,
          startFetch,
          disposeFetch,
          completeFetch
        };
      };
    },
    1202: (module, __unused_webpack_exports, __webpack_require__) => {
      "use strict";
      var useFragmentInternal = __webpack_require__(6926), useStaticFragmentNodeWarning = __webpack_require__(8253), getFragment = (__webpack_require__(7130).useDebugValue, 
      __webpack_require__(402).getFragment);
      module.exports = function(fragment, key) {
        var fragmentNode = getFragment(fragment);
        return useStaticFragmentNodeWarning(fragmentNode, "first argument of useFragment()"), 
        useFragmentInternal(fragmentNode, key, "useFragment()");
      };
    },
    6926: (module, __unused_webpack_exports, __webpack_require__) => {
      "use strict";
      var _interopRequireDefault = __webpack_require__(3404).default, _useFragmentInternal_CURRENT = _interopRequireDefault(__webpack_require__(9165)), _useFragmentInternal_EXPERIMENTAL = _interopRequireDefault(__webpack_require__(5605)), _relayRuntime = __webpack_require__(402);
      module.exports = function(fragmentNode, fragmentRef, hookDisplayName, queryOptions) {
        return _relayRuntime.RelayFeatureFlags.ENABLE_ACTIVITY_COMPATIBILITY ? (0, _useFragmentInternal_EXPERIMENTAL.default)(fragmentNode, fragmentRef, hookDisplayName, queryOptions) : (0, 
        _useFragmentInternal_CURRENT.default)(fragmentNode, fragmentRef, hookDisplayName, queryOptions);
      };
    },
    9165: (module, __unused_webpack_exports, __webpack_require__) => {
      "use strict";
      var _interopRequireDefault = __webpack_require__(3404).default, _objectSpread2 = _interopRequireDefault(__webpack_require__(9004)), _createForOfIteratorHelper2 = _interopRequireDefault(__webpack_require__(8220)), _toConsumableArray2 = _interopRequireDefault(__webpack_require__(6616)), getQueryResourceForEnvironment = __webpack_require__(7973).getQueryResourceForEnvironment, useRelayEnvironment = __webpack_require__(5461), invariant = __webpack_require__(1235), _require2 = __webpack_require__(7130), useEffect = (_require2.useDebugValue, 
      _require2.useEffect), useMemo = _require2.useMemo, useRef = _require2.useRef, useState = _require2.useState, _require3 = __webpack_require__(402), _require3$__internal = _require3.__internal, fetchQueryInternal = _require3$__internal.fetchQuery, getPromiseForActiveRequest = _require3$__internal.getPromiseForActiveRequest, RelayFeatureFlags = _require3.RelayFeatureFlags, areEqualSelectors = _require3.areEqualSelectors, createOperationDescriptor = _require3.createOperationDescriptor, getPendingOperationsForFragment = _require3.getPendingOperationsForFragment, getSelector = _require3.getSelector, getVariablesFromFragment = _require3.getVariablesFromFragment, handlePotentialSnapshotErrors = _require3.handlePotentialSnapshotErrors, recycleNodesInto = _require3.recycleNodesInto;
      __webpack_require__(3349);
      function handleMissedUpdates(environment, state) {
        if ("bailout" === state.kind) return null;
        var currentEpoch = environment.getStore().getEpoch();
        if (currentEpoch === state.epoch) return null;
        if ("singular" === state.kind) {
          var currentSnapshot = environment.lookup(state.snapshot.selector), updatedData = recycleNodesInto(state.snapshot.data, currentSnapshot.data), updatedCurrentSnapshot = {
            data: updatedData,
            isMissingData: currentSnapshot.isMissingData,
            missingClientEdges: currentSnapshot.missingClientEdges,
            missingLiveResolverFields: currentSnapshot.missingLiveResolverFields,
            seenRecords: currentSnapshot.seenRecords,
            selector: currentSnapshot.selector,
            errorResponseFields: currentSnapshot.errorResponseFields
          };
          return [ updatedData !== state.snapshot.data, {
            kind: "singular",
            snapshot: updatedCurrentSnapshot,
            epoch: currentEpoch
          } ];
        }
        for (var didMissUpdates = !1, currentSnapshots = [], index = 0; index < state.snapshots.length; index++) {
          var snapshot = state.snapshots[index], _currentSnapshot = environment.lookup(snapshot.selector), _updatedData = recycleNodesInto(snapshot.data, _currentSnapshot.data), _updatedCurrentSnapshot = {
            data: _updatedData,
            isMissingData: _currentSnapshot.isMissingData,
            missingClientEdges: _currentSnapshot.missingClientEdges,
            missingLiveResolverFields: _currentSnapshot.missingLiveResolverFields,
            seenRecords: _currentSnapshot.seenRecords,
            selector: _currentSnapshot.selector,
            errorResponseFields: _currentSnapshot.errorResponseFields
          };
          _updatedData !== snapshot.data && (didMissUpdates = !0), currentSnapshots.push(_updatedCurrentSnapshot);
        }
        return currentSnapshots.length !== state.snapshots.length && invariant(!1), [ didMissUpdates, {
          kind: "plural",
          snapshots: currentSnapshots,
          epoch: currentEpoch
        } ];
      }
      function handleMissingClientEdge(environment, parentFragmentNode, parentFragmentRef, missingClientEdgeRequestInfo, queryOptions) {
        var originalVariables = getVariablesFromFragment(parentFragmentNode, parentFragmentRef), variables = (0, 
        _objectSpread2.default)((0, _objectSpread2.default)({}, originalVariables), {}, {
          id: missingClientEdgeRequestInfo.clientEdgeDestinationID
        }), queryOperationDescriptor = createOperationDescriptor(missingClientEdgeRequestInfo.request, variables, null == queryOptions ? void 0 : queryOptions.networkCacheConfig);
        return [ getQueryResourceForEnvironment(environment).prepare(queryOperationDescriptor, fetchQueryInternal(environment, queryOperationDescriptor), null == queryOptions ? void 0 : queryOptions.fetchPolicy), getPromiseForActiveRequest(environment, queryOperationDescriptor.request) ];
      }
      function getFragmentState(environment, fragmentSelector) {
        return null == fragmentSelector ? {
          kind: "bailout"
        } : "PluralReaderSelector" === fragmentSelector.kind ? {
          kind: "plural",
          snapshots: fragmentSelector.selectors.map((function(s) {
            return environment.lookup(s);
          })),
          epoch: environment.getStore().getEpoch()
        } : {
          kind: "singular",
          snapshot: environment.lookup(fragmentSelector),
          epoch: environment.getStore().getEpoch()
        };
      }
      module.exports = function(fragmentNode, fragmentRef, hookDisplayName, queryOptions) {
        var _fragmentNode$metadat, _fragmentNode$metadat2, fragmentSelector = useMemo((function() {
          return getSelector(fragmentNode, fragmentRef);
        }), [ fragmentNode, fragmentRef ]), isPlural = !0 === (null == fragmentNode || null === (_fragmentNode$metadat = fragmentNode.metadata) || void 0 === _fragmentNode$metadat ? void 0 : _fragmentNode$metadat.plural);
        isPlural ? null == fragmentRef || Array.isArray(fragmentRef) || invariant(!1) : Array.isArray(fragmentRef) && invariant(!1), 
        null == fragmentRef || isPlural && Array.isArray(fragmentRef) && 0 === fragmentRef.length || null != fragmentSelector || invariant(!1);
        var environment = useRelayEnvironment(), _useState = useState((function() {
          return getFragmentState(environment, fragmentSelector);
        })), _state = _useState[0], setState = _useState[1], state = _state, _useState2 = useState(state), _subscribedState = _useState2[0], setSubscribedState = _useState2[1], subscribedState = _subscribedState, _useState3 = useState(fragmentSelector), previousFragmentSelector = _useState3[0], setPreviousFragmentSelector = _useState3[1], _useState4 = useState(environment), previousEnvironment = _useState4[0], setPreviousEnvironment = _useState4[1];
        if (!areEqualSelectors(fragmentSelector, previousFragmentSelector) || environment !== previousEnvironment) {
          setPreviousFragmentSelector(fragmentSelector), setPreviousEnvironment(environment);
          var newState = getFragmentState(environment, fragmentSelector);
          setState(newState), setSubscribedState(newState), state = newState, subscribedState = newState;
        }
        var committedFragmentSelectorRef = useRef(!1);
        if (useEffect((function() {
          committedFragmentSelectorRef.current = fragmentSelector;
        }), [ fragmentSelector ]), !0 === (null === (_fragmentNode$metadat2 = fragmentNode.metadata) || void 0 === _fragmentNode$metadat2 ? void 0 : _fragmentNode$metadat2.hasClientEdges)) {
          var _useMemo = useMemo((function() {
            var clientEdgeQueries, missingClientEdges = function(state) {
              if ("bailout" === state.kind) return null;
              var _state$snapshot$missi;
              if ("singular" === state.kind) return null !== (_state$snapshot$missi = state.snapshot.missingClientEdges) && void 0 !== _state$snapshot$missi ? _state$snapshot$missi : null;
              var _step, edges = null, _iterator = (0, _createForOfIteratorHelper2.default)(state.snapshots);
              try {
                for (_iterator.s(); !(_step = _iterator.n()).done; ) {
                  var snapshot = _step.value;
                  if (snapshot.missingClientEdges) {
                    var _edges;
                    edges = null !== (_edges = edges) && void 0 !== _edges ? _edges : [];
                    var _step2, _iterator2 = (0, _createForOfIteratorHelper2.default)(snapshot.missingClientEdges);
                    try {
                      for (_iterator2.s(); !(_step2 = _iterator2.n()).done; ) {
                        var edge = _step2.value;
                        edges.push(edge);
                      }
                    } catch (err) {
                      _iterator2.e(err);
                    } finally {
                      _iterator2.f();
                    }
                  }
                }
              } catch (err) {
                _iterator.e(err);
              } finally {
                _iterator.f();
              }
              return edges;
            }(state), activeRequestPromises = [];
            if (null != missingClientEdges && missingClientEdges.length) {
              clientEdgeQueries = [];
              var _step7, _iterator7 = (0, _createForOfIteratorHelper2.default)(missingClientEdges);
              try {
                for (_iterator7.s(); !(_step7 = _iterator7.n()).done; ) {
                  var edge = _step7.value, _handleMissingClientE = handleMissingClientEdge(environment, fragmentNode, fragmentRef, edge, queryOptions), queryResult = _handleMissingClientE[0], requestPromise = _handleMissingClientE[1];
                  clientEdgeQueries.push(queryResult), null != requestPromise && activeRequestPromises.push(requestPromise);
                }
              } catch (err) {
                _iterator7.e(err);
              } finally {
                _iterator7.f();
              }
            }
            return [ clientEdgeQueries, activeRequestPromises ];
          }), [ state, environment, fragmentNode, fragmentRef, queryOptions ]), clientEdgeQueries = _useMemo[0], activeRequestPromises = _useMemo[1];
          if (activeRequestPromises.length) throw Promise.all(activeRequestPromises);
          useEffect((function() {
            var QueryResource = getQueryResourceForEnvironment(environment);
            if (null != clientEdgeQueries && clientEdgeQueries.length) {
              var _step8, disposables = [], _iterator8 = (0, _createForOfIteratorHelper2.default)(clientEdgeQueries);
              try {
                for (_iterator8.s(); !(_step8 = _iterator8.n()).done; ) {
                  var query = _step8.value;
                  disposables.push(QueryResource.retain(query));
                }
              } catch (err) {
                _iterator8.e(err);
              } finally {
                _iterator8.f();
              }
              return function() {
                for (var _i = 0, _disposables = disposables; _i < _disposables.length; _i++) {
                  _disposables[_i].dispose();
                }
              };
            }
          }), [ environment, clientEdgeQueries ]);
        }
        if (function(state) {
          return "bailout" !== state.kind && ("singular" === state.kind ? state.snapshot.isMissingData : state.snapshots.some((function(s) {
            return s.isMissingData;
          })));
        }(state)) {
          var suspendingLiveResolvers = function(state) {
            if ("bailout" === state.kind) return null;
            var _state$snapshot$missi2;
            if ("singular" === state.kind) return null !== (_state$snapshot$missi2 = state.snapshot.missingLiveResolverFields) && void 0 !== _state$snapshot$missi2 ? _state$snapshot$missi2 : null;
            var _step3, missingFields = null, _iterator3 = (0, _createForOfIteratorHelper2.default)(state.snapshots);
            try {
              for (_iterator3.s(); !(_step3 = _iterator3.n()).done; ) {
                var snapshot = _step3.value;
                if (snapshot.missingLiveResolverFields) {
                  var _missingFields;
                  missingFields = null !== (_missingFields = missingFields) && void 0 !== _missingFields ? _missingFields : [];
                  var _step4, _iterator4 = (0, _createForOfIteratorHelper2.default)(snapshot.missingLiveResolverFields);
                  try {
                    for (_iterator4.s(); !(_step4 = _iterator4.n()).done; ) {
                      var edge = _step4.value;
                      missingFields.push(edge);
                    }
                  } catch (err) {
                    _iterator4.e(err);
                  } finally {
                    _iterator4.f();
                  }
                }
              }
            } catch (err) {
              _iterator3.e(err);
            } finally {
              _iterator3.f();
            }
            return missingFields;
          }(state);
          if (null != suspendingLiveResolvers && suspendingLiveResolvers.length > 0) throw Promise.all(suspendingLiveResolvers.map((function(_ref) {
            var liveStateID = _ref.liveStateID;
            return environment.getStore().getLiveResolverPromise(liveStateID);
          })));
          if (RelayFeatureFlags.ENABLE_RELAY_OPERATION_TRACKER_SUSPENSE || environment !== previousEnvironment || !committedFragmentSelectorRef.current || !areEqualSelectors(committedFragmentSelectorRef.current, fragmentSelector)) {
            null == fragmentSelector && invariant(!1);
            var fragmentOwner = "PluralReaderSelector" === fragmentSelector.kind ? fragmentSelector.selectors[0].owner : fragmentSelector.owner, pendingOperationsResult = getPendingOperationsForFragment(environment, fragmentNode, fragmentOwner);
            if (pendingOperationsResult) throw pendingOperationsResult.promise;
          }
        }
        !function(environment, state) {
          if ("singular" === state.kind) handlePotentialSnapshotErrors(environment, state.snapshot.errorResponseFields); else if ("plural" === state.kind) {
            var _step5, _iterator5 = (0, _createForOfIteratorHelper2.default)(state.snapshots);
            try {
              for (_iterator5.s(); !(_step5 = _iterator5.n()).done; ) {
                var snapshot = _step5.value;
                handlePotentialSnapshotErrors(environment, snapshot.errorResponseFields);
              }
            } catch (err) {
              _iterator5.e(err);
            } finally {
              _iterator5.f();
            }
          }
        }(environment, state);
        var data, hasPendingStateChanges = useRef(!1);
        if (useEffect((function() {
          var currentState = subscribedState, updates = handleMissedUpdates(environment, subscribedState);
          if (null !== updates) {
            var didMissUpdates = updates[0], updatedState = updates[1];
            didMissUpdates && setState(updatedState), currentState = updatedState;
          }
          return function(environment, state, setState, hasPendingStateChanges) {
            if ("bailout" === state.kind) return function() {};
            if ("singular" === state.kind) {
              var disposable = environment.subscribe(state.snapshot, (function(latestSnapshot) {
                setState((function(prevState) {
                  if ("singular" !== prevState.kind || prevState.snapshot.selector !== latestSnapshot.selector) {
                    var updates = handleMissedUpdates(environment, prevState);
                    if (null != updates) {
                      var dataChanged = updates[0], nextState = updates[1];
                      return environment.__log({
                        name: "useFragment.subscription.missedUpdates",
                        hasDataChanges: dataChanged
                      }), hasPendingStateChanges.current = dataChanged, dataChanged ? nextState : prevState;
                    }
                    return prevState;
                  }
                  return hasPendingStateChanges.current = !0, {
                    kind: "singular",
                    snapshot: latestSnapshot,
                    epoch: environment.getStore().getEpoch()
                  };
                }));
              }));
              return function() {
                disposable.dispose();
              };
            }
            var disposables = state.snapshots.map((function(snapshot, index) {
              return environment.subscribe(snapshot, (function(latestSnapshot) {
                setState((function(prevState) {
                  var _prevState$snapshots$;
                  if ("plural" !== prevState.kind || (null === (_prevState$snapshots$ = prevState.snapshots[index]) || void 0 === _prevState$snapshots$ ? void 0 : _prevState$snapshots$.selector) !== latestSnapshot.selector) {
                    var updates = handleMissedUpdates(environment, prevState);
                    if (null != updates) {
                      var dataChanged = updates[0], nextState = updates[1];
                      return environment.__log({
                        name: "useFragment.subscription.missedUpdates",
                        hasDataChanges: dataChanged
                      }), hasPendingStateChanges.current = hasPendingStateChanges.current || dataChanged, 
                      dataChanged ? nextState : prevState;
                    }
                    return prevState;
                  }
                  var updated = (0, _toConsumableArray2.default)(prevState.snapshots);
                  return updated[index] = latestSnapshot, hasPendingStateChanges.current = !0, {
                    kind: "plural",
                    snapshots: updated,
                    epoch: environment.getStore().getEpoch()
                  };
                }));
              }));
            }));
            return function() {
              var _step6, _iterator6 = (0, _createForOfIteratorHelper2.default)(disposables);
              try {
                for (_iterator6.s(); !(_step6 = _iterator6.n()).done; ) _step6.value.dispose();
              } catch (err) {
                _iterator6.e(err);
              } finally {
                _iterator6.f();
              }
            };
          }(environment, currentState, setState, hasPendingStateChanges);
        }), [ environment, subscribedState ]), hasPendingStateChanges.current) {
          var updates = handleMissedUpdates(environment, state);
          if (null != updates) {
            var hasStateUpdates = updates[0], updatedState = updates[1];
            hasStateUpdates && (setState(updatedState), state = updatedState);
          }
          hasPendingStateChanges.current = !1;
        }
        if (isPlural) {
          var fragmentRefIsNullish = null == fragmentRef;
          data = useMemo((function() {
            return "bailout" === state.kind ? fragmentRefIsNullish ? null : [] : ("plural" !== state.kind && invariant(!1), 
            state.snapshots.map((function(s) {
              return s.data;
            })));
          }), [ state, fragmentRefIsNullish ]);
        } else "bailout" === state.kind ? data = null : ("singular" !== state.kind && invariant(!1), 
        data = state.snapshot.data);
        return RelayFeatureFlags.LOG_MISSING_RECORDS_IN_PROD && null != fragmentRef && (void 0 === data || Array.isArray(data) && data.length > 0 && data.every((function(d) {
          return void 0 === d;
        }))), data;
      };
    },
    5605: (module, __unused_webpack_exports, __webpack_require__) => {
      "use strict";
      var _interopRequireDefault = __webpack_require__(3404).default, _objectSpread2 = _interopRequireDefault(__webpack_require__(9004)), _createForOfIteratorHelper2 = _interopRequireDefault(__webpack_require__(8220)), _toConsumableArray2 = _interopRequireDefault(__webpack_require__(6616)), getQueryResourceForEnvironment = __webpack_require__(7973).getQueryResourceForEnvironment, useRelayEnvironment = __webpack_require__(5461), invariant = __webpack_require__(1235), _require2 = __webpack_require__(7130), useEffect = (_require2.useDebugValue, 
      _require2.useEffect), useMemo = _require2.useMemo, useRef = _require2.useRef, useState = _require2.useState, _require3 = __webpack_require__(402), _require3$__internal = _require3.__internal, fetchQueryInternal = _require3$__internal.fetchQuery, getPromiseForActiveRequest = _require3$__internal.getPromiseForActiveRequest, RelayFeatureFlags = _require3.RelayFeatureFlags, areEqualSelectors = _require3.areEqualSelectors, createOperationDescriptor = _require3.createOperationDescriptor, getPendingOperationsForFragment = _require3.getPendingOperationsForFragment, getSelector = _require3.getSelector, getVariablesFromFragment = _require3.getVariablesFromFragment, handlePotentialSnapshotErrors = _require3.handlePotentialSnapshotErrors, recycleNodesInto = _require3.recycleNodesInto;
      __webpack_require__(3349);
      function handleMissedUpdates(environment, state) {
        if ("bailout" === state.kind) return null;
        var currentEpoch = environment.getStore().getEpoch();
        if (currentEpoch === state.epoch) return null;
        if ("singular" === state.kind) {
          var currentSnapshot = environment.lookup(state.snapshot.selector), updatedData = recycleNodesInto(state.snapshot.data, currentSnapshot.data), updatedCurrentSnapshot = {
            data: updatedData,
            isMissingData: currentSnapshot.isMissingData,
            missingClientEdges: currentSnapshot.missingClientEdges,
            missingLiveResolverFields: currentSnapshot.missingLiveResolverFields,
            seenRecords: currentSnapshot.seenRecords,
            selector: currentSnapshot.selector,
            errorResponseFields: currentSnapshot.errorResponseFields
          };
          return [ updatedData !== state.snapshot.data, {
            kind: "singular",
            snapshot: updatedCurrentSnapshot,
            epoch: currentEpoch,
            selector: state.selector,
            environment: state.environment
          } ];
        }
        for (var didMissUpdates = !1, currentSnapshots = [], index = 0; index < state.snapshots.length; index++) {
          var snapshot = state.snapshots[index], _currentSnapshot = environment.lookup(snapshot.selector), _updatedData = recycleNodesInto(snapshot.data, _currentSnapshot.data), _updatedCurrentSnapshot = {
            data: _updatedData,
            isMissingData: _currentSnapshot.isMissingData,
            missingClientEdges: _currentSnapshot.missingClientEdges,
            missingLiveResolverFields: _currentSnapshot.missingLiveResolverFields,
            seenRecords: _currentSnapshot.seenRecords,
            selector: _currentSnapshot.selector,
            errorResponseFields: _currentSnapshot.errorResponseFields
          };
          _updatedData !== snapshot.data && (didMissUpdates = !0), currentSnapshots.push(_updatedCurrentSnapshot);
        }
        return currentSnapshots.length !== state.snapshots.length && invariant(!1), [ didMissUpdates, {
          kind: "plural",
          snapshots: currentSnapshots,
          epoch: currentEpoch,
          selector: state.selector,
          environment: state.environment
        } ];
      }
      function handleMissingClientEdge(environment, parentFragmentNode, parentFragmentRef, missingClientEdgeRequestInfo, queryOptions) {
        var originalVariables = getVariablesFromFragment(parentFragmentNode, parentFragmentRef), variables = (0, 
        _objectSpread2.default)((0, _objectSpread2.default)({}, originalVariables), {}, {
          id: missingClientEdgeRequestInfo.clientEdgeDestinationID
        }), queryOperationDescriptor = createOperationDescriptor(missingClientEdgeRequestInfo.request, variables, null == queryOptions ? void 0 : queryOptions.networkCacheConfig);
        return [ getQueryResourceForEnvironment(environment).prepare(queryOperationDescriptor, fetchQueryInternal(environment, queryOperationDescriptor), null == queryOptions ? void 0 : queryOptions.fetchPolicy), getPromiseForActiveRequest(environment, queryOperationDescriptor.request) ];
      }
      function subscribeToSnapshot(environment, state, setState) {
        if ("bailout" === state.kind) return function() {};
        if ("singular" === state.kind) {
          var disposable = environment.subscribe(state.snapshot, (function(latestSnapshot) {
            setState((function(prevState) {
              var nextState = null;
              if ("singular" !== prevState.kind || prevState.snapshot.selector !== latestSnapshot.selector || prevState.environment !== environment) {
                var updates = handleMissedUpdates(prevState.environment, prevState);
                if (null != updates) {
                  var dataChanged = updates[0], updatedState = updates[1];
                  environment.__log({
                    name: "useFragment.subscription.missedUpdates",
                    hasDataChanges: dataChanged
                  }), nextState = dataChanged ? updatedState : prevState;
                } else nextState = prevState;
              } else nextState = {
                kind: "singular",
                snapshot: latestSnapshot,
                epoch: environment.getStore().getEpoch(),
                selector: state.selector,
                environment: state.environment
              };
              return nextState;
            }));
          }));
          return function() {
            disposable.dispose();
          };
        }
        var disposables = state.snapshots.map((function(snapshot, index) {
          return environment.subscribe(snapshot, (function(latestSnapshot) {
            setState((function(prevState) {
              var _prevState$snapshots$, nextState = null;
              if ("plural" !== prevState.kind || (null === (_prevState$snapshots$ = prevState.snapshots[index]) || void 0 === _prevState$snapshots$ ? void 0 : _prevState$snapshots$.selector) !== latestSnapshot.selector || prevState.environment !== environment) {
                var updates = handleMissedUpdates(prevState.environment, prevState);
                if (null != updates) {
                  var dataChanged = updates[0], updatedState = updates[1];
                  environment.__log({
                    name: "useFragment.subscription.missedUpdates",
                    hasDataChanges: dataChanged
                  }), nextState = dataChanged ? updatedState : prevState;
                } else nextState = prevState;
              } else {
                var updated = (0, _toConsumableArray2.default)(prevState.snapshots);
                updated[index] = latestSnapshot, nextState = {
                  kind: "plural",
                  snapshots: updated,
                  epoch: environment.getStore().getEpoch(),
                  selector: state.selector,
                  environment: state.environment
                };
              }
              return nextState;
            }));
          }));
        }));
        return function() {
          var _step6, _iterator6 = (0, _createForOfIteratorHelper2.default)(disposables);
          try {
            for (_iterator6.s(); !(_step6 = _iterator6.n()).done; ) {
              _step6.value.dispose();
            }
          } catch (err) {
            _iterator6.e(err);
          } finally {
            _iterator6.f();
          }
        };
      }
      function getFragmentState(environment, fragmentSelector) {
        return null == fragmentSelector ? {
          kind: "bailout",
          environment
        } : "PluralReaderSelector" === fragmentSelector.kind ? {
          kind: "plural",
          snapshots: fragmentSelector.selectors.map((function(s) {
            return environment.lookup(s);
          })),
          epoch: environment.getStore().getEpoch(),
          selector: fragmentSelector,
          environment
        } : {
          kind: "singular",
          snapshot: environment.lookup(fragmentSelector),
          epoch: environment.getStore().getEpoch(),
          selector: fragmentSelector,
          environment
        };
      }
      module.exports = function(fragmentNode, fragmentRef, hookDisplayName, queryOptions) {
        var _fragmentNode$metadat, _fragmentNode$metadat2, fragmentSelector = useMemo((function() {
          return getSelector(fragmentNode, fragmentRef);
        }), [ fragmentNode, fragmentRef ]), isPlural = !0 === (null == fragmentNode || null === (_fragmentNode$metadat = fragmentNode.metadata) || void 0 === _fragmentNode$metadat ? void 0 : _fragmentNode$metadat.plural);
        isPlural ? null == fragmentRef || Array.isArray(fragmentRef) || invariant(!1) : Array.isArray(fragmentRef) && invariant(!1), 
        null == fragmentRef || isPlural && Array.isArray(fragmentRef) && 0 === fragmentRef.length || null != fragmentSelector || invariant(!1);
        var environment = useRelayEnvironment(), _useState = useState((function() {
          return getFragmentState(environment, fragmentSelector);
        })), _state = _useState[0], setState = _useState[1], state = _state, previousEnvironment = state.environment;
        if (!areEqualSelectors(fragmentSelector, state.selector) || environment !== state.environment) {
          var newState = getFragmentState(environment, fragmentSelector);
          setState(newState), state = newState;
        }
        var committedFragmentSelectorRef = useRef(!1);
        if (useEffect((function() {
          committedFragmentSelectorRef.current = fragmentSelector;
        }), [ fragmentSelector ]), !0 === (null === (_fragmentNode$metadat2 = fragmentNode.metadata) || void 0 === _fragmentNode$metadat2 ? void 0 : _fragmentNode$metadat2.hasClientEdges)) {
          var _useMemo = useMemo((function() {
            var clientEdgeQueries, missingClientEdges = function(state) {
              if ("bailout" === state.kind) return null;
              var _state$snapshot$missi;
              if ("singular" === state.kind) return null !== (_state$snapshot$missi = state.snapshot.missingClientEdges) && void 0 !== _state$snapshot$missi ? _state$snapshot$missi : null;
              var _step, edges = null, _iterator = (0, _createForOfIteratorHelper2.default)(state.snapshots);
              try {
                for (_iterator.s(); !(_step = _iterator.n()).done; ) {
                  var snapshot = _step.value;
                  if (snapshot.missingClientEdges) {
                    var _edges;
                    edges = null !== (_edges = edges) && void 0 !== _edges ? _edges : [];
                    var _step2, _iterator2 = (0, _createForOfIteratorHelper2.default)(snapshot.missingClientEdges);
                    try {
                      for (_iterator2.s(); !(_step2 = _iterator2.n()).done; ) {
                        var edge = _step2.value;
                        edges.push(edge);
                      }
                    } catch (err) {
                      _iterator2.e(err);
                    } finally {
                      _iterator2.f();
                    }
                  }
                }
              } catch (err) {
                _iterator.e(err);
              } finally {
                _iterator.f();
              }
              return edges;
            }(state), activeRequestPromises = [];
            if (null != missingClientEdges && missingClientEdges.length) {
              clientEdgeQueries = [];
              var _step7, _iterator7 = (0, _createForOfIteratorHelper2.default)(missingClientEdges);
              try {
                for (_iterator7.s(); !(_step7 = _iterator7.n()).done; ) {
                  var edge = _step7.value, _handleMissingClientE = handleMissingClientEdge(environment, fragmentNode, fragmentRef, edge, queryOptions), queryResult = _handleMissingClientE[0], requestPromise = _handleMissingClientE[1];
                  clientEdgeQueries.push(queryResult), null != requestPromise && activeRequestPromises.push(requestPromise);
                }
              } catch (err) {
                _iterator7.e(err);
              } finally {
                _iterator7.f();
              }
            }
            return [ clientEdgeQueries, activeRequestPromises ];
          }), [ state, environment, fragmentNode, fragmentRef, queryOptions ]), clientEdgeQueries = _useMemo[0], activeRequestPromises = _useMemo[1];
          if (activeRequestPromises.length) throw Promise.all(activeRequestPromises);
          useEffect((function() {
            var QueryResource = getQueryResourceForEnvironment(environment);
            if (null != clientEdgeQueries && clientEdgeQueries.length) {
              var _step8, disposables = [], _iterator8 = (0, _createForOfIteratorHelper2.default)(clientEdgeQueries);
              try {
                for (_iterator8.s(); !(_step8 = _iterator8.n()).done; ) {
                  var query = _step8.value;
                  disposables.push(QueryResource.retain(query));
                }
              } catch (err) {
                _iterator8.e(err);
              } finally {
                _iterator8.f();
              }
              return function() {
                for (var _i = 0, _disposables = disposables; _i < _disposables.length; _i++) {
                  _disposables[_i].dispose();
                }
              };
            }
          }), [ environment, clientEdgeQueries ]);
        }
        if (function(state) {
          return "bailout" !== state.kind && ("singular" === state.kind ? state.snapshot.isMissingData : state.snapshots.some((function(s) {
            return s.isMissingData;
          })));
        }(state)) {
          var suspendingLiveResolvers = function(state) {
            if ("bailout" === state.kind) return null;
            var _state$snapshot$missi2;
            if ("singular" === state.kind) return null !== (_state$snapshot$missi2 = state.snapshot.missingLiveResolverFields) && void 0 !== _state$snapshot$missi2 ? _state$snapshot$missi2 : null;
            var _step3, missingFields = null, _iterator3 = (0, _createForOfIteratorHelper2.default)(state.snapshots);
            try {
              for (_iterator3.s(); !(_step3 = _iterator3.n()).done; ) {
                var snapshot = _step3.value;
                if (snapshot.missingLiveResolverFields) {
                  var _missingFields;
                  missingFields = null !== (_missingFields = missingFields) && void 0 !== _missingFields ? _missingFields : [];
                  var _step4, _iterator4 = (0, _createForOfIteratorHelper2.default)(snapshot.missingLiveResolverFields);
                  try {
                    for (_iterator4.s(); !(_step4 = _iterator4.n()).done; ) {
                      var edge = _step4.value;
                      missingFields.push(edge);
                    }
                  } catch (err) {
                    _iterator4.e(err);
                  } finally {
                    _iterator4.f();
                  }
                }
              }
            } catch (err) {
              _iterator3.e(err);
            } finally {
              _iterator3.f();
            }
            return missingFields;
          }(state);
          if (null != suspendingLiveResolvers && suspendingLiveResolvers.length > 0) throw Promise.all(suspendingLiveResolvers.map((function(_ref) {
            var liveStateID = _ref.liveStateID;
            return environment.getStore().getLiveResolverPromise(liveStateID);
          })));
          if (RelayFeatureFlags.ENABLE_RELAY_OPERATION_TRACKER_SUSPENSE || environment !== previousEnvironment || !committedFragmentSelectorRef.current || !areEqualSelectors(committedFragmentSelectorRef.current, fragmentSelector)) {
            null == fragmentSelector && invariant(!1);
            var fragmentOwner = "PluralReaderSelector" === fragmentSelector.kind ? fragmentSelector.selectors[0].owner : fragmentSelector.owner, pendingOperationsResult = getPendingOperationsForFragment(environment, fragmentNode, fragmentOwner);
            if (pendingOperationsResult) throw pendingOperationsResult.promise;
          }
        }
        !function(environment, state) {
          if ("singular" === state.kind) handlePotentialSnapshotErrors(environment, state.snapshot.errorResponseFields); else if ("plural" === state.kind) {
            var _step5, _iterator5 = (0, _createForOfIteratorHelper2.default)(state.snapshots);
            try {
              for (_iterator5.s(); !(_step5 = _iterator5.n()).done; ) {
                var snapshot = _step5.value;
                handlePotentialSnapshotErrors(environment, snapshot.errorResponseFields);
              }
            } catch (err) {
              _iterator5.e(err);
            } finally {
              _iterator5.f();
            }
          }
        }(environment, state);
        var data, storeSubscriptionRef = useRef(null);
        if (useEffect((function() {
          var storeSubscription = storeSubscriptionRef.current;
          if (null != storeSubscription) {
            if (state.environment === storeSubscription.environment && state.selector === storeSubscription.selector) return;
            storeSubscription.dispose();
          }
          if ("bailout" !== state.kind) {
            var stateForSubscription = state, updates = handleMissedUpdates(state.environment, state);
            if (null !== updates) {
              var didMissUpdates = updates[0], updatedState = updates[1];
              if (didMissUpdates) return void setState(updatedState);
              stateForSubscription = updatedState;
            }
            var dispose = subscribeToSnapshot(state.environment, stateForSubscription, setState);
            storeSubscriptionRef.current = {
              dispose,
              selector: state.selector,
              environment: state.environment
            };
          }
        }), [ state ]), useEffect((function() {
          if (null == storeSubscriptionRef.current && "bailout" !== state.kind) {
            var dispose = subscribeToSnapshot(state.environment, state, setState);
            storeSubscriptionRef.current = {
              dispose,
              selector: state.selector,
              environment: state.environment
            };
          }
          return function() {
            var _storeSubscriptionRef;
            null === (_storeSubscriptionRef = storeSubscriptionRef.current) || void 0 === _storeSubscriptionRef || _storeSubscriptionRef.dispose(), 
            storeSubscriptionRef.current = null;
          };
        }), []), isPlural) {
          var fragmentRefIsNullish = null == fragmentRef;
          data = useMemo((function() {
            return "bailout" === state.kind ? fragmentRefIsNullish ? null : [] : ("plural" !== state.kind && invariant(!1), 
            state.snapshots.map((function(s) {
              return s.data;
            })));
          }), [ state, fragmentRefIsNullish ]);
        } else "bailout" === state.kind ? data = null : ("singular" !== state.kind && invariant(!1), 
        data = state.snapshot.data);
        return RelayFeatureFlags.LOG_MISSING_RECORDS_IN_PROD && null != fragmentRef && (void 0 === data || Array.isArray(data) && data.length > 0 && data.every((function(d) {
          return void 0 === d;
        }))), data;
      };
    },
    3452: (module, __unused_webpack_exports, __webpack_require__) => {
      "use strict";
      var _require = __webpack_require__(7130), useEffect = _require.useEffect, useRef = _require.useRef;
      module.exports = function() {
        var isMountedRef = useRef(!0);
        return useEffect((function() {
          return isMountedRef.current = !0, function() {
            isMountedRef.current = !1;
          };
        }), []), isMountedRef;
      };
    },
    304: (module, __unused_webpack_exports, __webpack_require__) => {
      "use strict";
      var useRelayEnvironment = __webpack_require__(5461), invariant = __webpack_require__(1235), React = __webpack_require__(7130), _require = __webpack_require__(402), getObservableForActiveRequest = _require.__internal.getObservableForActiveRequest, getSelector = _require.getSelector, useEffect = React.useEffect, useState = React.useState, useMemo = React.useMemo;
      module.exports = function(fragmentNode, fragmentRef) {
        var environment = useRelayEnvironment(), observable = useMemo((function() {
          var selector = getSelector(fragmentNode, fragmentRef);
          return null == selector ? null : ("SingularReaderSelector" !== selector.kind && invariant(!1), 
          getObservableForActiveRequest(environment, selector.owner));
        }), [ environment, fragmentNode, fragmentRef ]), _useState = useState(null != observable), isActive = _useState[0], setIsActive = _useState[1];
        return useEffect((function() {
          var subscription;
          if (setIsActive(null != observable), null != observable) {
            var onCompleteOrError = function() {
              setIsActive(!1);
            };
            subscription = observable.subscribe({
              complete: onCompleteOrError,
              error: onCompleteOrError
            });
          }
          return function() {
            subscription && subscription.unsubscribe();
          };
        }), [ observable ]), isActive;
      };
    },
    7455: (module, __unused_webpack_exports, __webpack_require__) => {
      "use strict";
      var useLazyLoadQueryNode = __webpack_require__(4574), useMemoOperationDescriptor = __webpack_require__(6386), useRelayEnvironment = __webpack_require__(5461), fetchQuery = __webpack_require__(402).__internal.fetchQuery;
      module.exports = function(gqlQuery, variables, options) {
        var environment = useRelayEnvironment(), query = useMemoOperationDescriptor(gqlQuery, variables, options && options.networkCacheConfig ? options.networkCacheConfig : {
          force: !0
        });
        return useLazyLoadQueryNode({
          componentDisplayName: "useLazyLoadQuery()",
          fetchKey: null == options ? void 0 : options.fetchKey,
          fetchObservable: fetchQuery(environment, query),
          fetchPolicy: null == options ? void 0 : options.fetchPolicy,
          query,
          renderPolicy: null == options ? void 0 : options.UNSTABLE_renderPolicy
        });
      };
    },
    4574: (module, __unused_webpack_exports, __webpack_require__) => {
      "use strict";
      var ProfilerContext = __webpack_require__(717), _require = __webpack_require__(7973), getQueryCacheIdentifier = _require.getQueryCacheIdentifier, getQueryResourceForEnvironment = _require.getQueryResourceForEnvironment, useFetchTrackingRef = __webpack_require__(7216), useFragmentInternal = __webpack_require__(6926), useRelayEnvironment = __webpack_require__(5461), React = __webpack_require__(7130), useContext = React.useContext, useEffect = React.useEffect, useState = React.useState, useRef = React.useRef;
      module.exports = function(_ref) {
        var query = _ref.query, componentDisplayName = _ref.componentDisplayName, fetchObservable = _ref.fetchObservable, fetchPolicy = _ref.fetchPolicy, fetchKey = _ref.fetchKey, renderPolicy = _ref.renderPolicy, environment = useRelayEnvironment(), profilerContext = useContext(ProfilerContext), QueryResource = getQueryResourceForEnvironment(environment), _useState = useState(0), forceUpdateKey = _useState[0], forceUpdate = _useState[1], _useFetchTrackingRef = useFetchTrackingRef(), startFetch = _useFetchTrackingRef.startFetch, completeFetch = _useFetchTrackingRef.completeFetch, cacheBreaker = "".concat(forceUpdateKey, "-").concat(null != fetchKey ? fetchKey : ""), cacheIdentifier = getQueryCacheIdentifier(environment, query, fetchPolicy, renderPolicy, cacheBreaker), preparedQueryResult = profilerContext.wrapPrepareQueryResource((function() {
          return QueryResource.prepareWithIdentifier(cacheIdentifier, query, fetchObservable, fetchPolicy, renderPolicy, {
            start: startFetch,
            complete: completeFetch,
            error: completeFetch
          }, profilerContext);
        })), maybeHiddenOrFastRefresh = useRef(!1);
        useEffect((function() {
          return function() {
            maybeHiddenOrFastRefresh.current = !0;
          };
        }), []), useEffect((function() {
          if (!0 === maybeHiddenOrFastRefresh.current) return maybeHiddenOrFastRefresh.current = !1, 
          void forceUpdate((function(n) {
            return n + 1;
          }));
          var disposable = QueryResource.retain(preparedQueryResult, profilerContext);
          return function() {
            disposable.dispose();
          };
        }), [ environment, cacheIdentifier ]), useEffect((function() {
          QueryResource.releaseTemporaryRetain(preparedQueryResult);
        }));
        var fragmentNode = preparedQueryResult.fragmentNode, fragmentRef = preparedQueryResult.fragmentRef;
        return useFragmentInternal(fragmentNode, fragmentRef, componentDisplayName);
      };
    },
    9466: (module, __unused_webpack_exports, __webpack_require__) => {
      "use strict";
      var _objectSpread2 = (0, __webpack_require__(3404).default)(__webpack_require__(9004)), getConnectionState = __webpack_require__(4524), useFetchTrackingRef = __webpack_require__(7216), useIsMountedRef = __webpack_require__(3452), useIsOperationNodeActive = __webpack_require__(304), useLoadMoreFunction_EXPERIMENTAL = __webpack_require__(9036), useRelayEnvironment = __webpack_require__(5461), invariant = __webpack_require__(1235), _require = __webpack_require__(7130), useCallback = _require.useCallback, useEffect = _require.useEffect, useState = _require.useState, _require2 = __webpack_require__(402), fetchQuery = _require2.__internal.fetchQuery, RelayFeatureFlags = _require2.RelayFeatureFlags, createOperationDescriptor = _require2.createOperationDescriptor, getPaginationVariables = _require2.getPaginationVariables, getRefetchMetadata = _require2.getRefetchMetadata, getSelector = _require2.getSelector;
      __webpack_require__(3349);
      module.exports = function(args) {
        return RelayFeatureFlags.ENABLE_ACTIVITY_COMPATIBILITY ? useLoadMoreFunction_EXPERIMENTAL(args) : function(args) {
          var direction = args.direction, fragmentNode = args.fragmentNode, fragmentRef = args.fragmentRef, fragmentIdentifier = args.fragmentIdentifier, fragmentData = args.fragmentData, connectionPathInFragmentData = args.connectionPathInFragmentData, paginationRequest = args.paginationRequest, paginationMetadata = args.paginationMetadata, componentDisplayName = args.componentDisplayName, observer = args.observer, onReset = args.onReset, environment = useRelayEnvironment(), _useFetchTrackingRef = useFetchTrackingRef(), isFetchingRef = _useFetchTrackingRef.isFetchingRef, startFetch = _useFetchTrackingRef.startFetch, disposeFetch = _useFetchTrackingRef.disposeFetch, completeFetch = _useFetchTrackingRef.completeFetch, identifierInfo = getRefetchMetadata(fragmentNode, componentDisplayName).identifierInfo, identifierValue = null != (null == identifierInfo ? void 0 : identifierInfo.identifierField) && null != fragmentData && "object" == typeof fragmentData ? fragmentData[identifierInfo.identifierField] : null, isMountedRef = useIsMountedRef(), _useState = useState(environment), mirroredEnvironment = _useState[0], setMirroredEnvironment = _useState[1], _useState2 = useState(fragmentIdentifier), mirroredFragmentIdentifier = _useState2[0], setMirroredFragmentIdentifier = _useState2[1], isParentQueryActive = useIsOperationNodeActive(fragmentNode, fragmentRef);
          environment === mirroredEnvironment && fragmentIdentifier === mirroredFragmentIdentifier || (disposeFetch(), 
          onReset(), setMirroredEnvironment(environment), setMirroredFragmentIdentifier(fragmentIdentifier));
          var _getConnectionState = getConnectionState(direction, fragmentNode, fragmentData, connectionPathInFragmentData), cursor = _getConnectionState.cursor, hasMore = _getConnectionState.hasMore;
          return useEffect((function() {
            return function() {
              disposeFetch();
            };
          }), [ disposeFetch ]), [ useCallback((function(count, options) {
            var onComplete = null == options ? void 0 : options.onComplete;
            if (!0 !== isMountedRef.current) return {
              dispose: function() {}
            };
            var fragmentSelector = getSelector(fragmentNode, fragmentRef);
            if (!0 === isFetchingRef.current || null == fragmentData || isParentQueryActive) return onComplete && onComplete(null), 
            {
              dispose: function() {}
            };
            (null == fragmentSelector || "PluralReaderSelector" === fragmentSelector.kind) && invariant(!1);
            var parentVariables = fragmentSelector.owner.variables, fragmentVariables = fragmentSelector.variables, extraVariables = null == options ? void 0 : options.UNSTABLE_extraVariables, baseVariables = (0, 
            _objectSpread2.default)((0, _objectSpread2.default)({}, parentVariables), fragmentVariables), paginationVariables = getPaginationVariables(direction, count, cursor, baseVariables, (0, 
            _objectSpread2.default)({}, extraVariables), paginationMetadata);
            null != identifierInfo && (paginationVariables[identifierInfo.identifierQueryVariableName] = identifierValue);
            var paginationQuery = createOperationDescriptor(paginationRequest, paginationVariables, {
              force: !0
            });
            return fetchQuery(environment, paginationQuery).subscribe((0, _objectSpread2.default)((0, 
            _objectSpread2.default)({}, observer), {}, {
              start: function(subscription) {
                startFetch(subscription), observer.start && observer.start(subscription);
              },
              complete: function() {
                completeFetch(), observer.complete && observer.complete(), onComplete && onComplete(null);
              },
              error: function(_error) {
                completeFetch(), observer.error && observer.error(_error), onComplete && onComplete(_error);
              }
            })), {
              dispose: disposeFetch
            };
          }), [ environment, identifierValue, direction, cursor, startFetch, disposeFetch, completeFetch, isFetchingRef, isParentQueryActive, fragmentData, fragmentNode.name, fragmentRef, componentDisplayName ]), hasMore, disposeFetch ];
        }(args);
      };
    },
    9036: (module, __unused_webpack_exports, __webpack_require__) => {
      "use strict";
      var _objectSpread2 = (0, __webpack_require__(3404).default)(__webpack_require__(9004)), getConnectionState = __webpack_require__(4524), useIsMountedRef = __webpack_require__(3452), useIsOperationNodeActive = __webpack_require__(304), useRelayEnvironment = __webpack_require__(5461), invariant = __webpack_require__(1235), _require = __webpack_require__(7130), useCallback = _require.useCallback, useRef = _require.useRef, useState = _require.useState, _require2 = __webpack_require__(402), fetchQuery = _require2.__internal.fetchQuery, createOperationDescriptor = _require2.createOperationDescriptor, getPaginationVariables = _require2.getPaginationVariables, getRefetchMetadata = _require2.getRefetchMetadata, getSelector = _require2.getSelector;
      __webpack_require__(3349);
      module.exports = function(args) {
        var direction = args.direction, fragmentNode = args.fragmentNode, fragmentRef = args.fragmentRef, fragmentIdentifier = args.fragmentIdentifier, fragmentData = args.fragmentData, connectionPathInFragmentData = args.connectionPathInFragmentData, paginationRequest = args.paginationRequest, paginationMetadata = args.paginationMetadata, componentDisplayName = args.componentDisplayName, observer = args.observer, onReset = args.onReset, environment = useRelayEnvironment(), identifierInfo = getRefetchMetadata(fragmentNode, componentDisplayName).identifierInfo, identifierValue = null != (null == identifierInfo ? void 0 : identifierInfo.identifierField) && null != fragmentData && "object" == typeof fragmentData ? fragmentData[identifierInfo.identifierField] : null, fetchStatusRef = useRef({
          kind: "none"
        }), _useState = useState(environment), mirroredEnvironment = _useState[0], setMirroredEnvironment = _useState[1], _useState2 = useState(fragmentIdentifier), mirroredFragmentIdentifier = _useState2[0], setMirroredFragmentIdentifier = _useState2[1], isParentQueryActive = useIsOperationNodeActive(fragmentNode, fragmentRef), forceDisposeFn = useCallback((function() {
          "fetching" === fetchStatusRef.current.kind && fetchStatusRef.current.subscription.unsubscribe(), 
          fetchStatusRef.current = {
            kind: "none"
          };
        }), []);
        (environment !== mirroredEnvironment || fragmentIdentifier !== mirroredFragmentIdentifier) && (forceDisposeFn(), 
        onReset(), setMirroredEnvironment(environment), setMirroredFragmentIdentifier(fragmentIdentifier));
        var _getConnectionState = getConnectionState(direction, fragmentNode, fragmentData, connectionPathInFragmentData), cursor = _getConnectionState.cursor, hasMore = _getConnectionState.hasMore, isMountedRef = useIsMountedRef();
        return [ useCallback((function(count, options) {
          var onComplete = null == options ? void 0 : options.onComplete;
          if (!0 !== isMountedRef.current) return {
            dispose: function() {}
          };
          var fragmentSelector = getSelector(fragmentNode, fragmentRef);
          if ("fetching" === fetchStatusRef.current.kind || null == fragmentData || isParentQueryActive) return onComplete && onComplete(null), 
          {
            dispose: function() {}
          };
          (null == fragmentSelector || "PluralReaderSelector" === fragmentSelector.kind) && invariant(!1);
          var parentVariables = fragmentSelector.owner.variables, fragmentVariables = fragmentSelector.variables, extraVariables = null == options ? void 0 : options.UNSTABLE_extraVariables, baseVariables = (0, 
          _objectSpread2.default)((0, _objectSpread2.default)({}, parentVariables), fragmentVariables), paginationVariables = getPaginationVariables(direction, count, cursor, baseVariables, (0, 
          _objectSpread2.default)({}, extraVariables), paginationMetadata);
          null != identifierInfo && (paginationVariables[identifierInfo.identifierQueryVariableName] = identifierValue);
          var paginationQuery = createOperationDescriptor(paginationRequest, paginationVariables, {
            force: !0
          });
          return fetchQuery(environment, paginationQuery).subscribe((0, _objectSpread2.default)((0, 
          _objectSpread2.default)({}, observer), {}, {
            start: function(subscription) {
              fetchStatusRef.current = {
                kind: "fetching",
                subscription
              }, observer.start && observer.start(subscription);
            },
            complete: function() {
              fetchStatusRef.current = {
                kind: "none"
              }, observer.complete && observer.complete(), onComplete && onComplete(null);
            },
            error: function(_error) {
              fetchStatusRef.current = {
                kind: "none"
              }, observer.complete && observer.complete(), onComplete && onComplete(_error);
            }
          })), {
            dispose: function() {}
          };
        }), [ environment, identifierValue, direction, cursor, isParentQueryActive, fragmentData, fragmentNode.name, fragmentRef, componentDisplayName ]), hasMore, forceDisposeFn ];
      };
    },
    6386: (module, __unused_webpack_exports, __webpack_require__) => {
      "use strict";
      var useMemoVariables = __webpack_require__(8214), React = __webpack_require__(7130), _require = __webpack_require__(402), createOperationDescriptor = _require.createOperationDescriptor, getRequest = _require.getRequest, useMemo = React.useMemo;
      module.exports = function(gqlQuery, variables, cacheConfig) {
        var memoVariables = useMemoVariables(variables), memoCacheConfig = useMemoVariables(cacheConfig || {});
        return useMemo((function() {
          return createOperationDescriptor(getRequest(gqlQuery), memoVariables, memoCacheConfig);
        }), [ gqlQuery, memoVariables, memoCacheConfig ]);
      };
    },
    8214: (module, __unused_webpack_exports, __webpack_require__) => {
      "use strict";
      var areEqual = __webpack_require__(1345), useState = __webpack_require__(7130).useState;
      module.exports = function(variables) {
        var _useState = useState(variables), mirroredVariables = _useState[0], setMirroredVariables = _useState[1];
        return areEqual(variables, mirroredVariables) ? mirroredVariables : (setMirroredVariables(variables), 
        variables);
      };
    },
    8590: (module, __unused_webpack_exports, __webpack_require__) => {
      "use strict";
      var _objectSpread2 = (0, __webpack_require__(3404).default)(__webpack_require__(9004)), useIsMountedRef = __webpack_require__(3452), useRelayEnvironment = __webpack_require__(5461), React = __webpack_require__(7130), defaultCommitMutation = __webpack_require__(402).commitMutation, useState = React.useState, useEffect = React.useEffect, useRef = React.useRef, useCallback = React.useCallback;
      module.exports = function(mutation) {
        var commitMutationFn = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : defaultCommitMutation, environment = useRelayEnvironment(), isMountedRef = useIsMountedRef(), environmentRef = useRef(environment), mutationRef = useRef(mutation), inFlightMutationsRef = useRef(new Set), _useState = useState(!1), isMutationInFlight = _useState[0], setMutationInFlight = _useState[1], cleanup = useCallback((function(disposable) {
          environmentRef.current === environment && mutationRef.current === mutation && (inFlightMutationsRef.current.delete(disposable), 
          isMountedRef.current && setMutationInFlight(inFlightMutationsRef.current.size > 0));
        }), [ environment, isMountedRef, mutation ]);
        return useEffect((function() {
          environmentRef.current === environment && mutationRef.current === mutation || (inFlightMutationsRef.current = new Set, 
          isMountedRef.current && setMutationInFlight(!1), environmentRef.current = environment, 
          mutationRef.current = mutation);
        }), [ environment, isMountedRef, mutation ]), [ useCallback((function(config) {
          isMountedRef.current && setMutationInFlight(!0);
          var disposable = commitMutationFn(environment, (0, _objectSpread2.default)((0, _objectSpread2.default)({}, config), {}, {
            mutation,
            onCompleted: function(response, errors) {
              var _config$onCompleted;
              cleanup(disposable), null === (_config$onCompleted = config.onCompleted) || void 0 === _config$onCompleted || _config$onCompleted.call(config, response, errors);
            },
            onError: function(error) {
              var _config$onError;
              cleanup(disposable), null === (_config$onError = config.onError) || void 0 === _config$onError || _config$onError.call(config, error);
            },
            onUnsubscribe: function() {
              var _config$onUnsubscribe;
              cleanup(disposable), null === (_config$onUnsubscribe = config.onUnsubscribe) || void 0 === _config$onUnsubscribe || _config$onUnsubscribe.call(config);
            },
            onNext: function() {
              var _config$onNext;
              null === (_config$onNext = config.onNext) || void 0 === _config$onNext || _config$onNext.call(config);
            }
          }));
          return inFlightMutationsRef.current.add(disposable), disposable;
        }), [ cleanup, commitMutationFn, environment, isMountedRef, mutation ]), isMutationInFlight ];
      };
    },
    8847: (module, __unused_webpack_exports, __webpack_require__) => {
      "use strict";
      var _objectSpread2 = (0, __webpack_require__(3404).default)(__webpack_require__(9004)), useLoadMoreFunction = __webpack_require__(9466), useRefetchableFragmentInternal = __webpack_require__(1882), useRelayEnvironment = __webpack_require__(5461), useStaticFragmentNodeWarning = __webpack_require__(8253), _require = __webpack_require__(7130), useCallback = _require.useCallback, useState = (_require.useDebugValue, 
      _require.useState), _require2 = __webpack_require__(402), getFragment = _require2.getFragment, getFragmentIdentifier = _require2.getFragmentIdentifier, getPaginationMetadata = _require2.getPaginationMetadata;
      function useLoadMore(args) {
        var environment = useRelayEnvironment(), _useState = useState(!1), isLoadingMore = _useState[0], reallySetIsLoadingMore = _useState[1], setIsLoadingMore = function(value) {
          var _environment$getSched, schedule = null === (_environment$getSched = environment.getScheduler()) || void 0 === _environment$getSched ? void 0 : _environment$getSched.schedule;
          schedule ? schedule((function() {
            reallySetIsLoadingMore(value);
          })) : reallySetIsLoadingMore(value);
        }, observer = {
          start: function() {
            return setIsLoadingMore(!0);
          },
          complete: function() {
            return setIsLoadingMore(!1);
          },
          error: function() {
            return setIsLoadingMore(!1);
          }
        }, _useLoadMoreFunction = useLoadMoreFunction((0, _objectSpread2.default)((0, _objectSpread2.default)({}, args), {}, {
          observer,
          onReset: function() {
            return setIsLoadingMore(!1);
          }
        }));
        return [ _useLoadMoreFunction[0], _useLoadMoreFunction[1], isLoadingMore, _useLoadMoreFunction[2] ];
      }
      module.exports = function(fragmentInput, parentFragmentRef) {
        var fragmentNode = getFragment(fragmentInput);
        useStaticFragmentNodeWarning(fragmentNode, "first argument of usePaginationFragment()");
        var _getPaginationMetadat = getPaginationMetadata(fragmentNode, "usePaginationFragment()"), connectionPathInFragmentData = _getPaginationMetadat.connectionPathInFragmentData, paginationRequest = _getPaginationMetadat.paginationRequest, paginationMetadata = _getPaginationMetadat.paginationMetadata, _useRefetchableFragme = useRefetchableFragmentInternal(fragmentNode, parentFragmentRef, "usePaginationFragment()"), fragmentData = _useRefetchableFragme.fragmentData, fragmentRef = _useRefetchableFragme.fragmentRef, refetch = _useRefetchableFragme.refetch, fragmentIdentifier = getFragmentIdentifier(fragmentNode, fragmentRef), _useLoadMore = useLoadMore({
          componentDisplayName: "usePaginationFragment()",
          connectionPathInFragmentData,
          direction: "backward",
          fragmentData,
          fragmentIdentifier,
          fragmentNode,
          fragmentRef,
          paginationMetadata,
          paginationRequest
        }), loadPrevious = _useLoadMore[0], hasPrevious = _useLoadMore[1], isLoadingPrevious = _useLoadMore[2], disposeFetchPrevious = _useLoadMore[3], _useLoadMore2 = useLoadMore({
          componentDisplayName: "usePaginationFragment()",
          connectionPathInFragmentData,
          direction: "forward",
          fragmentData,
          fragmentIdentifier,
          fragmentNode,
          fragmentRef,
          paginationMetadata,
          paginationRequest
        }), loadNext = _useLoadMore2[0], hasNext = _useLoadMore2[1], isLoadingNext = _useLoadMore2[2], disposeFetchNext = _useLoadMore2[3];
        return {
          data: fragmentData,
          loadNext,
          loadPrevious,
          hasNext,
          hasPrevious,
          isLoadingNext,
          isLoadingPrevious,
          refetch: useCallback((function(variables, options) {
            return disposeFetchNext(), disposeFetchPrevious(), refetch(variables, (0, _objectSpread2.default)((0, 
            _objectSpread2.default)({}, options), {}, {
              __environment: void 0
            }));
          }), [ disposeFetchNext, disposeFetchPrevious, refetch ])
        };
      };
    },
    5212: (module, __unused_webpack_exports, __webpack_require__) => {
      "use strict";
      var useLazyLoadQueryNode = __webpack_require__(4574), useMemoOperationDescriptor = __webpack_require__(6386), useRelayEnvironment = __webpack_require__(5461), invariant = __webpack_require__(1235), _require2$__internal = (__webpack_require__(7130).useDebugValue, 
      __webpack_require__(402).__internal), fetchQueryDeduped = _require2$__internal.fetchQueryDeduped, fetchQuery = _require2$__internal.fetchQuery;
      __webpack_require__(3349);
      module.exports = function(gqlQuery, preloadedQuery, options) {
        var useLazyLoadQueryNodeParams, environment = useRelayEnvironment(), fetchKey = preloadedQuery.fetchKey, fetchPolicy = preloadedQuery.fetchPolicy, source = preloadedQuery.source, variables = preloadedQuery.variables, networkCacheConfig = preloadedQuery.networkCacheConfig, operation = useMemoOperationDescriptor(gqlQuery, variables, networkCacheConfig);
        if ("PreloadedQuery_DEPRECATED" === preloadedQuery.kind) operation.request.node.params.name !== preloadedQuery.name && invariant(!1), 
        useLazyLoadQueryNodeParams = {
          componentDisplayName: "usePreloadedQuery()",
          fetchKey,
          fetchObservable: fetchQueryDeduped(environment, operation.request.identifier, (function() {
            return environment === preloadedQuery.environment && null != source ? environment.executeWithSource({
              operation,
              source
            }) : environment.execute({
              operation
            });
          })),
          fetchPolicy,
          query: operation,
          renderPolicy: null == options ? void 0 : options.UNSTABLE_renderPolicy
        }; else {
          var fallbackFetchObservable = fetchQuery(environment, operation);
          useLazyLoadQueryNodeParams = {
            componentDisplayName: "usePreloadedQuery()",
            fetchObservable: null != source && environment === preloadedQuery.environment ? source.ifEmpty(fallbackFetchObservable) : (preloadedQuery.environment, 
            fallbackFetchObservable),
            fetchKey,
            fetchPolicy,
            query: operation,
            renderPolicy: null == options ? void 0 : options.UNSTABLE_renderPolicy
          };
        }
        return useLazyLoadQueryNode(useLazyLoadQueryNodeParams);
      };
    },
    4120: (module, __unused_webpack_exports, __webpack_require__) => {
      "use strict";
      var _createForOfIteratorHelper2 = (0, __webpack_require__(3404).default)(__webpack_require__(8220)), loadQuery = __webpack_require__(2741).loadQuery, useIsMountedRef = __webpack_require__(3452), useQueryLoader_EXPERIMENTAL = __webpack_require__(2385), useRelayEnvironment = __webpack_require__(5461), _require2 = __webpack_require__(7130), useCallback = _require2.useCallback, useEffect = _require2.useEffect, useRef = _require2.useRef, useState = _require2.useState, _require3 = __webpack_require__(402), RelayFeatureFlags = _require3.RelayFeatureFlags, getRequest = _require3.getRequest, initialNullQueryReferenceState = {
        kind: "NullQueryReference"
      };
      function requestIsLiveQuery(preloadableRequest) {
        return "PreloadableConcreteRequest" === preloadableRequest.kind ? void 0 !== preloadableRequest.params.metadata.live : void 0 !== getRequest(preloadableRequest).params.metadata.live;
      }
      module.exports = function(preloadableRequest, initialQueryReference) {
        return RelayFeatureFlags.ENABLE_ACTIVITY_COMPATIBILITY ? useQueryLoader_EXPERIMENTAL(preloadableRequest, initialQueryReference) : function(preloadableRequest, initialQueryReference) {
          var initialQueryReferenceInternal = null != initialQueryReference ? initialQueryReference : initialNullQueryReferenceState, environment = useRelayEnvironment(), isMountedRef = useIsMountedRef(), undisposedQueryReferencesRef = useRef(new Set([ initialQueryReferenceInternal ])), _useState = useState((function() {
            return initialQueryReferenceInternal;
          })), queryReference = _useState[0], setQueryReference = _useState[1], _useState2 = useState((function() {
            return initialQueryReferenceInternal;
          })), previousInitialQueryReference = _useState2[0], setPreviousInitialQueryReference = _useState2[1];
          initialQueryReferenceInternal !== previousInitialQueryReference && (undisposedQueryReferencesRef.current.add(initialQueryReferenceInternal), 
          setPreviousInitialQueryReference(initialQueryReferenceInternal), setQueryReference(initialQueryReferenceInternal));
          var disposeQuery = useCallback((function() {
            isMountedRef.current && (undisposedQueryReferencesRef.current.add(initialNullQueryReferenceState), 
            setQueryReference(initialNullQueryReferenceState));
          }), [ isMountedRef ]), queryLoaderCallback = useCallback((function(variables, options) {
            var mergedOptions = null != options && options.hasOwnProperty("__environment") ? {
              fetchPolicy: options.fetchPolicy,
              networkCacheConfig: options.networkCacheConfig,
              __nameForWarning: options.__nameForWarning
            } : options;
            if (isMountedRef.current) {
              var _options$__environmen, updatedQueryReference = loadQuery(null !== (_options$__environmen = null == options ? void 0 : options.__environment) && void 0 !== _options$__environmen ? _options$__environmen : environment, preloadableRequest, variables, mergedOptions);
              undisposedQueryReferencesRef.current.add(updatedQueryReference), setQueryReference(updatedQueryReference);
            }
          }), [ environment, preloadableRequest, setQueryReference, isMountedRef ]), maybeHiddenOrFastRefresh = useRef(!1);
          return useEffect((function() {
            return function() {
              maybeHiddenOrFastRefresh.current = !0;
            };
          }), []), useEffect((function() {
            if (!0 === maybeHiddenOrFastRefresh.current) return maybeHiddenOrFastRefresh.current = !1, 
            void ("NullQueryReference" !== queryReference.kind && queryLoaderCallback(queryReference.variables, {
              fetchPolicy: queryReference.fetchPolicy,
              networkCacheConfig: queryReference.networkCacheConfig
            }));
            var undisposedQueryReferences = undisposedQueryReferencesRef.current;
            if (isMountedRef.current) {
              var _step, _iterator = (0, _createForOfIteratorHelper2.default)(undisposedQueryReferences);
              try {
                for (_iterator.s(); !(_step = _iterator.n()).done; ) {
                  var undisposedQueryReference = _step.value;
                  if (undisposedQueryReference === queryReference) break;
                  undisposedQueryReferences.delete(undisposedQueryReference), "NullQueryReference" !== undisposedQueryReference.kind && (requestIsLiveQuery(preloadableRequest) ? undisposedQueryReference.dispose && undisposedQueryReference.dispose() : undisposedQueryReference.releaseQuery && undisposedQueryReference.releaseQuery());
                }
              } catch (err) {
                _iterator.e(err);
              } finally {
                _iterator.f();
              }
            }
          }), [ queryReference, isMountedRef, queryLoaderCallback, preloadableRequest ]), 
          useEffect((function() {
            return function() {
              var _step2, _iterator2 = (0, _createForOfIteratorHelper2.default)(undisposedQueryReferencesRef.current);
              try {
                for (_iterator2.s(); !(_step2 = _iterator2.n()).done; ) {
                  var undisposedQueryReference = _step2.value;
                  "NullQueryReference" !== undisposedQueryReference.kind && (requestIsLiveQuery(preloadableRequest) ? undisposedQueryReference.dispose && undisposedQueryReference.dispose() : undisposedQueryReference.releaseQuery && undisposedQueryReference.releaseQuery());
                }
              } catch (err) {
                _iterator2.e(err);
              } finally {
                _iterator2.f();
              }
            };
          }), [ preloadableRequest ]), [ "NullQueryReference" === queryReference.kind ? null : queryReference, queryLoaderCallback, disposeQuery ];
        }(preloadableRequest, initialQueryReference);
      };
    },
    2385: (module, __unused_webpack_exports, __webpack_require__) => {
      "use strict";
      var _createForOfIteratorHelper2 = (0, __webpack_require__(3404).default)(__webpack_require__(8220)), loadQuery = __webpack_require__(2741).loadQuery, useIsMountedRef = __webpack_require__(3452), useRelayEnvironment = __webpack_require__(5461), _require2 = __webpack_require__(7130), useCallback = _require2.useCallback, useEffect = _require2.useEffect, useInsertionEffect = _require2.useInsertionEffect, useRef = _require2.useRef, useState = _require2.useState, getRequest = __webpack_require__(402).getRequest, initialNullQueryReferenceState = {
        kind: "NullQueryReference"
      };
      function requestIsLiveQuery(preloadableRequest) {
        return "PreloadableConcreteRequest" === preloadableRequest.kind ? void 0 !== preloadableRequest.params.metadata.live : void 0 !== getRequest(preloadableRequest).params.metadata.live;
      }
      module.exports = function(preloadableRequest, initialQueryReference) {
        var initialQueryReferenceInternal = null != initialQueryReference ? initialQueryReference : initialNullQueryReferenceState, environment = useRelayEnvironment(), isMountedRef = useIsMountedRef(), undisposedQueryReferencesRef = useRef(null);
        null == undisposedQueryReferencesRef.current && (undisposedQueryReferencesRef.current = new Set([ initialQueryReferenceInternal ]));
        var _undisposedQueryRefer, _useState = useState((function() {
          return initialQueryReferenceInternal;
        })), queryReference = _useState[0], setQueryReference = _useState[1], _useState2 = useState((function() {
          return initialQueryReferenceInternal;
        })), previousInitialQueryReference = _useState2[0], setPreviousInitialQueryReference = _useState2[1];
        initialQueryReferenceInternal !== previousInitialQueryReference && (null === (_undisposedQueryRefer = undisposedQueryReferencesRef.current) || void 0 === _undisposedQueryRefer || _undisposedQueryRefer.add(initialQueryReferenceInternal), 
        setPreviousInitialQueryReference(initialQueryReferenceInternal), setQueryReference(initialQueryReferenceInternal));
        var disposeQuery = useCallback((function() {
          var _undisposedQueryRefer2;
          isMountedRef.current && (null === (_undisposedQueryRefer2 = undisposedQueryReferencesRef.current) || void 0 === _undisposedQueryRefer2 || _undisposedQueryRefer2.add(initialNullQueryReferenceState), 
          setQueryReference(initialNullQueryReferenceState));
        }), [ isMountedRef ]), queryLoaderCallback = useCallback((function(variables, options) {
          var _options$__environmen, _undisposedQueryRefer3;
          if (isMountedRef.current) {
            var mergedOptions = null != options && options.hasOwnProperty("__environment") ? {
              fetchPolicy: options.fetchPolicy,
              networkCacheConfig: options.networkCacheConfig,
              __nameForWarning: options.__nameForWarning
            } : options, updatedQueryReference = loadQuery(null !== (_options$__environmen = null == options ? void 0 : options.__environment) && void 0 !== _options$__environmen ? _options$__environmen : environment, preloadableRequest, variables, mergedOptions);
            null === (_undisposedQueryRefer3 = undisposedQueryReferencesRef.current) || void 0 === _undisposedQueryRefer3 || _undisposedQueryRefer3.add(updatedQueryReference), 
            setQueryReference(updatedQueryReference);
          }
        }), [ environment, preloadableRequest, setQueryReference, isMountedRef ]), disposeAllRemainingQueryReferences = useCallback((function(preloadableRequest, currentQueryReference) {
          var _undisposedQueryRefer4, _step, undisposedQueryReferences = null !== (_undisposedQueryRefer4 = undisposedQueryReferencesRef.current) && void 0 !== _undisposedQueryRefer4 ? _undisposedQueryRefer4 : new Set, _iterator = (0, 
          _createForOfIteratorHelper2.default)(undisposedQueryReferences);
          try {
            for (_iterator.s(); !(_step = _iterator.n()).done; ) {
              var undisposedQueryReference = _step.value;
              undisposedQueryReference !== currentQueryReference && ("NullQueryReference" !== undisposedQueryReference.kind && (requestIsLiveQuery(preloadableRequest) ? undisposedQueryReference.dispose && undisposedQueryReference.dispose() : undisposedQueryReference.releaseQuery && undisposedQueryReference.releaseQuery()));
            }
          } catch (err) {
            _iterator.e(err);
          } finally {
            _iterator.f();
          }
        }), []), cleanupTimerRef = useRef(null);
        return useEffect((function() {
          return disposeAllRemainingQueryReferences(preloadableRequest, queryReference), null != cleanupTimerRef.current && (clearTimeout(cleanupTimerRef.current), 
          cleanupTimerRef.current = null), function() {
            cleanupTimerRef.current = setTimeout((function() {
              disposeAllRemainingQueryReferences(preloadableRequest, null);
            }), 3e5);
          };
        }), [ preloadableRequest, queryReference ]), useInsertionEffect((function() {
          return function() {
            cleanupTimerRef.current && clearTimeout(cleanupTimerRef.current), cleanupTimerRef.current = null, 
            disposeAllRemainingQueryReferences(preloadableRequest, null);
          };
        }), [ preloadableRequest ]), [ "NullQueryReference" === queryReference.kind ? null : queryReference, queryLoaderCallback, disposeQuery ];
      };
    },
    3305: (module, __unused_webpack_exports, __webpack_require__) => {
      "use strict";
      var useRefetchableFragmentInternal = __webpack_require__(1882), useStaticFragmentNodeWarning = __webpack_require__(8253), getFragment = (__webpack_require__(7130).useDebugValue, 
      __webpack_require__(402).getFragment);
      module.exports = function(fragmentInput, fragmentRef) {
        var fragmentNode = getFragment(fragmentInput);
        useStaticFragmentNodeWarning(fragmentNode, "first argument of useRefetchableFragment()");
        var _useRefetchableFragme = useRefetchableFragmentInternal(fragmentNode, fragmentRef, "useRefetchableFragment()");
        return [ _useRefetchableFragme.fragmentData, _useRefetchableFragme.refetch ];
      };
    },
    1882: (module, __unused_webpack_exports, __webpack_require__) => {
      "use strict";
      var _objectSpread2 = (0, __webpack_require__(3404).default)(__webpack_require__(9004)), ProfilerContext = __webpack_require__(717), getQueryResourceForEnvironment = __webpack_require__(7973).getQueryResourceForEnvironment, readFragmentInternal = __webpack_require__(4047), useFragmentInternal = __webpack_require__(6926), useIsMountedRef = __webpack_require__(3452), useQueryLoader = __webpack_require__(4120), useRelayEnvironment = __webpack_require__(5461), invariant = __webpack_require__(1235), _require2 = __webpack_require__(7130), useCallback = _require2.useCallback, useContext = _require2.useContext, useReducer = _require2.useReducer, _require3 = __webpack_require__(402), fetchQuery = _require3.__internal.fetchQuery, createOperationDescriptor = _require3.createOperationDescriptor, getFragmentIdentifier = _require3.getFragmentIdentifier, getRefetchMetadata = _require3.getRefetchMetadata, getSelector = _require3.getSelector, getValueAtPath = _require3.getValueAtPath;
      __webpack_require__(3349);
      function reducer(state, action) {
        switch (action.type) {
         case "refetch":
          var _action$refetchEnviro;
          return (0, _objectSpread2.default)((0, _objectSpread2.default)({}, state), {}, {
            fetchPolicy: action.fetchPolicy,
            mirroredEnvironment: null !== (_action$refetchEnviro = action.refetchEnvironment) && void 0 !== _action$refetchEnviro ? _action$refetchEnviro : state.mirroredEnvironment,
            onComplete: action.onComplete,
            refetchEnvironment: action.refetchEnvironment,
            refetchQuery: action.refetchQuery,
            renderPolicy: action.renderPolicy
          });

         case "reset":
          return {
            fetchPolicy: void 0,
            mirroredEnvironment: action.environment,
            mirroredFragmentIdentifier: action.fragmentIdentifier,
            onComplete: void 0,
            refetchQuery: null,
            renderPolicy: void 0
          };

         default:
          throw action.type, new Error("useRefetchableFragmentNode: Unexpected action type");
        }
      }
      module.exports = function(fragmentNode, parentFragmentRef, componentDisplayName) {
        var parentEnvironment = useRelayEnvironment(), _getRefetchMetadata = getRefetchMetadata(fragmentNode, componentDisplayName), refetchableRequest = _getRefetchMetadata.refetchableRequest, fragmentRefPathInResponse = _getRefetchMetadata.fragmentRefPathInResponse, identifierInfo = _getRefetchMetadata.identifierInfo, fragmentIdentifier = getFragmentIdentifier(fragmentNode, parentFragmentRef), _useReducer = useReducer(reducer, {
          fetchPolicy: void 0,
          mirroredEnvironment: parentEnvironment,
          mirroredFragmentIdentifier: fragmentIdentifier,
          onComplete: void 0,
          refetchEnvironment: null,
          refetchQuery: null,
          renderPolicy: void 0
        }), refetchState = _useReducer[0], dispatch = _useReducer[1], fetchPolicy = refetchState.fetchPolicy, mirroredEnvironment = refetchState.mirroredEnvironment, mirroredFragmentIdentifier = refetchState.mirroredFragmentIdentifier, onComplete = refetchState.onComplete, refetchEnvironment = refetchState.refetchEnvironment, refetchQuery = refetchState.refetchQuery, renderPolicy = refetchState.renderPolicy, environment = null != refetchEnvironment ? refetchEnvironment : parentEnvironment, QueryResource = getQueryResourceForEnvironment(environment), profilerContext = useContext(ProfilerContext), shouldReset = environment !== mirroredEnvironment || fragmentIdentifier !== mirroredFragmentIdentifier, _useQueryLoader = useQueryLoader(refetchableRequest), queryRef = _useQueryLoader[0], loadQuery = _useQueryLoader[1], disposeQuery = _useQueryLoader[2], fragmentRef = parentFragmentRef;
        if (shouldReset) dispatch({
          type: "reset",
          environment,
          fragmentIdentifier
        }), disposeQuery(); else if (null != refetchQuery && null != queryRef) {
          0;
          var handleQueryCompleted = function(maybeError) {
            onComplete && onComplete(null != maybeError ? maybeError : null);
          }, fetchObservable = null != queryRef.source ? queryRef.source : fetchQuery(environment, refetchQuery), queryResult = profilerContext.wrapPrepareQueryResource((function() {
            return QueryResource.prepare(refetchQuery, fetchObservable, fetchPolicy, renderPolicy, {
              error: handleQueryCompleted,
              complete: function() {
                handleQueryCompleted();
              }
            }, queryRef.fetchKey, profilerContext);
          })), queryData = readFragmentInternal(environment, queryResult.fragmentNode, queryResult.fragmentRef, componentDisplayName).data;
          null == queryData && invariant(!1), fragmentRef = getValueAtPath(queryData, fragmentRefPathInResponse);
        }
        var fragmentData = useFragmentInternal(fragmentNode, fragmentRef, componentDisplayName), refetch = function(componentDisplayName, dispatch, disposeQuery, fragmentData, fragmentIdentifier, fragmentNode, fragmentRefPathInResponse, identifierInfo, loadQuery, parentFragmentRef, refetchableRequest) {
          var isMountedRef = useIsMountedRef(), identifierValue = null != (null == identifierInfo ? void 0 : identifierInfo.identifierField) && null != fragmentData && "object" == typeof fragmentData ? fragmentData[identifierInfo.identifierField] : null;
          return useCallback((function(providedRefetchVariables, options) {
            if (!0 !== isMountedRef.current) return {
              dispose: function() {}
            };
            var parentVariables, fragmentVariables, refetchEnvironment = null == options ? void 0 : options.__environment, fetchPolicy = null == options ? void 0 : options.fetchPolicy, renderPolicy = null == options ? void 0 : options.UNSTABLE_renderPolicy, onComplete = null == options ? void 0 : options.onComplete, fragmentSelector = getSelector(fragmentNode, parentFragmentRef);
            if (null == fragmentSelector) parentVariables = {}, fragmentVariables = {}; else if ("PluralReaderSelector" === fragmentSelector.kind) {
              var _fragmentSelector$sel, _fragmentSelector$sel2, _fragmentSelector$sel3, _fragmentSelector$sel4;
              parentVariables = null !== (_fragmentSelector$sel = null === (_fragmentSelector$sel2 = fragmentSelector.selectors[0]) || void 0 === _fragmentSelector$sel2 ? void 0 : _fragmentSelector$sel2.owner.variables) && void 0 !== _fragmentSelector$sel ? _fragmentSelector$sel : {}, 
              fragmentVariables = null !== (_fragmentSelector$sel3 = null === (_fragmentSelector$sel4 = fragmentSelector.selectors[0]) || void 0 === _fragmentSelector$sel4 ? void 0 : _fragmentSelector$sel4.variables) && void 0 !== _fragmentSelector$sel3 ? _fragmentSelector$sel3 : {};
            } else parentVariables = fragmentSelector.owner.variables, fragmentVariables = fragmentSelector.variables;
            var refetchVariables = (0, _objectSpread2.default)((0, _objectSpread2.default)((0, 
            _objectSpread2.default)({}, parentVariables), fragmentVariables), providedRefetchVariables);
            null == identifierInfo || providedRefetchVariables.hasOwnProperty(identifierInfo.identifierQueryVariableName) || (refetchVariables[identifierInfo.identifierQueryVariableName] = identifierValue);
            var refetchQuery = createOperationDescriptor(refetchableRequest, refetchVariables, {
              force: !0
            });
            return loadQuery(refetchQuery.request.variables, {
              fetchPolicy,
              __environment: refetchEnvironment,
              __nameForWarning: "refetch"
            }), dispatch({
              type: "refetch",
              fetchPolicy,
              onComplete,
              refetchEnvironment,
              refetchQuery,
              renderPolicy
            }), {
              dispose: disposeQuery
            };
          }), [ fragmentIdentifier, dispatch, disposeQuery, identifierValue, loadQuery ]);
        }(0, dispatch, disposeQuery, fragmentData, fragmentIdentifier, fragmentNode, 0, identifierInfo, loadQuery, parentFragmentRef, refetchableRequest);
        return {
          fragmentData,
          fragmentRef,
          refetch
        };
      };
    },
    5461: (module, __unused_webpack_exports, __webpack_require__) => {
      "use strict";
      var ReactRelayContext = __webpack_require__(3483), invariant = __webpack_require__(1235), useContext = __webpack_require__(7130).useContext;
      module.exports = function() {
        var context = useContext(ReactRelayContext);
        return null == context && invariant(!1), context.environment;
      };
    },
    8253: (module, __unused_webpack_exports, __webpack_require__) => {
      "use strict";
      __webpack_require__(5515), __webpack_require__(3349);
      module.exports = function(fragmentNode, warningContext) {};
    },
    855: (module, __unused_webpack_exports, __webpack_require__) => {
      "use strict";
      var useRelayEnvironment = __webpack_require__(5461), _require = __webpack_require__(7130), useEffect = _require.useEffect, useRef = _require.useRef;
      module.exports = function(dataIDs, callback) {
        var environment = useRelayEnvironment(), disposableRef = useRef(null), stableDataIDs = Array.from(dataIDs).sort().join("");
        return useEffect((function() {
          var store = environment.getStore(), invalidationState = store.lookupInvalidationState(dataIDs), disposable = store.subscribeToInvalidationState(invalidationState, callback);
          return disposableRef.current = disposable, function() {
            return disposable.dispose();
          };
        }), [ stableDataIDs, callback, environment ]), {
          dispose: function() {
            null != disposableRef.current && disposableRef.current.dispose();
          }
        };
      };
    },
    8242: (module, __unused_webpack_exports, __webpack_require__) => {
      "use strict";
      var useRelayEnvironment = __webpack_require__(5461), useEffect = __webpack_require__(7130).useEffect, requestSubscription = __webpack_require__(402).requestSubscription;
      module.exports = function(config, requestSubscriptionFn) {
        var actualRequestSubscription = null != requestSubscriptionFn ? requestSubscriptionFn : requestSubscription, environment = useRelayEnvironment();
        useEffect((function() {
          return actualRequestSubscription(environment, config).dispose;
        }), [ environment, config, actualRequestSubscription ]);
      };
    },
    5515: (module, __unused_webpack_exports, __webpack_require__) => {
      "use strict";
      var useMemo = __webpack_require__(7130).useMemo;
      module.exports = function(init) {
        return useMemo((function() {
          return {
            current: init
          };
        }), []);
      };
    },
    1025: (__unused_webpack_module, exports) => {
      "use strict";
      var l = Symbol.for("react.element"), n = Symbol.for("react.portal"), p = Symbol.for("react.fragment"), q = Symbol.for("react.strict_mode"), r = Symbol.for("react.profiler"), t = Symbol.for("react.provider"), u = Symbol.for("react.context"), v = Symbol.for("react.forward_ref"), w = Symbol.for("react.suspense"), x = Symbol.for("react.memo"), y = Symbol.for("react.lazy"), z = Symbol.iterator;
      var B = {
        isMounted: function() {
          return !1;
        },
        enqueueForceUpdate: function() {},
        enqueueReplaceState: function() {},
        enqueueSetState: function() {}
      }, C = Object.assign, D = {};
      function E(a, b, e) {
        this.props = a, this.context = b, this.refs = D, this.updater = e || B;
      }
      function F() {}
      function G(a, b, e) {
        this.props = a, this.context = b, this.refs = D, this.updater = e || B;
      }
      E.prototype.isReactComponent = {}, E.prototype.setState = function(a, b) {
        if ("object" != typeof a && "function" != typeof a && null != a) throw Error("setState(...): takes an object of state variables to update or a function which returns an object of state variables.");
        this.updater.enqueueSetState(this, a, b, "setState");
      }, E.prototype.forceUpdate = function(a) {
        this.updater.enqueueForceUpdate(this, a, "forceUpdate");
      }, F.prototype = E.prototype;
      var H = G.prototype = new F;
      H.constructor = G, C(H, E.prototype), H.isPureReactComponent = !0;
      var I = Array.isArray, J = Object.prototype.hasOwnProperty, K = {
        current: null
      }, L = {
        key: !0,
        ref: !0,
        __self: !0,
        __source: !0
      };
      function M(a, b, e) {
        var d, c = {}, k = null, h = null;
        if (null != b) for (d in void 0 !== b.ref && (h = b.ref), void 0 !== b.key && (k = "" + b.key), 
        b) J.call(b, d) && !L.hasOwnProperty(d) && (c[d] = b[d]);
        var g = arguments.length - 2;
        if (1 === g) c.children = e; else if (1 < g) {
          for (var f = Array(g), m = 0; m < g; m++) f[m] = arguments[m + 2];
          c.children = f;
        }
        if (a && a.defaultProps) for (d in g = a.defaultProps) void 0 === c[d] && (c[d] = g[d]);
        return {
          $$typeof: l,
          type: a,
          key: k,
          ref: h,
          props: c,
          _owner: K.current
        };
      }
      function O(a) {
        return "object" == typeof a && null !== a && a.$$typeof === l;
      }
      var P = /\/+/g;
      function Q(a, b) {
        return "object" == typeof a && null !== a && null != a.key ? function(a) {
          var b = {
            "=": "=0",
            ":": "=2"
          };
          return "$" + a.replace(/[=:]/g, (function(a) {
            return b[a];
          }));
        }("" + a.key) : b.toString(36);
      }
      function R(a, b, e, d, c) {
        var k = typeof a;
        "undefined" !== k && "boolean" !== k || (a = null);
        var h = !1;
        if (null === a) h = !0; else switch (k) {
         case "string":
         case "number":
          h = !0;
          break;

         case "object":
          switch (a.$$typeof) {
           case l:
           case n:
            h = !0;
          }
        }
        if (h) return c = c(h = a), a = "" === d ? "." + Q(h, 0) : d, I(c) ? (e = "", null != a && (e = a.replace(P, "$&/") + "/"), 
        R(c, b, e, "", (function(a) {
          return a;
        }))) : null != c && (O(c) && (c = function(a, b) {
          return {
            $$typeof: l,
            type: a.type,
            key: b,
            ref: a.ref,
            props: a.props,
            _owner: a._owner
          };
        }(c, e + (!c.key || h && h.key === c.key ? "" : ("" + c.key).replace(P, "$&/") + "/") + a)), 
        b.push(c)), 1;
        if (h = 0, d = "" === d ? "." : d + ":", I(a)) for (var g = 0; g < a.length; g++) {
          var f = d + Q(k = a[g], g);
          h += R(k, b, e, f, c);
        } else if (f = function(a) {
          return null === a || "object" != typeof a ? null : "function" == typeof (a = z && a[z] || a["@@iterator"]) ? a : null;
        }(a), "function" == typeof f) for (a = f.call(a), g = 0; !(k = a.next()).done; ) h += R(k = k.value, b, e, f = d + Q(k, g++), c); else if ("object" === k) throw b = String(a), 
        Error("Objects are not valid as a React child (found: " + ("[object Object]" === b ? "object with keys {" + Object.keys(a).join(", ") + "}" : b) + "). If you meant to render a collection of children, use an array instead.");
        return h;
      }
      function S(a, b, e) {
        if (null == a) return a;
        var d = [], c = 0;
        return R(a, d, "", "", (function(a) {
          return b.call(e, a, c++);
        })), d;
      }
      function T(a) {
        if (-1 === a._status) {
          var b = a._result;
          (b = b()).then((function(b) {
            0 !== a._status && -1 !== a._status || (a._status = 1, a._result = b);
          }), (function(b) {
            0 !== a._status && -1 !== a._status || (a._status = 2, a._result = b);
          })), -1 === a._status && (a._status = 0, a._result = b);
        }
        if (1 === a._status) return a._result.default;
        throw a._result;
      }
      var U = {
        current: null
      }, V = {
        transition: null
      }, W = {
        ReactCurrentDispatcher: U,
        ReactCurrentBatchConfig: V,
        ReactCurrentOwner: K
      };
      exports.Children = {
        map: S,
        forEach: function(a, b, e) {
          S(a, (function() {
            b.apply(this, arguments);
          }), e);
        },
        count: function(a) {
          var b = 0;
          return S(a, (function() {
            b++;
          })), b;
        },
        toArray: function(a) {
          return S(a, (function(a) {
            return a;
          })) || [];
        },
        only: function(a) {
          if (!O(a)) throw Error("React.Children.only expected to receive a single React element child.");
          return a;
        }
      }, exports.Component = E, exports.Fragment = p, exports.Profiler = r, exports.PureComponent = G, 
      exports.StrictMode = q, exports.Suspense = w, exports.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED = W, 
      exports.cloneElement = function(a, b, e) {
        if (null == a) throw Error("React.cloneElement(...): The argument must be a React element, but you passed " + a + ".");
        var d = C({}, a.props), c = a.key, k = a.ref, h = a._owner;
        if (null != b) {
          if (void 0 !== b.ref && (k = b.ref, h = K.current), void 0 !== b.key && (c = "" + b.key), 
          a.type && a.type.defaultProps) var g = a.type.defaultProps;
          for (f in b) J.call(b, f) && !L.hasOwnProperty(f) && (d[f] = void 0 === b[f] && void 0 !== g ? g[f] : b[f]);
        }
        var f = arguments.length - 2;
        if (1 === f) d.children = e; else if (1 < f) {
          g = Array(f);
          for (var m = 0; m < f; m++) g[m] = arguments[m + 2];
          d.children = g;
        }
        return {
          $$typeof: l,
          type: a.type,
          key: c,
          ref: k,
          props: d,
          _owner: h
        };
      }, exports.createContext = function(a) {
        return (a = {
          $$typeof: u,
          _currentValue: a,
          _currentValue2: a,
          _threadCount: 0,
          Provider: null,
          Consumer: null,
          _defaultValue: null,
          _globalName: null
        }).Provider = {
          $$typeof: t,
          _context: a
        }, a.Consumer = a;
      }, exports.createElement = M, exports.createFactory = function(a) {
        var b = M.bind(null, a);
        return b.type = a, b;
      }, exports.createRef = function() {
        return {
          current: null
        };
      }, exports.forwardRef = function(a) {
        return {
          $$typeof: v,
          render: a
        };
      }, exports.isValidElement = O, exports.lazy = function(a) {
        return {
          $$typeof: y,
          _payload: {
            _status: -1,
            _result: a
          },
          _init: T
        };
      }, exports.memo = function(a, b) {
        return {
          $$typeof: x,
          type: a,
          compare: void 0 === b ? null : b
        };
      }, exports.startTransition = function(a) {
        var b = V.transition;
        V.transition = {};
        try {
          a();
        } finally {
          V.transition = b;
        }
      }, exports.unstable_act = function() {
        throw Error("act(...) is not supported in production builds of React.");
      }, exports.useCallback = function(a, b) {
        return U.current.useCallback(a, b);
      }, exports.useContext = function(a) {
        return U.current.useContext(a);
      }, exports.useDebugValue = function() {}, exports.useDeferredValue = function(a) {
        return U.current.useDeferredValue(a);
      }, exports.useEffect = function(a, b) {
        return U.current.useEffect(a, b);
      }, exports.useId = function() {
        return U.current.useId();
      }, exports.useImperativeHandle = function(a, b, e) {
        return U.current.useImperativeHandle(a, b, e);
      }, exports.useInsertionEffect = function(a, b) {
        return U.current.useInsertionEffect(a, b);
      }, exports.useLayoutEffect = function(a, b) {
        return U.current.useLayoutEffect(a, b);
      }, exports.useMemo = function(a, b) {
        return U.current.useMemo(a, b);
      }, exports.useReducer = function(a, b, e) {
        return U.current.useReducer(a, b, e);
      }, exports.useRef = function(a) {
        return U.current.useRef(a);
      }, exports.useState = function(a) {
        return U.current.useState(a);
      }, exports.useSyncExternalStore = function(a, b, e) {
        return U.current.useSyncExternalStore(a, b, e);
      }, exports.useTransition = function() {
        return U.current.useTransition();
      }, exports.version = "18.2.0";
    },
    7130: (module, __unused_webpack_exports, __webpack_require__) => {
      "use strict";
      module.exports = __webpack_require__(1025);
    },
    402: (module, __unused_webpack_exports, __webpack_require__) => {
      module.exports = __webpack_require__(8416);
    },
    9830: (module, __unused_webpack_exports, __webpack_require__) => {
      "use strict";
      var resolverDataInjector = __webpack_require__(4938), observeFragment = __webpack_require__(1467).observeFragment, waitForFragmentData = __webpack_require__(3243).waitForFragmentData;
      module.exports = {
        resolverDataInjector,
        isValueResult: function(input) {
          return !0 === input.ok;
        },
        isErrorResult: function(input) {
          return !1 === input.ok;
        },
        observeFragment,
        waitForFragmentData
      };
    },
    1442: (module, __unused_webpack_exports, __webpack_require__) => {
      "use strict";
      var ConnectionHandler = __webpack_require__(3897), MutationHandlers = __webpack_require__(563), invariant = __webpack_require__(1235);
      module.exports = function(handle) {
        switch (handle) {
         case "connection":
          return ConnectionHandler;

         case "deleteRecord":
          return MutationHandlers.DeleteRecordHandler;

         case "deleteEdge":
          return MutationHandlers.DeleteEdgeHandler;

         case "appendEdge":
          return MutationHandlers.AppendEdgeHandler;

         case "prependEdge":
          return MutationHandlers.PrependEdgeHandler;

         case "appendNode":
          return MutationHandlers.AppendNodeHandler;

         case "prependNode":
          return MutationHandlers.PrependNodeHandler;
        }
        invariant(!1);
      };
    },
    3897: (module, __unused_webpack_exports, __webpack_require__) => {
      "use strict";
      var generateClientID = __webpack_require__(2621).generateClientID, getStableStorageKey = __webpack_require__(6195).getStableStorageKey, getRelayHandleKey = __webpack_require__(4505), ConnectionInterface = __webpack_require__(4048), invariant = __webpack_require__(1235), NEXT_EDGE_INDEX = (__webpack_require__(3349), 
      "__connection_next_edge_index");
      function buildConnectionEdge(store, connection, edge) {
        if (null == edge) return edge;
        var EDGES = ConnectionInterface.get().EDGES, edgeIndex = connection.getValue(NEXT_EDGE_INDEX);
        "number" != typeof edgeIndex && invariant(!1);
        var edgeID = generateClientID(connection.getDataID(), EDGES, edgeIndex), connectionEdge = store.create(edgeID, edge.getType());
        return connectionEdge.copyFieldsFrom(edge), null == connectionEdge.getValue("cursor") && connectionEdge.setValue(null, "cursor"), 
        connection.setValue(edgeIndex + 1, NEXT_EDGE_INDEX), connectionEdge;
      }
      function mergeEdges(sourceEdges, targetEdges, nodeIDs) {
        for (var NODE = ConnectionInterface.get().NODE, ii = 0; ii < sourceEdges.length; ii++) {
          var edge = sourceEdges[ii];
          if (edge) {
            var node = edge.getLinkedRecord(NODE), nodeID = node && node.getDataID();
            if (nodeID) {
              if (nodeIDs.has(nodeID)) continue;
              nodeIDs.add(nodeID);
            }
            targetEdges.push(edge);
          }
        }
      }
      module.exports = {
        buildConnectionEdge,
        createEdge: function(store, record, node, edgeType) {
          var NODE = ConnectionInterface.get().NODE, edgeID = generateClientID(record.getDataID(), node.getDataID()), edge = store.get(edgeID);
          return edge || (edge = store.create(edgeID, edgeType)), edge.setLinkedRecord(node, NODE), 
          null == edge.getValue("cursor") && edge.setValue(null, "cursor"), edge;
        },
        deleteNode: function(record, nodeID) {
          var _ConnectionInterface$5 = ConnectionInterface.get(), EDGES = _ConnectionInterface$5.EDGES, NODE = _ConnectionInterface$5.NODE, edges = record.getLinkedRecords(EDGES);
          if (edges) {
            for (var nextEdges, ii = 0; ii < edges.length; ii++) {
              var edge = edges[ii], node = edge && edge.getLinkedRecord(NODE);
              null != node && node.getDataID() === nodeID ? void 0 === nextEdges && (nextEdges = edges.slice(0, ii)) : void 0 !== nextEdges && nextEdges.push(edge);
            }
            void 0 !== nextEdges && record.setLinkedRecords(nextEdges, EDGES);
          }
        },
        getConnection: function(record, key, filters) {
          var handleKey = getRelayHandleKey("connection", key, null);
          return record.getLinkedRecord(handleKey, filters);
        },
        getConnectionID: function(recordID, key, filters) {
          var handleKey = getRelayHandleKey("connection", key, null), storageKey = getStableStorageKey(handleKey, filters);
          return generateClientID(recordID, storageKey);
        },
        insertEdgeAfter: function(record, newEdge, cursor) {
          var _ConnectionInterface$2 = ConnectionInterface.get(), CURSOR = _ConnectionInterface$2.CURSOR, EDGES = _ConnectionInterface$2.EDGES, edges = record.getLinkedRecords(EDGES);
          if (edges) {
            var nextEdges;
            if (null == cursor) nextEdges = edges.concat(newEdge); else {
              nextEdges = [];
              for (var foundCursor = !1, ii = 0; ii < edges.length; ii++) {
                var edge = edges[ii];
                if (nextEdges.push(edge), null != edge) cursor === edge.getValue(CURSOR) && (nextEdges.push(newEdge), 
                foundCursor = !0);
              }
              foundCursor || nextEdges.push(newEdge);
            }
            record.setLinkedRecords(nextEdges, EDGES);
          } else record.setLinkedRecords([ newEdge ], EDGES);
        },
        insertEdgeBefore: function(record, newEdge, cursor) {
          var _ConnectionInterface$4 = ConnectionInterface.get(), CURSOR = _ConnectionInterface$4.CURSOR, EDGES = _ConnectionInterface$4.EDGES, edges = record.getLinkedRecords(EDGES);
          if (edges) {
            var nextEdges;
            if (null == cursor) nextEdges = [ newEdge ].concat(edges); else {
              nextEdges = [];
              for (var foundCursor = !1, ii = 0; ii < edges.length; ii++) {
                var edge = edges[ii];
                if (null != edge) cursor === edge.getValue(CURSOR) && (nextEdges.push(newEdge), 
                foundCursor = !0);
                nextEdges.push(edge);
              }
              foundCursor || nextEdges.unshift(newEdge);
            }
            record.setLinkedRecords(nextEdges, EDGES);
          } else record.setLinkedRecords([ newEdge ], EDGES);
        },
        update: function(store, payload) {
          var record = store.get(payload.dataID);
          if (record) {
            var _ConnectionInterface$ = ConnectionInterface.get(), EDGES = _ConnectionInterface$.EDGES, END_CURSOR = _ConnectionInterface$.END_CURSOR, HAS_NEXT_PAGE = _ConnectionInterface$.HAS_NEXT_PAGE, HAS_PREV_PAGE = _ConnectionInterface$.HAS_PREV_PAGE, PAGE_INFO = _ConnectionInterface$.PAGE_INFO, PAGE_INFO_TYPE = _ConnectionInterface$.PAGE_INFO_TYPE, START_CURSOR = _ConnectionInterface$.START_CURSOR, serverConnection = record.getLinkedRecord(payload.fieldKey), serverPageInfo = serverConnection && serverConnection.getLinkedRecord(PAGE_INFO);
            if (serverConnection) {
              var clientConnectionID = generateClientID(record.getDataID(), payload.handleKey), clientConnectionField = record.getLinkedRecord(payload.handleKey), clientConnection = null != clientConnectionField ? clientConnectionField : store.get(clientConnectionID), clientPageInfo = clientConnection && clientConnection.getLinkedRecord(PAGE_INFO);
              if (clientConnection) {
                null == clientConnectionField && record.setLinkedRecord(clientConnection, payload.handleKey);
                var _connection = clientConnection, _serverEdges = serverConnection.getLinkedRecords(EDGES);
                _serverEdges && (_serverEdges = _serverEdges.map((function(edge) {
                  return buildConnectionEdge(store, _connection, edge);
                })));
                var prevEdges = _connection.getLinkedRecords(EDGES), prevPageInfo = _connection.getLinkedRecord(PAGE_INFO);
                _connection.copyFieldsFrom(serverConnection), prevEdges && _connection.setLinkedRecords(prevEdges, EDGES), 
                prevPageInfo && _connection.setLinkedRecord(prevPageInfo, PAGE_INFO);
                var nextEdges = [], args = payload.args;
                if (prevEdges && _serverEdges) if (null != args.after) {
                  var _clientPageInfo, clientEndCursor = null === (_clientPageInfo = clientPageInfo) || void 0 === _clientPageInfo ? void 0 : _clientPageInfo.getValue(END_CURSOR), serverEndCursor = null == serverPageInfo ? void 0 : serverPageInfo.getValue(END_CURSOR);
                  if (!(clientPageInfo && args.after === clientEndCursor) && !(clientPageInfo && clientEndCursor === serverEndCursor)) return;
                  var nodeIDs = new Set;
                  mergeEdges(prevEdges, nextEdges, nodeIDs), mergeEdges(_serverEdges, nextEdges, nodeIDs);
                } else if (null != args.before) {
                  if (!clientPageInfo || args.before !== clientPageInfo.getValue(START_CURSOR)) return;
                  var _nodeIDs = new Set;
                  mergeEdges(_serverEdges, nextEdges, _nodeIDs), mergeEdges(prevEdges, nextEdges, _nodeIDs);
                } else nextEdges = _serverEdges; else nextEdges = _serverEdges || prevEdges;
                if (null != nextEdges && nextEdges !== prevEdges && _connection.setLinkedRecords(nextEdges, EDGES), 
                clientPageInfo && serverPageInfo) if (null == args.after && null == args.before) clientPageInfo.copyFieldsFrom(serverPageInfo); else if (null != args.before || null == args.after && args.last) {
                  clientPageInfo.setValue(!!serverPageInfo.getValue(HAS_PREV_PAGE), HAS_PREV_PAGE);
                  var startCursor = serverPageInfo.getValue(START_CURSOR);
                  "string" == typeof startCursor && clientPageInfo.setValue(startCursor, START_CURSOR);
                } else if (null != args.after || null == args.before && args.first) {
                  clientPageInfo.setValue(!!serverPageInfo.getValue(HAS_NEXT_PAGE), HAS_NEXT_PAGE);
                  var endCursor = serverPageInfo.getValue(END_CURSOR);
                  "string" == typeof endCursor && clientPageInfo.setValue(endCursor, END_CURSOR);
                }
              } else {
                var connection = store.create(clientConnectionID, serverConnection.getType());
                connection.setValue(0, NEXT_EDGE_INDEX), connection.copyFieldsFrom(serverConnection);
                var serverEdges = serverConnection.getLinkedRecords(EDGES);
                serverEdges && (serverEdges = serverEdges.map((function(edge) {
                  return buildConnectionEdge(store, connection, edge);
                })), connection.setLinkedRecords(serverEdges, EDGES)), record.setLinkedRecord(connection, payload.handleKey), 
                (clientPageInfo = store.create(generateClientID(connection.getDataID(), PAGE_INFO), PAGE_INFO_TYPE)).setValue(!1, HAS_NEXT_PAGE), 
                clientPageInfo.setValue(!1, HAS_PREV_PAGE), clientPageInfo.setValue(null, END_CURSOR), 
                clientPageInfo.setValue(null, START_CURSOR), serverPageInfo && clientPageInfo.copyFieldsFrom(serverPageInfo), 
                connection.setLinkedRecord(clientPageInfo, PAGE_INFO);
              }
            } else record.setValue(null, payload.handleKey);
          }
        }
      };
    },
    4048: module => {
      "use strict";
      var CONNECTION_CALLS = {
        after: !0,
        before: !0,
        find: !0,
        first: !0,
        last: !0,
        surrounds: !0
      }, config = {
        CURSOR: "cursor",
        EDGES: "edges",
        END_CURSOR: "endCursor",
        HAS_NEXT_PAGE: "hasNextPage",
        HAS_PREV_PAGE: "hasPreviousPage",
        NODE: "node",
        PAGE_INFO_TYPE: "PageInfo",
        PAGE_INFO: "pageInfo",
        START_CURSOR: "startCursor"
      }, ConnectionInterface = {
        inject: function(newConfig) {
          config = newConfig;
        },
        get: function() {
          return config;
        },
        isConnectionCall: function(call) {
          return CONNECTION_CALLS.hasOwnProperty(call.name);
        }
      };
      module.exports = ConnectionInterface;
    },
    563: (module, __unused_webpack_exports, __webpack_require__) => {
      "use strict";
      var _createForOfIteratorHelper2 = (0, __webpack_require__(1440).default)(__webpack_require__(2460)), ConnectionHandler = __webpack_require__(3897), ConnectionInterface = __webpack_require__(4048), invariant = __webpack_require__(1235), DeleteRecordHandler = (__webpack_require__(3349), 
      {
        update: function(store, payload) {
          var record = store.get(payload.dataID);
          if (null != record) {
            var idOrIds = record.getValue(payload.fieldKey);
            "string" == typeof idOrIds ? store.delete(idOrIds) : Array.isArray(idOrIds) && idOrIds.forEach((function(id) {
              "string" == typeof id && store.delete(id);
            }));
          }
        }
      }), DeleteEdgeHandler = {
        update: function(store, payload) {
          var record = store.get(payload.dataID);
          if (null != record) {
            var connections = payload.handleArgs.connections;
            null == connections && invariant(!1);
            var idOrIds = record.getValue(payload.fieldKey);
            (Array.isArray(idOrIds) ? idOrIds : [ idOrIds ]).forEach((function(id) {
              if ("string" == typeof id) {
                var _step, _iterator = (0, _createForOfIteratorHelper2.default)(connections);
                try {
                  for (_iterator.s(); !(_step = _iterator.n()).done; ) {
                    var connectionID = _step.value, connection = store.get(connectionID);
                    null != connection && ConnectionHandler.deleteNode(connection, id);
                  }
                } catch (err) {
                  _iterator.e(err);
                } finally {
                  _iterator.f();
                }
              }
            }));
          }
        }
      }, AppendEdgeHandler = {
        update: edgeUpdater(ConnectionHandler.insertEdgeAfter)
      }, PrependEdgeHandler = {
        update: edgeUpdater(ConnectionHandler.insertEdgeBefore)
      }, AppendNodeHandler = {
        update: nodeUpdater(ConnectionHandler.insertEdgeAfter)
      }, PrependNodeHandler = {
        update: nodeUpdater(ConnectionHandler.insertEdgeBefore)
      };
      function edgeUpdater(insertFn) {
        return function(store, payload) {
          var _serverEdges, record = store.get(payload.dataID);
          if (null != record) {
            var singleServerEdge, serverEdges, connections = payload.handleArgs.connections;
            null == connections && invariant(!1);
            try {
              singleServerEdge = record.getLinkedRecord(payload.fieldKey);
            } catch (_unused) {}
            if (!singleServerEdge) try {
              serverEdges = record.getLinkedRecords(payload.fieldKey);
            } catch (_unused2) {}
            if (null != singleServerEdge || null != serverEdges) {
              var _step2, _ConnectionInterface$ = ConnectionInterface.get(), NODE = _ConnectionInterface$.NODE, EDGES = _ConnectionInterface$.EDGES, serverEdgeList = null !== (_serverEdges = serverEdges) && void 0 !== _serverEdges ? _serverEdges : [ singleServerEdge ], _iterator2 = (0, 
              _createForOfIteratorHelper2.default)(serverEdgeList);
              try {
                var _loop = function() {
                  var serverEdge = _step2.value;
                  if (null == serverEdge) return "continue";
                  var serverNode = serverEdge.getLinkedRecord("node");
                  if (!serverNode) return "continue";
                  var _step3, serverNodeId = serverNode.getDataID(), _iterator3 = (0, _createForOfIteratorHelper2.default)(connections);
                  try {
                    for (_iterator3.s(); !(_step3 = _iterator3.n()).done; ) {
                      var connectionID = _step3.value, connection = store.get(connectionID);
                      if (null != connection) if (!(null === (_connection$getLinked = connection.getLinkedRecords(EDGES)) || void 0 === _connection$getLinked ? void 0 : _connection$getLinked.some((function(edge) {
                        var _edge$getLinkedRecord;
                        return (null == edge || null === (_edge$getLinkedRecord = edge.getLinkedRecord(NODE)) || void 0 === _edge$getLinkedRecord ? void 0 : _edge$getLinkedRecord.getDataID()) === serverNodeId;
                      })))) {
                        var clientEdge = ConnectionHandler.buildConnectionEdge(store, connection, serverEdge);
                        null == clientEdge && invariant(!1), insertFn(connection, clientEdge);
                      }
                    }
                  } catch (err) {
                    _iterator3.e(err);
                  } finally {
                    _iterator3.f();
                  }
                };
                for (_iterator2.s(); !(_step2 = _iterator2.n()).done; ) {
                  var _connection$getLinked;
                  _loop();
                }
              } catch (err) {
                _iterator2.e(err);
              } finally {
                _iterator2.f();
              }
            }
          }
        };
      }
      function nodeUpdater(insertFn) {
        return function(store, payload) {
          var _serverNodes, record = store.get(payload.dataID);
          if (null != record) {
            var singleServerNode, serverNodes, _payload$handleArgs = payload.handleArgs, connections = _payload$handleArgs.connections, edgeTypeName = _payload$handleArgs.edgeTypeName;
            null == connections && invariant(!1), null == edgeTypeName && invariant(!1);
            try {
              singleServerNode = record.getLinkedRecord(payload.fieldKey);
            } catch (_unused3) {}
            if (!singleServerNode) try {
              serverNodes = record.getLinkedRecords(payload.fieldKey);
            } catch (_unused4) {}
            if (null != singleServerNode || null != serverNodes) {
              var _step4, _ConnectionInterface$2 = ConnectionInterface.get(), NODE = _ConnectionInterface$2.NODE, EDGES = _ConnectionInterface$2.EDGES, serverNodeList = null !== (_serverNodes = serverNodes) && void 0 !== _serverNodes ? _serverNodes : [ singleServerNode ], _iterator4 = (0, 
              _createForOfIteratorHelper2.default)(serverNodeList);
              try {
                var _loop2 = function() {
                  var serverNode = _step4.value;
                  if (null == serverNode) return "continue";
                  var _step5, serverNodeId = serverNode.getDataID(), _iterator5 = (0, _createForOfIteratorHelper2.default)(connections);
                  try {
                    for (_iterator5.s(); !(_step5 = _iterator5.n()).done; ) {
                      var connectionID = _step5.value, connection = store.get(connectionID);
                      if (null != connection) if (!(null === (_connection$getLinked2 = connection.getLinkedRecords(EDGES)) || void 0 === _connection$getLinked2 ? void 0 : _connection$getLinked2.some((function(edge) {
                        var _edge$getLinkedRecord2;
                        return (null == edge || null === (_edge$getLinkedRecord2 = edge.getLinkedRecord(NODE)) || void 0 === _edge$getLinkedRecord2 ? void 0 : _edge$getLinkedRecord2.getDataID()) === serverNodeId;
                      })))) {
                        var clientEdge = ConnectionHandler.createEdge(store, connection, serverNode, edgeTypeName);
                        null == clientEdge && invariant(!1), insertFn(connection, clientEdge);
                      }
                    }
                  } catch (err) {
                    _iterator5.e(err);
                  } finally {
                    _iterator5.f();
                  }
                };
                for (_iterator4.s(); !(_step4 = _iterator4.n()).done; ) {
                  var _connection$getLinked2;
                  _loop2();
                }
              } catch (err) {
                _iterator4.e(err);
              } finally {
                _iterator4.f();
              }
            }
          }
        };
      }
      module.exports = {
        AppendEdgeHandler,
        DeleteRecordHandler,
        PrependEdgeHandler,
        AppendNodeHandler,
        PrependNodeHandler,
        DeleteEdgeHandler
      };
    },
    8416: (module, __unused_webpack_exports, __webpack_require__) => {
      "use strict";
      var _require = __webpack_require__(9830), isErrorResult = _require.isErrorResult, isValueResult = _require.isValueResult, ConnectionHandler = __webpack_require__(3897), ConnectionInterface = __webpack_require__(4048), MutationHandlers = __webpack_require__(563), RelayDefaultHandlerProvider = __webpack_require__(1442), applyOptimisticMutation = __webpack_require__(7425), commitLocalUpdate = __webpack_require__(677), commitMutation = __webpack_require__(561), RelayDeclarativeMutationConfig = __webpack_require__(4725), RelayNetwork = __webpack_require__(3114), RelayObservable = __webpack_require__(219), RelayQueryResponseCache = __webpack_require__(5580), fetchQuery = __webpack_require__(4170), fetchQuery_DEPRECATED = __webpack_require__(9732), fetchQueryInternal = __webpack_require__(1918), GraphQLTag = __webpack_require__(3892), PreloadableQueryRegistry = __webpack_require__(9460), _require2 = __webpack_require__(2621), generateClientID = _require2.generateClientID, generateUniqueClientID = _require2.generateUniqueClientID, isClientID = _require2.isClientID, createFragmentSpecResolver = __webpack_require__(3529), createRelayContext = __webpack_require__(1123), isRelayModernEnvironment = __webpack_require__(7212), _require3 = __webpack_require__(7678), isSuspenseSentinel = _require3.isSuspenseSentinel, suspenseSentinel = _require3.suspenseSentinel, normalizeResponse = __webpack_require__(2772), readInlineData = __webpack_require__(9595), RelayConcreteVariables = __webpack_require__(7586), RelayModernEnvironment = __webpack_require__(8262), RelayModernOperationDescriptor = __webpack_require__(7133), RelayModernRecord = __webpack_require__(5188), RelayModernSelector = __webpack_require__(7134), RelayModernStore = __webpack_require__(7947), RelayOperationTracker = __webpack_require__(3367), RelayRecordSource = __webpack_require__(6886), RelayStoreUtils = __webpack_require__(6195), ResolverFragments = __webpack_require__(6278), ViewerPattern = __webpack_require__(4127), requestSubscription = __webpack_require__(3059), createPayloadFor3DField = __webpack_require__(3606), deepFreeze = __webpack_require__(7700), getFragmentIdentifier = __webpack_require__(7883), getPaginationMetadata = __webpack_require__(9961), getPaginationVariables = __webpack_require__(2458), getPendingOperationsForFragment = __webpack_require__(966), getRefetchMetadata = __webpack_require__(140), getRelayHandleKey = __webpack_require__(4505), getRequestIdentifier = __webpack_require__(5269), getValueAtPath = __webpack_require__(7065), handlePotentialSnapshotErrors = __webpack_require__(8746).handlePotentialSnapshotErrors, isPromise = __webpack_require__(1965), isScalarAndEqual = __webpack_require__(3275), recycleNodesInto = __webpack_require__(7237), RelayConcreteNode = __webpack_require__(351), RelayDefaultHandleKey = __webpack_require__(1692), RelayError = __webpack_require__(5729), RelayFeatureFlags = __webpack_require__(4309), RelayProfiler = __webpack_require__(2982), RelayReplaySubject = __webpack_require__(1283), _require5 = __webpack_require__(6163), hasCycle = _require5.hasCycle, stableCopy = _require5.stableCopy, withProvidedVariables = __webpack_require__(8569);
      module.exports = {
        Environment: RelayModernEnvironment,
        Network: RelayNetwork,
        Observable: RelayObservable,
        QueryResponseCache: RelayQueryResponseCache,
        RecordSource: RelayRecordSource,
        Record: RelayModernRecord,
        ReplaySubject: RelayReplaySubject,
        Store: RelayModernStore,
        areEqualSelectors: RelayModernSelector.areEqualSelectors,
        createFragmentSpecResolver,
        createNormalizationSelector: RelayModernSelector.createNormalizationSelector,
        createOperationDescriptor: RelayModernOperationDescriptor.createOperationDescriptor,
        createReaderSelector: RelayModernSelector.createReaderSelector,
        createRequestDescriptor: RelayModernOperationDescriptor.createRequestDescriptor,
        getArgumentValues: RelayStoreUtils.getArgumentValues,
        getDataIDsFromFragment: RelayModernSelector.getDataIDsFromFragment,
        getDataIDsFromObject: RelayModernSelector.getDataIDsFromObject,
        getNode: GraphQLTag.getNode,
        getFragment: GraphQLTag.getFragment,
        getInlineDataFragment: GraphQLTag.getInlineDataFragment,
        getModuleComponentKey: RelayStoreUtils.getModuleComponentKey,
        getModuleOperationKey: RelayStoreUtils.getModuleOperationKey,
        getPaginationFragment: GraphQLTag.getPaginationFragment,
        getPluralSelector: RelayModernSelector.getPluralSelector,
        getRefetchableFragment: GraphQLTag.getRefetchableFragment,
        getRequest: GraphQLTag.getRequest,
        getRequestIdentifier,
        getSelector: RelayModernSelector.getSelector,
        getSelectorsFromObject: RelayModernSelector.getSelectorsFromObject,
        getSingularSelector: RelayModernSelector.getSingularSelector,
        getStorageKey: RelayStoreUtils.getStorageKey,
        getVariablesFromFragment: RelayModernSelector.getVariablesFromFragment,
        getVariablesFromObject: RelayModernSelector.getVariablesFromObject,
        getVariablesFromPluralFragment: RelayModernSelector.getVariablesFromPluralFragment,
        getVariablesFromSingularFragment: RelayModernSelector.getVariablesFromSingularFragment,
        handlePotentialSnapshotErrors,
        graphql: GraphQLTag.graphql,
        isErrorResult,
        isValueResult,
        isFragment: GraphQLTag.isFragment,
        isInlineDataFragment: GraphQLTag.isInlineDataFragment,
        isSuspenseSentinel,
        suspenseSentinel,
        isRequest: GraphQLTag.isRequest,
        readInlineData,
        MutationTypes: RelayDeclarativeMutationConfig.MutationTypes,
        RangeOperations: RelayDeclarativeMutationConfig.RangeOperations,
        DefaultHandlerProvider: RelayDefaultHandlerProvider,
        ConnectionHandler,
        MutationHandlers,
        VIEWER_ID: ViewerPattern.VIEWER_ID,
        VIEWER_TYPE: ViewerPattern.VIEWER_TYPE,
        applyOptimisticMutation,
        commitLocalUpdate,
        commitMutation,
        fetchQuery,
        fetchQuery_DEPRECATED,
        isRelayModernEnvironment,
        requestSubscription,
        ConnectionInterface,
        PreloadableQueryRegistry,
        RelayProfiler,
        createPayloadFor3DField,
        RelayConcreteNode,
        RelayError,
        RelayFeatureFlags,
        DEFAULT_HANDLE_KEY: RelayDefaultHandleKey.DEFAULT_HANDLE_KEY,
        FRAGMENTS_KEY: RelayStoreUtils.FRAGMENTS_KEY,
        FRAGMENT_OWNER_KEY: RelayStoreUtils.FRAGMENT_OWNER_KEY,
        ID_KEY: RelayStoreUtils.ID_KEY,
        REF_KEY: RelayStoreUtils.REF_KEY,
        REFS_KEY: RelayStoreUtils.REFS_KEY,
        ROOT_ID: RelayStoreUtils.ROOT_ID,
        ROOT_TYPE: RelayStoreUtils.ROOT_TYPE,
        TYPENAME_KEY: RelayStoreUtils.TYPENAME_KEY,
        deepFreeze,
        generateClientID,
        generateUniqueClientID,
        getRelayHandleKey,
        isClientID,
        isPromise,
        isScalarAndEqual,
        recycleNodesInto,
        stableCopy,
        hasCycle,
        getFragmentIdentifier,
        getRefetchMetadata,
        getPaginationMetadata,
        getPaginationVariables,
        getPendingOperationsForFragment,
        getValueAtPath,
        __internal: {
          ResolverFragments,
          OperationTracker: RelayOperationTracker,
          createRelayContext,
          getOperationVariables: RelayConcreteVariables.getOperationVariables,
          getLocalVariables: RelayConcreteVariables.getLocalVariables,
          fetchQuery: fetchQueryInternal.fetchQuery,
          fetchQueryDeduped: fetchQueryInternal.fetchQueryDeduped,
          getPromiseForActiveRequest: fetchQueryInternal.getPromiseForActiveRequest,
          getObservableForActiveRequest: fetchQueryInternal.getObservableForActiveRequest,
          normalizeResponse,
          withProvidedVariables
        }
      };
    },
    5792: (module, __unused_webpack_exports, __webpack_require__) => {
      "use strict";
      var invariant = __webpack_require__(1235);
      module.exports = {
        assertInternalActorIdentifier: function(actorIdentifier) {
          "INTERNAL_ACTOR_IDENTIFIER_DO_NOT_USE" !== actorIdentifier && invariant(!1);
        },
        getActorIdentifier: function(actorID) {
          return actorID;
        },
        getDefaultActorIdentifier: function() {
          throw new Error("Not Implemented");
        },
        INTERNAL_ACTOR_IDENTIFIER_DO_NOT_USE: "INTERNAL_ACTOR_IDENTIFIER_DO_NOT_USE"
      };
    },
    4946: (module, __unused_webpack_exports, __webpack_require__) => {
      "use strict";
      var getActorIdentifier = __webpack_require__(5792).getActorIdentifier;
      module.exports = {
        ACTOR_IDENTIFIER_FIELD_NAME: "actor_key",
        getActorIdentifierFromPayload: function(payload) {
          if (null != payload && "object" == typeof payload && "string" == typeof payload.actor_key) return getActorIdentifier(payload.actor_key);
        }
      };
    },
    4725: (module, __unused_webpack_exports, __webpack_require__) => {
      "use strict";
      var _createForOfIteratorHelper2 = (0, __webpack_require__(1440).default)(__webpack_require__(2460)), ConnectionHandler = __webpack_require__(3897), MutationTypes = (__webpack_require__(3349), 
      Object.freeze({
        RANGE_ADD: "RANGE_ADD",
        RANGE_DELETE: "RANGE_DELETE",
        NODE_DELETE: "NODE_DELETE"
      })), RangeOperations = Object.freeze({
        APPEND: "append",
        PREPEND: "prepend"
      });
      function getRootField(request) {
        return request.fragment.selections && request.fragment.selections.length > 0 && "LinkedField" === request.fragment.selections[0].kind ? request.fragment.selections[0].name : null;
      }
      module.exports = {
        MutationTypes,
        RangeOperations,
        convert: function(configs, request, optimisticUpdater, updater) {
          var configOptimisticUpdates = optimisticUpdater ? [ optimisticUpdater ] : [], configUpdates = updater ? [ updater ] : [];
          return configs.forEach((function(config) {
            switch (config.type) {
             case "NODE_DELETE":
              var nodeDeleteResult = function(config, request) {
                var deletedIDFieldName = config.deletedIDFieldName, rootField = getRootField(request);
                if (!rootField) return null;
                return function(store, data) {
                  var payload = store.getRootField(rootField);
                  if (payload) {
                    var deleteID = payload.getValue(deletedIDFieldName);
                    (Array.isArray(deleteID) ? deleteID : [ deleteID ]).forEach((function(id) {
                      id && "string" == typeof id && store.delete(id);
                    }));
                  }
                };
              }(config, request);
              nodeDeleteResult && (configOptimisticUpdates.push(nodeDeleteResult), configUpdates.push(nodeDeleteResult));
              break;

             case "RANGE_ADD":
              var rangeAddResult = function(config, request) {
                var parentID = config.parentID, connectionInfo = config.connectionInfo, edgeName = config.edgeName;
                if (!parentID) return null;
                var rootField = getRootField(request);
                if (!connectionInfo || !rootField) return null;
                return function(store, data) {
                  var parent = store.get(parentID);
                  if (parent) {
                    var payload = store.getRootField(rootField);
                    if (payload) {
                      var _step, serverEdge = payload.getLinkedRecord(edgeName), _iterator = (0, _createForOfIteratorHelper2.default)(connectionInfo);
                      try {
                        for (_iterator.s(); !(_step = _iterator.n()).done; ) {
                          var info = _step.value;
                          if (serverEdge) {
                            var connection = ConnectionHandler.getConnection(parent, info.key, info.filters);
                            if (connection) {
                              var clientEdge = ConnectionHandler.buildConnectionEdge(store, connection, serverEdge);
                              if (clientEdge) switch (info.rangeBehavior) {
                               case "append":
                                ConnectionHandler.insertEdgeAfter(connection, clientEdge);
                                break;

                               case "prepend":
                                ConnectionHandler.insertEdgeBefore(connection, clientEdge);
                              }
                            }
                          }
                        }
                      } catch (err) {
                        _iterator.e(err);
                      } finally {
                        _iterator.f();
                      }
                    }
                  }
                };
              }(config, request);
              rangeAddResult && (configOptimisticUpdates.push(rangeAddResult), configUpdates.push(rangeAddResult));
              break;

             case "RANGE_DELETE":
              var rangeDeleteResult = function(config, request) {
                var parentID = config.parentID, connectionKeys = config.connectionKeys, pathToConnection = config.pathToConnection, deletedIDFieldName = config.deletedIDFieldName;
                if (!parentID) return null;
                var rootField = getRootField(request);
                if (!rootField) return null;
                return function(store, data) {
                  if (data) {
                    var deleteIDs = [], deletedIDField = data[rootField];
                    if (deletedIDField && Array.isArray(deletedIDFieldName)) {
                      var _step2, _iterator2 = (0, _createForOfIteratorHelper2.default)(deletedIDFieldName);
                      try {
                        for (_iterator2.s(); !(_step2 = _iterator2.n()).done; ) {
                          var eachField = _step2.value;
                          deletedIDField && "object" == typeof deletedIDField && (deletedIDField = deletedIDField[eachField]);
                        }
                      } catch (err) {
                        _iterator2.e(err);
                      } finally {
                        _iterator2.f();
                      }
                      Array.isArray(deletedIDField) ? deletedIDField.forEach((function(idObject) {
                        idObject && idObject.id && "object" == typeof idObject && "string" == typeof idObject.id && deleteIDs.push(idObject.id);
                      })) : deletedIDField && deletedIDField.id && "string" == typeof deletedIDField.id && deleteIDs.push(deletedIDField.id);
                    } else deletedIDField && "string" == typeof deletedIDFieldName && "object" == typeof deletedIDField && ("string" == typeof (deletedIDField = deletedIDField[deletedIDFieldName]) ? deleteIDs.push(deletedIDField) : Array.isArray(deletedIDField) && deletedIDField.forEach((function(id) {
                      "string" == typeof id && deleteIDs.push(id);
                    })));
                    !function(parentID, connectionKeys, pathToConnection, store, deleteIDs) {
                      var parent = store.get(parentID);
                      if (!parent) return;
                      if (pathToConnection.length < 2) return;
                      for (var recordProxy = parent, i = 1; i < pathToConnection.length - 1; i++) recordProxy && (recordProxy = recordProxy.getLinkedRecord(pathToConnection[i]));
                      if (!connectionKeys || !recordProxy) return;
                      var _step3, _iterator3 = (0, _createForOfIteratorHelper2.default)(connectionKeys);
                      try {
                        var _loop = function() {
                          var key = _step3.value, connection = ConnectionHandler.getConnection(recordProxy, key.key, key.filters);
                          connection && deleteIDs.forEach((function(deleteID) {
                            ConnectionHandler.deleteNode(connection, deleteID);
                          }));
                        };
                        for (_iterator3.s(); !(_step3 = _iterator3.n()).done; ) _loop();
                      } catch (err) {
                        _iterator3.e(err);
                      } finally {
                        _iterator3.f();
                      }
                    }(parentID, connectionKeys, pathToConnection, store, deleteIDs);
                  }
                };
              }(config, request);
              rangeDeleteResult && (configOptimisticUpdates.push(rangeDeleteResult), configUpdates.push(rangeDeleteResult));
            }
          })), {
            optimisticUpdater: function(store, data) {
              configOptimisticUpdates.forEach((function(eachOptimisticUpdater) {
                eachOptimisticUpdater(store, data);
              }));
            },
            updater: function(store, data) {
              configUpdates.forEach((function(eachUpdater) {
                eachUpdater(store, data);
              }));
            }
          };
        }
      };
    },
    5487: (module, __unused_webpack_exports, __webpack_require__) => {
      "use strict";
      var generateClientID = __webpack_require__(2621).generateClientID, getStableStorageKey = __webpack_require__(6195).getStableStorageKey, invariant = __webpack_require__(1235), RelayRecordProxy = function() {
        function RelayRecordProxy(source, mutator, dataID) {
          this._dataID = dataID, this._mutator = mutator, this._source = source;
        }
        var _proto = RelayRecordProxy.prototype;
        return _proto.copyFieldsFrom = function(source) {
          this._mutator.copyFields(source.getDataID(), this._dataID);
        }, _proto.getDataID = function() {
          return this._dataID;
        }, _proto.getType = function() {
          var type = this._mutator.getType(this._dataID);
          return null == type && invariant(!1), type;
        }, _proto.getValue = function(name, args) {
          var storageKey = getStableStorageKey(name, args);
          return this._mutator.getValue(this._dataID, storageKey);
        }, _proto.setValue = function(value, name, args) {
          return isValidLeafValue(value) || invariant(!1), this.setValue__UNSAFE(value, name, args);
        }, _proto.setValue__UNSAFE = function(value, name, args) {
          var storageKey = getStableStorageKey(name, args);
          return this._mutator.setValue(this._dataID, storageKey, value), this;
        }, _proto.getLinkedRecord = function(name, args) {
          var storageKey = getStableStorageKey(name, args), linkedID = this._mutator.getLinkedRecordID(this._dataID, storageKey);
          return null != linkedID ? this._source.get(linkedID) : linkedID;
        }, _proto.setLinkedRecord = function(record, name, args) {
          record instanceof RelayRecordProxy || invariant(!1);
          var storageKey = getStableStorageKey(name, args), linkedID = record.getDataID();
          return this._mutator.setLinkedRecordID(this._dataID, storageKey, linkedID), this;
        }, _proto.getOrCreateLinkedRecord = function(name, typeName, args) {
          var linkedRecord = this.getLinkedRecord(name, args);
          if (!linkedRecord) {
            var _this$_source$get, storageKey = getStableStorageKey(name, args), clientID = generateClientID(this.getDataID(), storageKey);
            linkedRecord = null !== (_this$_source$get = this._source.get(clientID)) && void 0 !== _this$_source$get ? _this$_source$get : this._source.create(clientID, typeName), 
            this.setLinkedRecord(linkedRecord, name, args);
          }
          return linkedRecord;
        }, _proto.getLinkedRecords = function(name, args) {
          var _this = this, storageKey = getStableStorageKey(name, args), linkedIDs = this._mutator.getLinkedRecordIDs(this._dataID, storageKey);
          return null == linkedIDs ? linkedIDs : linkedIDs.map((function(linkedID) {
            return null != linkedID ? _this._source.get(linkedID) : linkedID;
          }));
        }, _proto.setLinkedRecords = function(records, name, args) {
          Array.isArray(records) || invariant(!1);
          var storageKey = getStableStorageKey(name, args), linkedIDs = records.map((function(record) {
            return record && record.getDataID();
          }));
          return this._mutator.setLinkedRecordIDs(this._dataID, storageKey, linkedIDs), this;
        }, _proto.invalidateRecord = function() {
          this._source.markIDForInvalidation(this._dataID);
        }, RelayRecordProxy;
      }();
      function isValidLeafValue(value) {
        return null == value || "object" != typeof value || Array.isArray(value) && value.every(isValidLeafValue);
      }
      module.exports = RelayRecordProxy;
    },
    3551: (module, __unused_webpack_exports, __webpack_require__) => {
      "use strict";
      var RelayModernRecord = __webpack_require__(5188), EXISTENT = __webpack_require__(8337).EXISTENT, invariant = __webpack_require__(1235), RelayRecordSourceMutator = function() {
        function RelayRecordSourceMutator(base, sink) {
          this.__sources = [ sink, base ], this._base = base, this._sink = sink;
        }
        var _proto = RelayRecordSourceMutator.prototype;
        return _proto.unstable_getRawRecordWithChanges = function(dataID) {
          var baseRecord = this._base.get(dataID), sinkRecord = this._sink.get(dataID);
          return void 0 === sinkRecord ? null == baseRecord ? baseRecord : RelayModernRecord.clone(baseRecord) : null === sinkRecord ? null : null != baseRecord ? RelayModernRecord.update(baseRecord, sinkRecord) : RelayModernRecord.clone(sinkRecord);
        }, _proto._getSinkRecord = function(dataID) {
          var sinkRecord = this._sink.get(dataID);
          if (!sinkRecord) {
            var baseRecord = this._base.get(dataID);
            baseRecord || invariant(!1), sinkRecord = RelayModernRecord.create(dataID, RelayModernRecord.getType(baseRecord)), 
            this._sink.set(dataID, sinkRecord);
          }
          return sinkRecord;
        }, _proto.copyFields = function(sourceID, sinkID) {
          var sinkSource = this._sink.get(sourceID), baseSource = this._base.get(sourceID);
          sinkSource || baseSource || invariant(!1);
          var sink = this._getSinkRecord(sinkID);
          baseSource && RelayModernRecord.copyFields(baseSource, sink), sinkSource && RelayModernRecord.copyFields(sinkSource, sink);
        }, _proto.copyFieldsFromRecord = function(record, sinkID) {
          var sink = this._getSinkRecord(sinkID);
          RelayModernRecord.copyFields(record, sink);
        }, _proto.create = function(dataID, typeName) {
          (this._base.getStatus(dataID) === EXISTENT || this._sink.getStatus(dataID) === EXISTENT) && invariant(!1);
          var record = RelayModernRecord.create(dataID, typeName);
          this._sink.set(dataID, record);
        }, _proto.delete = function(dataID) {
          this._sink.delete(dataID);
        }, _proto.getStatus = function(dataID) {
          return this._sink.has(dataID) ? this._sink.getStatus(dataID) : this._base.getStatus(dataID);
        }, _proto.getType = function(dataID) {
          for (var ii = 0; ii < this.__sources.length; ii++) {
            var record = this.__sources[ii].get(dataID);
            if (record) return RelayModernRecord.getType(record);
            if (null === record) return null;
          }
        }, _proto.getValue = function(dataID, storageKey) {
          for (var ii = 0; ii < this.__sources.length; ii++) {
            var record = this.__sources[ii].get(dataID);
            if (record) {
              var value = RelayModernRecord.getValue(record, storageKey);
              if (void 0 !== value) return value;
            } else if (null === record) return null;
          }
        }, _proto.setValue = function(dataID, storageKey, value) {
          var sinkRecord = this._getSinkRecord(dataID);
          RelayModernRecord.setValue(sinkRecord, storageKey, value);
        }, _proto.getLinkedRecordID = function(dataID, storageKey) {
          for (var ii = 0; ii < this.__sources.length; ii++) {
            var record = this.__sources[ii].get(dataID);
            if (record) {
              var linkedID = RelayModernRecord.getLinkedRecordID(record, storageKey);
              if (void 0 !== linkedID) return linkedID;
            } else if (null === record) return null;
          }
        }, _proto.setLinkedRecordID = function(dataID, storageKey, linkedID) {
          var sinkRecord = this._getSinkRecord(dataID);
          RelayModernRecord.setLinkedRecordID(sinkRecord, storageKey, linkedID);
        }, _proto.getLinkedRecordIDs = function(dataID, storageKey) {
          for (var ii = 0; ii < this.__sources.length; ii++) {
            var record = this.__sources[ii].get(dataID);
            if (record) {
              var linkedIDs = RelayModernRecord.getLinkedRecordIDs(record, storageKey);
              if (void 0 !== linkedIDs) return linkedIDs;
            } else if (null === record) return null;
          }
        }, _proto.setLinkedRecordIDs = function(dataID, storageKey, linkedIDs) {
          var sinkRecord = this._getSinkRecord(dataID);
          RelayModernRecord.setLinkedRecordIDs(sinkRecord, storageKey, linkedIDs);
        }, RelayRecordSourceMutator;
      }();
      module.exports = RelayRecordSourceMutator;
    },
    9743: (module, __unused_webpack_exports, __webpack_require__) => {
      "use strict";
      var RelayModernRecord = __webpack_require__(5188), _require = __webpack_require__(8337), EXISTENT = _require.EXISTENT, NONEXISTENT = _require.NONEXISTENT, _require2 = __webpack_require__(6195), ROOT_ID = _require2.ROOT_ID, ROOT_TYPE = _require2.ROOT_TYPE, _readUpdatableFragment = __webpack_require__(2190).readUpdatableFragment, _readUpdatableQuery = __webpack_require__(6199).readUpdatableQuery, RelayRecordProxy = __webpack_require__(5487), invariant = __webpack_require__(1235), RelayRecordSourceProxy = function() {
        function RelayRecordSourceProxy(mutator, getDataID, handlerProvider, missingFieldHandlers) {
          this.__mutator = mutator, this._handlerProvider = handlerProvider || null, this._proxies = {}, 
          this._getDataID = getDataID, this._invalidatedStore = !1, this._idsMarkedForInvalidation = new Set, 
          this._missingFieldHandlers = missingFieldHandlers;
        }
        var _proto = RelayRecordSourceProxy.prototype;
        return _proto.publishSource = function(source, fieldPayloads) {
          var _this = this;
          source.getRecordIDs().forEach((function(dataID) {
            var status = source.getStatus(dataID);
            if (status === EXISTENT) {
              var sourceRecord = source.get(dataID);
              sourceRecord && (_this.__mutator.getStatus(dataID) !== EXISTENT && _this.create(dataID, RelayModernRecord.getType(sourceRecord)), 
              _this.__mutator.copyFieldsFromRecord(sourceRecord, dataID));
            } else status === NONEXISTENT && _this.delete(dataID);
          })), fieldPayloads && fieldPayloads.length && fieldPayloads.forEach((function(fieldPayload) {
            var handler = _this._handlerProvider && _this._handlerProvider(fieldPayload.handle);
            handler || invariant(!1), handler.update(_this, fieldPayload);
          }));
        }, _proto.create = function(dataID, typeName) {
          this.__mutator.create(dataID, typeName), delete this._proxies[dataID];
          var record = this.get(dataID);
          return record || invariant(!1), record;
        }, _proto.delete = function(dataID) {
          dataID === ROOT_ID && invariant(!1), delete this._proxies[dataID], this.__mutator.delete(dataID);
        }, _proto.get = function(dataID) {
          if (!this._proxies.hasOwnProperty(dataID)) {
            var status = this.__mutator.getStatus(dataID);
            this._proxies[dataID] = status === EXISTENT ? new RelayRecordProxy(this, this.__mutator, dataID) : status === NONEXISTENT ? null : void 0;
          }
          return this._proxies[dataID];
        }, _proto.getRoot = function() {
          var root = this.get(ROOT_ID);
          return root || (root = this.create(ROOT_ID, ROOT_TYPE)), root && root.getType() === ROOT_TYPE || invariant(!1), 
          root;
        }, _proto.invalidateStore = function() {
          this._invalidatedStore = !0;
        }, _proto.isStoreMarkedForInvalidation = function() {
          return this._invalidatedStore;
        }, _proto.markIDForInvalidation = function(dataID) {
          this._idsMarkedForInvalidation.add(dataID);
        }, _proto.getIDsMarkedForInvalidation = function() {
          return this._idsMarkedForInvalidation;
        }, _proto.readUpdatableQuery = function(query, variables) {
          return _readUpdatableQuery(query, variables, this, this._missingFieldHandlers);
        }, _proto.readUpdatableFragment = function(fragment, fragmentReference) {
          return _readUpdatableFragment(fragment, fragmentReference, this, this._missingFieldHandlers);
        }, RelayRecordSourceProxy;
      }();
      module.exports = RelayRecordSourceProxy;
    },
    5064: (module, __unused_webpack_exports, __webpack_require__) => {
      "use strict";
      var _require = __webpack_require__(6195), ROOT_TYPE = _require.ROOT_TYPE, getStorageKey = _require.getStorageKey, _readUpdatableFragment = __webpack_require__(2190).readUpdatableFragment, _readUpdatableQuery = __webpack_require__(6199).readUpdatableQuery, invariant = __webpack_require__(1235), RelayRecordSourceSelectorProxy = function() {
        function RelayRecordSourceSelectorProxy(mutator, recordSource, readSelector, missingFieldHandlers) {
          this.__mutator = mutator, this.__recordSource = recordSource, this._readSelector = readSelector, 
          this._missingFieldHandlers = missingFieldHandlers;
        }
        var _proto = RelayRecordSourceSelectorProxy.prototype;
        return _proto.create = function(dataID, typeName) {
          return this.__recordSource.create(dataID, typeName);
        }, _proto.delete = function(dataID) {
          this.__recordSource.delete(dataID);
        }, _proto.get = function(dataID) {
          return this.__recordSource.get(dataID);
        }, _proto.getRoot = function() {
          return this.__recordSource.getRoot();
        }, _proto.getOperationRoot = function() {
          var root = this.__recordSource.get(this._readSelector.dataID);
          return root || (root = this.__recordSource.create(this._readSelector.dataID, ROOT_TYPE)), 
          root;
        }, _proto._getRootField = function(selector, fieldName, plural) {
          var field = selector.node.selections.find((function(selection) {
            return "LinkedField" === selection.kind && selection.name === fieldName || "RequiredField" === selection.kind && selection.field.name === fieldName;
          }));
          return field && "RequiredField" === field.kind && (field = field.field), field && "LinkedField" === field.kind || invariant(!1), 
          field.plural !== plural && invariant(!1), field;
        }, _proto.getRootField = function(fieldName) {
          var field = this._getRootField(this._readSelector, fieldName, !1), storageKey = getStorageKey(field, this._readSelector.variables);
          return this.getOperationRoot().getLinkedRecord(storageKey);
        }, _proto.getPluralRootField = function(fieldName) {
          var field = this._getRootField(this._readSelector, fieldName, !0), storageKey = getStorageKey(field, this._readSelector.variables);
          return this.getOperationRoot().getLinkedRecords(storageKey);
        }, _proto.invalidateStore = function() {
          this.__recordSource.invalidateStore();
        }, _proto.readUpdatableQuery = function(query, variables) {
          return _readUpdatableQuery(query, variables, this, this._missingFieldHandlers);
        }, _proto.readUpdatableFragment = function(fragment, fragmentReference) {
          return _readUpdatableFragment(fragment, fragmentReference, this, this._missingFieldHandlers);
        }, RelayRecordSourceSelectorProxy;
      }();
      module.exports = RelayRecordSourceSelectorProxy;
    },
    7425: (module, __unused_webpack_exports, __webpack_require__) => {
      "use strict";
      var getRequest = __webpack_require__(3892).getRequest, isRelayModernEnvironment = __webpack_require__(7212), createOperationDescriptor = __webpack_require__(7133).createOperationDescriptor, RelayDeclarativeMutationConfig = __webpack_require__(4725), invariant = __webpack_require__(1235);
      module.exports = function(environment, config) {
        isRelayModernEnvironment(environment) || invariant(!1);
        var mutation = getRequest(config.mutation);
        if ("mutation" !== mutation.params.operationKind) throw new Error("commitMutation: Expected mutation operation");
        var optimisticUpdater = config.optimisticUpdater, configs = config.configs, optimisticResponse = config.optimisticResponse, variables = config.variables, operation = createOperationDescriptor(mutation, variables);
        return configs && (optimisticUpdater = RelayDeclarativeMutationConfig.convert(configs, mutation, optimisticUpdater).optimisticUpdater), 
        environment.applyMutation({
          operation,
          response: optimisticResponse,
          updater: optimisticUpdater
        });
      };
    },
    677: module => {
      "use strict";
      module.exports = function(environment, updater) {
        environment.commitUpdate(updater);
      };
    },
    561: (module, __unused_webpack_exports, __webpack_require__) => {
      "use strict";
      var _toConsumableArray2 = (0, __webpack_require__(1440).default)(__webpack_require__(3451)), getRequest = __webpack_require__(3892).getRequest, generateUniqueClientID = __webpack_require__(2621).generateUniqueClientID, isRelayModernEnvironment = __webpack_require__(7212), createOperationDescriptor = __webpack_require__(7133).createOperationDescriptor, RelayDeclarativeMutationConfig = __webpack_require__(4725), invariant = (__webpack_require__(3126), 
      __webpack_require__(1235));
      __webpack_require__(3349);
      module.exports = function(environment, config) {
        isRelayModernEnvironment(environment) || invariant(!1);
        var mutation = getRequest(config.mutation);
        if ("mutation" !== mutation.params.operationKind) throw new Error("commitMutation: Expected mutation operation");
        if ("Request" !== mutation.kind) throw new Error("commitMutation: Expected mutation to be of type request");
        var optimisticResponse = config.optimisticResponse, optimisticUpdater = config.optimisticUpdater, updater = config.updater, configs = config.configs, cacheConfig = config.cacheConfig, onError = config.onError, onUnsubscribe = config.onUnsubscribe, variables = config.variables, uploadables = config.uploadables, operation = createOperationDescriptor(mutation, variables, cacheConfig, generateUniqueClientID());
        if ("function" == typeof optimisticResponse && (optimisticResponse = optimisticResponse()), 
        configs) {
          var _RelayDeclarativeMuta = RelayDeclarativeMutationConfig.convert(configs, mutation, optimisticUpdater, updater);
          optimisticUpdater = _RelayDeclarativeMuta.optimisticUpdater, updater = _RelayDeclarativeMuta.updater;
        }
        var errors = [];
        return {
          dispose: environment.executeMutation({
            operation,
            optimisticResponse,
            optimisticUpdater,
            updater,
            uploadables
          }).subscribe({
            next: function(payload) {
              var _config$onNext;
              Array.isArray(payload) ? payload.forEach((function(item) {
                item.errors && errors.push.apply(errors, (0, _toConsumableArray2.default)(item.errors));
              })) : payload.errors && errors.push.apply(errors, (0, _toConsumableArray2.default)(payload.errors)), 
              null === (_config$onNext = config.onNext) || void 0 === _config$onNext || _config$onNext.call(config);
            },
            complete: function() {
              var onCompleted = config.onCompleted;
              onCompleted && onCompleted(environment.lookup(operation.fragment).data, 0 !== errors.length ? errors : null);
            },
            error: onError,
            unsubscribe: onUnsubscribe
          }).unsubscribe
        };
      };
    },
    7085: (module, __unused_webpack_exports, __webpack_require__) => {
      "use strict";
      var _createForOfIteratorHelper2 = (0, __webpack_require__(1440).default)(__webpack_require__(2460)), getArgumentValues = __webpack_require__(6195).getArgumentValues, nonUpdatableKeys = [ "id", "__id", "__typename", "js" ];
      function updateProxyFromSelections(mutableUpdatableProxy, updatableProxyRootRecord, variables, selections, recordSourceProxy, missingFieldHandlers) {
        var _selection$alias3, _step, _iterator = (0, _createForOfIteratorHelper2.default)(selections);
        try {
          var _loop = function() {
            var selection = _step.value;
            switch (selection.kind) {
             case "LinkedField":
              selection.plural ? Object.defineProperty(mutableUpdatableProxy, null !== (_selection$alias = selection.alias) && void 0 !== _selection$alias ? _selection$alias : selection.name, {
                get: createGetterForPluralLinkedField(selection, variables, updatableProxyRootRecord, recordSourceProxy, missingFieldHandlers),
                set: createSetterForPluralLinkedField(selection, variables, updatableProxyRootRecord, recordSourceProxy)
              }) : Object.defineProperty(mutableUpdatableProxy, null !== (_selection$alias2 = selection.alias) && void 0 !== _selection$alias2 ? _selection$alias2 : selection.name, {
                get: createGetterForSingularLinkedField(selection, variables, updatableProxyRootRecord, recordSourceProxy, missingFieldHandlers),
                set: createSetterForSingularLinkedField(selection, variables, updatableProxyRootRecord, recordSourceProxy)
              });
              break;

             case "ScalarField":
              var scalarFieldName = null !== (_selection$alias3 = selection.alias) && void 0 !== _selection$alias3 ? _selection$alias3 : selection.name;
              Object.defineProperty(mutableUpdatableProxy, scalarFieldName, {
                get: function() {
                  var _selection$args, newVariables = getArgumentValues(null !== (_selection$args = selection.args) && void 0 !== _selection$args ? _selection$args : [], variables), value = updatableProxyRootRecord.getValue(selection.name, newVariables);
                  return null == value && (value = function(selection, newVariables, updatableProxyRootRecord, recordSourceProxy, missingFieldHandlers) {
                    var _step4, _iterator4 = (0, _createForOfIteratorHelper2.default)(missingFieldHandlers);
                    try {
                      for (_iterator4.s(); !(_step4 = _iterator4.n()).done; ) {
                        var handler = _step4.value;
                        if ("scalar" === handler.kind) {
                          var value = handler.handle(selection, updatableProxyRootRecord, newVariables, recordSourceProxy);
                          if (void 0 !== value) return value;
                        }
                      }
                    } catch (err) {
                      _iterator4.e(err);
                    } finally {
                      _iterator4.f();
                    }
                  }(selection, newVariables, updatableProxyRootRecord, recordSourceProxy, missingFieldHandlers)), 
                  value;
                },
                set: nonUpdatableKeys.includes(selection.name) ? void 0 : function(newValue) {
                  var _selection$args2, newVariables = getArgumentValues(null !== (_selection$args2 = selection.args) && void 0 !== _selection$args2 ? _selection$args2 : [], variables);
                  updatableProxyRootRecord.setValue__UNSAFE(newValue, selection.name, newVariables);
                }
              });
              break;

             case "InlineFragment":
              updatableProxyRootRecord.getType() === selection.type && updateProxyFromSelections(mutableUpdatableProxy, updatableProxyRootRecord, variables, selection.selections, recordSourceProxy, missingFieldHandlers);
              break;

             case "ClientExtension":
              updateProxyFromSelections(mutableUpdatableProxy, updatableProxyRootRecord, variables, selection.selections, recordSourceProxy, missingFieldHandlers);
              break;

             case "FragmentSpread":
              break;

             case "Condition":
             case "ActorChange":
             case "InlineDataFragmentSpread":
             case "AliasedInlineFragmentSpread":
             case "ClientEdgeToClientObject":
             case "ClientEdgeToServerObject":
             case "Defer":
             case "ModuleImport":
             case "RelayLiveResolver":
             case "RequiredField":
             case "CatchField":
             case "Stream":
             case "RelayResolver":
              throw new Error("Encountered an unexpected ReaderSelection variant in RelayRecordSourceProxy. This indicates a bug in Relay.");

             default:
              throw selection.kind, new Error("Encountered an unexpected ReaderSelection variant in RelayRecordSourceProxy. This indicates a bug in Relay.");
            }
          };
          for (_iterator.s(); !(_step = _iterator.n()).done; ) {
            var _selection$alias, _selection$alias2;
            _loop();
          }
        } catch (err) {
          _iterator.e(err);
        } finally {
          _iterator.f();
        }
      }
      function createSetterForPluralLinkedField(selection, variables, updatableProxyRootRecord, recordSourceProxy) {
        return function(newValue) {
          var _selection$args3, newVariables = getArgumentValues(null !== (_selection$args3 = selection.args) && void 0 !== _selection$args3 ? _selection$args3 : [], variables);
          if (null == newValue) throw new Error("Do not assign null to plural linked fields; assign an empty array instead.");
          var recordProxies = newValue.map((function(item) {
            if (null == item) throw new Error("When assigning an array of items, none of the items should be null or undefined.");
            var __id = item.__id;
            if (null == __id) throw new Error("The __id field must be present on each item passed to the setter. This indicates a bug in Relay.");
            var newValueRecord = recordSourceProxy.get(__id);
            if (null == newValueRecord) throw new Error("Did not find item with data id ".concat(__id, " in the store."));
            return newValueRecord;
          }));
          updatableProxyRootRecord.setLinkedRecords(recordProxies, selection.name, newVariables);
        };
      }
      function createSetterForSingularLinkedField(selection, variables, updatableProxyRootRecord, recordSourceProxy) {
        return function(newValue) {
          var _selection$args4, newVariables = getArgumentValues(null !== (_selection$args4 = selection.args) && void 0 !== _selection$args4 ? _selection$args4 : [], variables);
          if (null == newValue) updatableProxyRootRecord.setValue(newValue, selection.name, newVariables); else {
            var __id = newValue.__id;
            if (null == __id) throw new Error("The __id field must be present on the argument. This indicates a bug in Relay.");
            var newValueRecord = recordSourceProxy.get(__id);
            if (null == newValueRecord) throw new Error("Did not find item with data id ".concat(__id, " in the store."));
            updatableProxyRootRecord.setLinkedRecord(newValueRecord, selection.name, newVariables);
          }
        };
      }
      function createGetterForPluralLinkedField(selection, variables, updatableProxyRootRecord, recordSourceProxy, missingFieldHandlers) {
        return function() {
          var _selection$args5, newVariables = getArgumentValues(null !== (_selection$args5 = selection.args) && void 0 !== _selection$args5 ? _selection$args5 : [], variables), linkedRecords = updatableProxyRootRecord.getLinkedRecords(selection.name, newVariables);
          return void 0 === linkedRecords && (linkedRecords = function(selection, newVariables, updatableProxyRootRecord, recordSourceProxy, missingFieldHandlers) {
            var _step3, _iterator3 = (0, _createForOfIteratorHelper2.default)(missingFieldHandlers);
            try {
              for (_iterator3.s(); !(_step3 = _iterator3.n()).done; ) {
                var handler = _step3.value;
                if ("pluralLinked" === handler.kind) {
                  var newIds = handler.handle(selection, updatableProxyRootRecord, newVariables, recordSourceProxy);
                  if (null != newIds) return newIds.map((function(newId) {
                    if (null != newId) return recordSourceProxy.get(newId);
                  }));
                }
              }
            } catch (err) {
              _iterator3.e(err);
            } finally {
              _iterator3.f();
            }
          }(selection, newVariables, updatableProxyRootRecord, recordSourceProxy, missingFieldHandlers)), 
          null != linkedRecords ? linkedRecords.map((function(linkedRecord) {
            if (null != linkedRecord) {
              var updatableProxy = {};
              return updateProxyFromSelections(updatableProxy, linkedRecord, variables, selection.selections, recordSourceProxy, missingFieldHandlers), 
              updatableProxy;
            }
            return linkedRecord;
          })) : linkedRecords;
        };
      }
      function createGetterForSingularLinkedField(selection, variables, updatableProxyRootRecord, recordSourceProxy, missingFieldHandlers) {
        return function() {
          var _selection$args6, newVariables = getArgumentValues(null !== (_selection$args6 = selection.args) && void 0 !== _selection$args6 ? _selection$args6 : [], variables), linkedRecord = updatableProxyRootRecord.getLinkedRecord(selection.name, newVariables);
          if (void 0 === linkedRecord && (linkedRecord = function(selection, newVariables, updatableProxyRootRecord, recordSourceProxy, missingFieldHandlers) {
            var _step2, _iterator2 = (0, _createForOfIteratorHelper2.default)(missingFieldHandlers);
            try {
              for (_iterator2.s(); !(_step2 = _iterator2.n()).done; ) {
                var handler = _step2.value;
                if ("linked" === handler.kind) {
                  var newId = handler.handle(selection, updatableProxyRootRecord, newVariables, recordSourceProxy);
                  if (null != newId) return recordSourceProxy.get(newId);
                }
              }
            } catch (err) {
              _iterator2.e(err);
            } finally {
              _iterator2.f();
            }
          }(selection, newVariables, updatableProxyRootRecord, recordSourceProxy, missingFieldHandlers)), 
          null != linkedRecord) {
            var updatableProxy = {};
            return updateProxyFromSelections(updatableProxy, linkedRecord, variables, selection.selections, recordSourceProxy, missingFieldHandlers), 
            updatableProxy;
          }
          return linkedRecord;
        };
      }
      module.exports = {
        createUpdatableProxy: function(updatableProxyRootRecord, variables, selections, recordSourceProxy, missingFieldHandlers) {
          var mutableUpdatableProxy = {};
          return updateProxyFromSelections(mutableUpdatableProxy, updatableProxyRootRecord, variables, selections, recordSourceProxy, missingFieldHandlers), 
          mutableUpdatableProxy;
        }
      };
    },
    2190: (module, __unused_webpack_exports, __webpack_require__) => {
      "use strict";
      var getFragment = __webpack_require__(3892).getFragment, getVariablesFromFragment = __webpack_require__(7134).getVariablesFromFragment, ID_KEY = __webpack_require__(6195).ID_KEY, createUpdatableProxy = __webpack_require__(7085).createUpdatableProxy, invariant = __webpack_require__(1235);
      module.exports = {
        readUpdatableFragment: function(fragment, fragmentReference, proxy, missingFieldHandlers) {
          var updatableFragment = getFragment(fragment), fragmentVariables = getVariablesFromFragment(updatableFragment, fragmentReference), id = fragmentReference[ID_KEY], fragmentRoot = proxy.get(id);
          return null == fragmentRoot && invariant(!1), {
            updatableData: createUpdatableProxy(fragmentRoot, fragmentVariables, updatableFragment.selections, proxy, missingFieldHandlers)
          };
        }
      };
    },
    6199: (module, __unused_webpack_exports, __webpack_require__) => {
      "use strict";
      var getUpdatableQuery = __webpack_require__(3892).getUpdatableQuery, createUpdatableProxy = __webpack_require__(7085).createUpdatableProxy;
      module.exports = {
        readUpdatableQuery: function(query, variables, proxy, missingFieldHandlers) {
          var updatableQuery = getUpdatableQuery(query);
          return {
            updatableData: createUpdatableProxy(proxy.getRoot(), variables, updatableQuery.fragment.selections, proxy, missingFieldHandlers)
          };
        }
      };
    },
    3126: (module, __unused_webpack_exports, __webpack_require__) => {
      "use strict";
      (0, __webpack_require__(1440).default)(__webpack_require__(2977)), __webpack_require__(3349), 
      Object.prototype.hasOwnProperty;
      module.exports = function() {};
    },
    5097: (module, __unused_webpack_exports, __webpack_require__) => {
      "use strict";
      var RelayObservable = __webpack_require__(219);
      module.exports = {
        convertFetch: function(fn) {
          return function(request, variables, cacheConfig, uploadables, logRequestInfo) {
            var result = fn(request, variables, cacheConfig, uploadables, logRequestInfo);
            return result instanceof Error ? RelayObservable.create((function(sink) {
              return sink.error(result);
            })) : RelayObservable.from(result);
          };
        }
      };
    },
    3114: (module, __unused_webpack_exports, __webpack_require__) => {
      "use strict";
      var withProvidedVariables = __webpack_require__(8569), convertFetch = __webpack_require__(5097).convertFetch, invariant = __webpack_require__(1235);
      module.exports = {
        create: function(fetchFn, subscribe) {
          var observeFetch = convertFetch(fetchFn);
          return {
            execute: function(request, variables, cacheConfig, uploadables, logRequestInfo) {
              var operationVariables = withProvidedVariables(variables, request.providedVariables);
              if ("subscription" === request.operationKind) return subscribe || invariant(!1), 
              uploadables && invariant(!1), subscribe(request, operationVariables, cacheConfig);
              var pollInterval = cacheConfig.poll;
              return null != pollInterval ? (uploadables && invariant(!1), observeFetch(request, operationVariables, {
                force: !0
              }).poll(pollInterval)) : observeFetch(request, operationVariables, cacheConfig, uploadables, logRequestInfo);
            }
          };
        }
      };
    },
    219: (module, __unused_webpack_exports, __webpack_require__) => {
      "use strict";
      var isPromise = __webpack_require__(1965), hostReportError = function(_error, _isUncaughtThrownError) {}, RelayObservable = function() {
        function RelayObservable(source) {
          this._source = source;
        }
        RelayObservable.create = function(source) {
          return new RelayObservable(source);
        }, RelayObservable.onUnhandledError = function(callback) {
          hostReportError = callback;
        }, RelayObservable.from = function(obj) {
          return function(obj) {
            return "object" == typeof obj && null !== obj && "function" == typeof obj.subscribe;
          }(obj) ? fromObservable(obj) : isPromise(obj) ? fromPromise(obj) : fromValue(obj);
        };
        var _proto = RelayObservable.prototype;
        return _proto.catch = function(fn) {
          var _this = this;
          return RelayObservable.create((function(sink) {
            var subscription;
            return _this.subscribe({
              start: function(sub) {
                subscription = sub;
              },
              next: sink.next,
              complete: sink.complete,
              error: function(_error2) {
                try {
                  fn(_error2).subscribe({
                    start: function(sub) {
                      subscription = sub;
                    },
                    next: sink.next,
                    complete: sink.complete,
                    error: sink.error
                  });
                } catch (error2) {
                  sink.error(error2, !0);
                }
              }
            }), function() {
              return subscription.unsubscribe();
            };
          }));
        }, _proto.concat = function(next) {
          var _this2 = this;
          return RelayObservable.create((function(sink) {
            var current;
            return _this2.subscribe({
              start: function(subscription) {
                current = subscription;
              },
              next: sink.next,
              error: sink.error,
              complete: function() {
                current = next.subscribe(sink);
              }
            }), function() {
              current && current.unsubscribe();
            };
          }));
        }, _proto.do = function(observer) {
          var _this3 = this;
          return RelayObservable.create((function(sink) {
            var both = function(action) {
              return function() {
                try {
                  observer[action] && observer[action].apply(observer, arguments);
                } catch (error) {
                  hostReportError(error, !0);
                }
                sink[action] && sink[action].apply(sink, arguments);
              };
            };
            return _this3.subscribe({
              start: both("start"),
              next: both("next"),
              error: both("error"),
              complete: both("complete"),
              unsubscribe: both("unsubscribe")
            });
          }));
        }, _proto.finally = function(fn) {
          var _this4 = this;
          return RelayObservable.create((function(sink) {
            var subscription = _this4.subscribe(sink);
            return function() {
              subscription.unsubscribe(), fn();
            };
          }));
        }, _proto.ifEmpty = function(alternate) {
          var _this5 = this;
          return RelayObservable.create((function(sink) {
            var current, hasValue = !1;
            return current = _this5.subscribe({
              next: function(value) {
                hasValue = !0, sink.next(value);
              },
              error: sink.error,
              complete: function() {
                hasValue ? sink.complete() : current = alternate.subscribe(sink);
              }
            }), function() {
              current && current.unsubscribe();
            };
          }));
        }, _proto.subscribe = function(observer) {
          return function(source, observer) {
            var cleanup, closed = !1, withClosed = function(obj) {
              return Object.defineProperty(obj, "closed", {
                get: function() {
                  return closed;
                }
              });
            };
            function doCleanup() {
              if (cleanup) {
                if (cleanup.unsubscribe) cleanup.unsubscribe(); else try {
                  cleanup();
                } catch (error) {
                  hostReportError(error, !0);
                }
                cleanup = void 0;
              }
            }
            var subscription = withClosed({
              unsubscribe: function() {
                if (!closed) {
                  closed = !0;
                  try {
                    observer.unsubscribe && observer.unsubscribe(subscription);
                  } catch (error) {
                    hostReportError(error, !0);
                  } finally {
                    doCleanup();
                  }
                }
              }
            });
            try {
              observer.start && observer.start(subscription);
            } catch (error) {
              hostReportError(error, !0);
            }
            if (closed) return subscription;
            var sink = withClosed({
              next: function(value) {
                if (!closed && observer.next) try {
                  observer.next(value);
                } catch (error) {
                  hostReportError(error, !0);
                }
              },
              error: function(_error3, isUncaughtThrownError) {
                if (closed || !observer.error) closed = !0, hostReportError(_error3, isUncaughtThrownError || !1), 
                doCleanup(); else {
                  closed = !0;
                  try {
                    observer.error(_error3);
                  } catch (error2) {
                    hostReportError(error2, !0);
                  } finally {
                    doCleanup();
                  }
                }
              },
              complete: function() {
                if (!closed) {
                  closed = !0;
                  try {
                    observer.complete && observer.complete();
                  } catch (error) {
                    hostReportError(error, !0);
                  } finally {
                    doCleanup();
                  }
                }
              }
            });
            try {
              cleanup = source(sink);
            } catch (error) {
              sink.error(error, !0);
            }
            0;
            closed && doCleanup();
            return subscription;
          }(this._source, observer);
        }, _proto.map = function(fn) {
          var _this6 = this;
          return RelayObservable.create((function(sink) {
            var subscription = _this6.subscribe({
              complete: sink.complete,
              error: sink.error,
              next: function(value) {
                try {
                  var mapValue = fn(value);
                  sink.next(mapValue);
                } catch (error) {
                  sink.error(error, !0);
                }
              }
            });
            return function() {
              subscription.unsubscribe();
            };
          }));
        }, _proto.mergeMap = function(fn) {
          var _this7 = this;
          return RelayObservable.create((function(sink) {
            var subscriptions = [];
            function start(subscription) {
              this._sub = subscription, subscriptions.push(subscription);
            }
            function complete() {
              subscriptions.splice(subscriptions.indexOf(this._sub), 1), 0 === subscriptions.length && sink.complete();
            }
            return _this7.subscribe({
              start,
              next: function(value) {
                try {
                  sink.closed || RelayObservable.from(fn(value)).subscribe({
                    start,
                    next: sink.next,
                    error: sink.error,
                    complete
                  });
                } catch (error) {
                  sink.error(error, !0);
                }
              },
              error: sink.error,
              complete
            }), function() {
              subscriptions.forEach((function(sub) {
                return sub.unsubscribe();
              })), subscriptions.length = 0;
            };
          }));
        }, _proto.poll = function(pollInterval) {
          var _this8 = this;
          return RelayObservable.create((function(sink) {
            var subscription, timeout;
            return function poll() {
              subscription = _this8.subscribe({
                next: sink.next,
                error: sink.error,
                complete: function() {
                  timeout = setTimeout(poll, pollInterval);
                }
              });
            }(), function() {
              clearTimeout(timeout), subscription.unsubscribe();
            };
          }));
        }, _proto.toPromise = function() {
          var _this9 = this;
          return new Promise((function(resolve, reject) {
            var resolved = !1;
            _this9.subscribe({
              next: function(val) {
                resolved || (resolved = !0, resolve(val));
              },
              error: reject,
              complete: resolve
            });
          }));
        }, RelayObservable;
      }();
      function fromObservable(obj) {
        return obj instanceof RelayObservable ? obj : RelayObservable.create((function(sink) {
          return obj.subscribe(sink);
        }));
      }
      function fromPromise(promise) {
        return RelayObservable.create((function(sink) {
          promise.then((function(value) {
            sink.next(value), sink.complete();
          }), sink.error);
        }));
      }
      function fromValue(value) {
        return RelayObservable.create((function(sink) {
          sink.next(value), sink.complete();
        }));
      }
      module.exports = RelayObservable;
    },
    5580: (module, __unused_webpack_exports, __webpack_require__) => {
      "use strict";
      var _objectSpread2 = (0, __webpack_require__(1440).default)(__webpack_require__(2977)), stableCopy = __webpack_require__(6163).stableCopy, invariant = __webpack_require__(1235), RelayQueryResponseCache = function() {
        function RelayQueryResponseCache(_ref) {
          var size = _ref.size, ttl = _ref.ttl;
          size > 0 || invariant(!1), ttl > 0 || invariant(!1), this._responses = new Map, 
          this._size = size, this._ttl = ttl;
        }
        var _proto = RelayQueryResponseCache.prototype;
        return _proto.clear = function() {
          this._responses.clear();
        }, _proto.get = function(queryID, variables) {
          var _this = this, cacheKey = getCacheKey(queryID, variables);
          this._responses.forEach((function(response, key) {
            var fetchTime, ttl;
            fetchTime = response.fetchTime, ttl = _this._ttl, fetchTime + ttl >= Date.now() || _this._responses.delete(key);
          }));
          var response = this._responses.get(cacheKey);
          return null == response ? null : Array.isArray(response.payload) ? response.payload.map((function(payload) {
            return (0, _objectSpread2.default)((0, _objectSpread2.default)({}, payload), {}, {
              extensions: (0, _objectSpread2.default)((0, _objectSpread2.default)({}, payload.extensions), {}, {
                cacheTimestamp: response.fetchTime
              })
            });
          })) : (0, _objectSpread2.default)((0, _objectSpread2.default)({}, response.payload), {}, {
            extensions: (0, _objectSpread2.default)((0, _objectSpread2.default)({}, response.payload.extensions), {}, {
              cacheTimestamp: response.fetchTime
            })
          });
        }, _proto.set = function(queryID, variables, payload) {
          var fetchTime = Date.now(), cacheKey = getCacheKey(queryID, variables);
          if (this._responses.delete(cacheKey), this._responses.set(cacheKey, {
            fetchTime,
            payload
          }), this._responses.size > this._size) {
            var firstKey = this._responses.keys().next();
            firstKey.done || this._responses.delete(firstKey.value);
          }
        }, RelayQueryResponseCache;
      }();
      function getCacheKey(queryID, variables) {
        return JSON.stringify(stableCopy({
          queryID,
          variables
        }));
      }
      module.exports = RelayQueryResponseCache;
    },
    9216: (module, __unused_webpack_exports, __webpack_require__) => {
      "use strict";
      var generateID = __webpack_require__(5174);
      module.exports = function(env, network) {
        return {
          execute: function(params, variables, cacheConfig, uploadables) {
            var networkRequestId = generateID(), logObserver = {
              start: function(subscription) {
                env.__log({
                  name: "network.start",
                  networkRequestId,
                  params,
                  variables,
                  cacheConfig
                });
              },
              next: function(response) {
                env.__log({
                  name: "network.next",
                  networkRequestId,
                  response
                });
              },
              error: function(_error) {
                env.__log({
                  name: "network.error",
                  networkRequestId,
                  error: _error
                });
              },
              complete: function() {
                env.__log({
                  name: "network.complete",
                  networkRequestId
                });
              },
              unsubscribe: function() {
                env.__log({
                  name: "network.unsubscribe",
                  networkRequestId
                });
              }
            };
            return network.execute(params, variables, cacheConfig, uploadables, (function(info) {
              env.__log({
                name: "network.info",
                networkRequestId,
                info
              });
            })).do(logObserver);
          }
        };
      };
    },
    3892: (module, __unused_webpack_exports, __webpack_require__) => {
      "use strict";
      var RelayConcreteNode = __webpack_require__(351), invariant = __webpack_require__(1235);
      __webpack_require__(3349);
      function getNode(taggedNode) {
        var node = taggedNode;
        return "function" == typeof node ? node = node() : node.default && (node = node.default), 
        node;
      }
      function isFragment(node) {
        var fragment = getNode(node);
        return "object" == typeof fragment && null !== fragment && fragment.kind === RelayConcreteNode.FRAGMENT;
      }
      function isRequest(node) {
        var request = getNode(node);
        return "object" == typeof request && null !== request && request.kind === RelayConcreteNode.REQUEST;
      }
      function isUpdatableQuery(node) {
        var updatableQuery = getNode(node);
        return "object" == typeof updatableQuery && null !== updatableQuery && updatableQuery.kind === RelayConcreteNode.UPDATABLE_QUERY;
      }
      function isInlineDataFragment(node) {
        var fragment = getNode(node);
        return "object" == typeof fragment && null !== fragment && fragment.kind === RelayConcreteNode.INLINE_DATA_FRAGMENT;
      }
      function getFragment(taggedNode) {
        var fragment = getNode(taggedNode);
        return isFragment(fragment) || invariant(!1), fragment;
      }
      module.exports = {
        getFragment,
        getNode,
        getPaginationFragment: function(taggedNode) {
          var _fragment$metadata, fragment = getFragment(taggedNode), refetch = null === (_fragment$metadata = fragment.metadata) || void 0 === _fragment$metadata ? void 0 : _fragment$metadata.refetch, connection = null == refetch ? void 0 : refetch.connection;
          return null === refetch || "object" != typeof refetch || null === connection || "object" != typeof connection ? null : fragment;
        },
        getRefetchableFragment: function(taggedNode) {
          var _fragment$metadata2, fragment = getFragment(taggedNode), refetch = null === (_fragment$metadata2 = fragment.metadata) || void 0 === _fragment$metadata2 ? void 0 : _fragment$metadata2.refetch;
          return null === refetch || "object" != typeof refetch ? null : fragment;
        },
        getRequest: function(taggedNode) {
          var request = getNode(taggedNode);
          return isRequest(request) || invariant(!1), request;
        },
        getUpdatableQuery: function(taggedNode) {
          var updatableQuery = getNode(taggedNode);
          return isUpdatableQuery(updatableQuery) || invariant(!1), updatableQuery;
        },
        getInlineDataFragment: function(taggedNode) {
          var fragment = getNode(taggedNode);
          return isInlineDataFragment(fragment) || invariant(!1), fragment;
        },
        graphql: function(strings) {
          invariant(!1);
        },
        isFragment,
        isRequest,
        isUpdatableQuery,
        isInlineDataFragment
      };
    },
    9460: module => {
      "use strict";
      var preloadableQueryRegistry = new (function() {
        function PreloadableQueryRegistry() {
          this._preloadableQueries = new Map, this._callbacks = new Map;
        }
        var _proto = PreloadableQueryRegistry.prototype;
        return _proto.set = function(key, value) {
          this._preloadableQueries.set(key, value);
          var callbacks = this._callbacks.get(key);
          null != callbacks && callbacks.forEach((function(cb) {
            try {
              cb(value);
            } catch (e) {
              setTimeout((function() {
                throw e;
              }), 0);
            }
          }));
        }, _proto.get = function(key) {
          return this._preloadableQueries.get(key);
        }, _proto.onLoad = function(key, callback) {
          var _this$_callbacks$get, callbacks = null !== (_this$_callbacks$get = this._callbacks.get(key)) && void 0 !== _this$_callbacks$get ? _this$_callbacks$get : new Set;
          callbacks.add(callback);
          return this._callbacks.set(key, callbacks), {
            dispose: function() {
              callbacks.delete(callback);
            }
          };
        }, _proto.clear = function() {
          this._preloadableQueries.clear();
        }, PreloadableQueryRegistry;
      }());
      module.exports = preloadableQueryRegistry;
    },
    4170: (module, __unused_webpack_exports, __webpack_require__) => {
      "use strict";
      var _objectSpread2 = (0, __webpack_require__(1440).default)(__webpack_require__(2977)), RelayObservable = __webpack_require__(219), createOperationDescriptor = __webpack_require__(7133).createOperationDescriptor, handlePotentialSnapshotErrors = __webpack_require__(8746).handlePotentialSnapshotErrors, fetchQueryInternal = __webpack_require__(1918), getRequest = __webpack_require__(3892).getRequest, invariant = __webpack_require__(1235);
      function getNetworkObservable(environment, operation) {
        return fetchQueryInternal.fetchQuery(environment, operation).map((function() {
          return environment.lookup(operation.fragment);
        }));
      }
      module.exports = function(environment, query, variables, options) {
        var _options$fetchPolicy, queryNode = getRequest(query);
        "query" !== queryNode.params.operationKind && invariant(!1);
        var networkCacheConfig = (0, _objectSpread2.default)({
          force: !0
        }, null == options ? void 0 : options.networkCacheConfig), operation = createOperationDescriptor(queryNode, variables, networkCacheConfig), fetchPolicy = null !== (_options$fetchPolicy = null == options ? void 0 : options.fetchPolicy) && void 0 !== _options$fetchPolicy ? _options$fetchPolicy : "network-only";
        function readData(snapshot) {
          return handlePotentialSnapshotErrors(environment, snapshot.errorResponseFields), 
          snapshot.data;
        }
        switch (fetchPolicy) {
         case "network-only":
          return getNetworkObservable(environment, operation).map(readData);

         case "store-or-network":
          return "available" === environment.check(operation).status ? RelayObservable.from(environment.lookup(operation.fragment)).map(readData) : getNetworkObservable(environment, operation).map(readData);

         default:
          throw new Error("fetchQuery: Invalid fetchPolicy " + fetchPolicy);
        }
      };
    },
    1918: (module, __unused_webpack_exports, __webpack_require__) => {
      "use strict";
      var Observable = __webpack_require__(219), RelayReplaySubject = __webpack_require__(1283), invariant = __webpack_require__(1235), requestCachesByEnvironment = "function" == typeof WeakMap ? new WeakMap : new Map;
      function fetchQueryDeduped(environment, identifier, fetchFn) {
        return Observable.create((function(sink) {
          var requestCache = getRequestCache(environment), cachedRequest = requestCache.get(identifier);
          return cachedRequest || fetchFn().finally((function() {
            return requestCache.delete(identifier);
          })).subscribe({
            start: function(subscription) {
              cachedRequest = {
                identifier,
                subject: new RelayReplaySubject,
                subjectForInFlightStatus: new RelayReplaySubject,
                subscription,
                promise: null
              }, requestCache.set(identifier, cachedRequest);
            },
            next: function(response) {
              var cachedReq = getCachedRequest(requestCache, identifier);
              cachedReq.subject.next(response), cachedReq.subjectForInFlightStatus.next(response);
            },
            error: function(_error) {
              var cachedReq = getCachedRequest(requestCache, identifier);
              cachedReq.subject.error(_error), cachedReq.subjectForInFlightStatus.error(_error);
            },
            complete: function() {
              var cachedReq = getCachedRequest(requestCache, identifier);
              cachedReq.subject.complete(), cachedReq.subjectForInFlightStatus.complete();
            },
            unsubscribe: function(subscription) {
              var cachedReq = getCachedRequest(requestCache, identifier);
              cachedReq.subject.unsubscribe(), cachedReq.subjectForInFlightStatus.unsubscribe();
            }
          }), null == cachedRequest && invariant(!1), function(requestCache, cachedRequest) {
            return Observable.create((function(sink) {
              var subscription = cachedRequest.subject.subscribe(sink);
              return function() {
                subscription.unsubscribe();
                var cachedRequestInstance = requestCache.get(cachedRequest.identifier);
                if (cachedRequestInstance) {
                  var requestSubscription = cachedRequestInstance.subscription;
                  null != requestSubscription && 0 === cachedRequestInstance.subject.getObserverCount() && (requestSubscription.unsubscribe(), 
                  requestCache.delete(cachedRequest.identifier));
                }
              };
            }));
          }(requestCache, cachedRequest).subscribe(sink);
        }));
      }
      function getActiveStatusObservableForCachedRequest(environment, requestCache, cachedRequest) {
        return Observable.create((function(sink) {
          var subscription = cachedRequest.subjectForInFlightStatus.subscribe({
            error: sink.error,
            next: function(response) {
              environment.isRequestActive(cachedRequest.identifier) ? sink.next() : sink.complete();
            },
            complete: sink.complete,
            unsubscribe: sink.complete
          });
          return function() {
            subscription.unsubscribe();
          };
        }));
      }
      function getRequestCache(environment) {
        var cached = requestCachesByEnvironment.get(environment);
        if (null != cached) return cached;
        var requestCache = new Map;
        return requestCachesByEnvironment.set(environment, requestCache), requestCache;
      }
      function getCachedRequest(requestCache, identifier) {
        var cached = requestCache.get(identifier);
        return null == cached && invariant(!1), cached;
      }
      module.exports = {
        fetchQuery: function(environment, operation) {
          return fetchQueryDeduped(environment, operation.request.identifier, (function() {
            return environment.execute({
              operation
            });
          }));
        },
        fetchQueryDeduped,
        getPromiseForActiveRequest: function(environment, request) {
          var requestCache = getRequestCache(environment), cachedRequest = requestCache.get(request.identifier);
          return cachedRequest && environment.isRequestActive(cachedRequest.identifier) ? new Promise((function(resolve, reject) {
            var resolveOnNext = !1;
            getActiveStatusObservableForCachedRequest(environment, 0, cachedRequest).subscribe({
              complete: resolve,
              error: reject,
              next: function(response) {
                resolveOnNext && resolve(response);
              }
            }), resolveOnNext = !0;
          })) : null;
        },
        getObservableForActiveRequest: function(environment, request) {
          var requestCache = getRequestCache(environment), cachedRequest = requestCache.get(request.identifier);
          return cachedRequest && environment.isRequestActive(cachedRequest.identifier) ? getActiveStatusObservableForCachedRequest(environment, 0, cachedRequest) : null;
        }
      };
    },
    9732: (module, __unused_webpack_exports, __webpack_require__) => {
      "use strict";
      var createOperationDescriptor = __webpack_require__(7133).createOperationDescriptor, getRequest = __webpack_require__(3892).getRequest;
      module.exports = function(environment, taggedNode, variables, cacheConfig) {
        var query = getRequest(taggedNode);
        if ("query" !== query.params.operationKind) throw new Error("fetchQuery: Expected query operation");
        var operation = createOperationDescriptor(query, variables, cacheConfig);
        return environment.execute({
          operation
        }).map((function() {
          return environment.lookup(operation.fragment).data;
        })).toPromise();
      };
    },
    2621: (module, __unused_webpack_exports, __webpack_require__) => {
      "use strict";
      var RelayFeatureFlags = __webpack_require__(4309), intern = __webpack_require__(1561).intern;
      var localID = 0;
      module.exports = {
        generateClientID: function(id, storageKey, index) {
          var key = (RelayFeatureFlags.STRING_INTERN_LEVEL <= 0 ? id : intern(id, RelayFeatureFlags.MAX_DATA_ID_LENGTH)) + ":" + storageKey;
          return null != index && (key += ":" + index), 0 !== key.indexOf("client:") && (key = "client:" + key), 
          key;
        },
        generateClientObjectClientID: function(typename, localId, index) {
          var key = "".concat("client:").concat(typename, ":").concat(localId);
          return null != index && (key += ":" + index), key;
        },
        generateUniqueClientID: function() {
          return "".concat("client:", "local:").concat(localID++);
        },
        isClientID: function(id) {
          return 0 === id.indexOf("client:");
        }
      };
    },
    2483: (module, __unused_webpack_exports, __webpack_require__) => {
      "use strict";
      var _createForOfIteratorHelper2 = (0, __webpack_require__(1440).default)(__webpack_require__(2460)), RelayRecordSourceMutator = __webpack_require__(3551), RelayRecordSourceProxy = __webpack_require__(9743), getOperation = __webpack_require__(7782), isClientID = __webpack_require__(2621).isClientID, cloneRelayHandleSourceField = __webpack_require__(1647), cloneRelayScalarHandleSourceField = __webpack_require__(8187), getLocalVariables = __webpack_require__(7586).getLocalVariables, RelayModernRecord = __webpack_require__(5188), _require3 = __webpack_require__(8337), EXISTENT = _require3.EXISTENT, UNKNOWN = _require3.UNKNOWN, RelayStoreUtils = __webpack_require__(6195), _require4 = __webpack_require__(2620), TYPE_SCHEMA_TYPE = _require4.TYPE_SCHEMA_TYPE, generateTypeID = _require4.generateTypeID, invariant = __webpack_require__(1235), getModuleOperationKey = RelayStoreUtils.getModuleOperationKey, getStorageKey = RelayStoreUtils.getStorageKey, getArgumentValues = RelayStoreUtils.getArgumentValues;
      var DataChecker = function() {
        function DataChecker(getSourceForActor, getTargetForActor, defaultActorIdentifier, variables, handlers, operationLoader, getDataID, shouldProcessClientComponents) {
          this._getSourceForActor = getSourceForActor, this._getTargetForActor = getTargetForActor, 
          this._getDataID = getDataID, this._source = getSourceForActor(defaultActorIdentifier), 
          this._mutatorRecordSourceProxyCache = new Map;
          var _this$_getMutatorAndR = this._getMutatorAndRecordProxyForActor(defaultActorIdentifier), mutator = _this$_getMutatorAndR[0], recordSourceProxy = _this$_getMutatorAndR[1];
          this._mostRecentlyInvalidatedAt = null, this._handlers = handlers, this._mutator = mutator, 
          this._operationLoader = null != operationLoader ? operationLoader : null, this._recordSourceProxy = recordSourceProxy, 
          this._recordWasMissing = !1, this._variables = variables, this._shouldProcessClientComponents = shouldProcessClientComponents;
        }
        var _proto = DataChecker.prototype;
        return _proto._getMutatorAndRecordProxyForActor = function(actorIdentifier) {
          var tuple = this._mutatorRecordSourceProxyCache.get(actorIdentifier);
          if (null == tuple) {
            var target = this._getTargetForActor(actorIdentifier), mutator = new RelayRecordSourceMutator(this._getSourceForActor(actorIdentifier), target);
            tuple = [ mutator, new RelayRecordSourceProxy(mutator, this._getDataID, void 0, this._handlers) ], 
            this._mutatorRecordSourceProxyCache.set(actorIdentifier, tuple);
          }
          return tuple;
        }, _proto.check = function(node, dataID) {
          return this._assignClientAbstractTypes(node), this._traverse(node, dataID), !0 === this._recordWasMissing ? {
            status: "missing",
            mostRecentlyInvalidatedAt: this._mostRecentlyInvalidatedAt
          } : {
            status: "available",
            mostRecentlyInvalidatedAt: this._mostRecentlyInvalidatedAt
          };
        }, _proto._getVariableValue = function(name) {
          return this._variables.hasOwnProperty(name) || invariant(!1), this._variables[name];
        }, _proto._handleMissing = function() {
          this._recordWasMissing = !0;
        }, _proto._handleMissingScalarField = function(field, dataID) {
          if ("id" !== field.name || null != field.alias || !isClientID(dataID)) {
            var _step, args = null != field.args ? getArgumentValues(field.args, this._variables) : {}, _iterator = (0, 
            _createForOfIteratorHelper2.default)(this._handlers);
            try {
              for (_iterator.s(); !(_step = _iterator.n()).done; ) {
                var handler = _step.value;
                if ("scalar" === handler.kind) {
                  var newValue = handler.handle(field, this._recordSourceProxy.get(dataID), args, this._recordSourceProxy);
                  if (void 0 !== newValue) return newValue;
                }
              }
            } catch (err) {
              _iterator.e(err);
            } finally {
              _iterator.f();
            }
            this._handleMissing();
          }
        }, _proto._handleMissingLinkField = function(field, dataID) {
          var _step2, args = null != field.args ? getArgumentValues(field.args, this._variables) : {}, _iterator2 = (0, 
          _createForOfIteratorHelper2.default)(this._handlers);
          try {
            for (_iterator2.s(); !(_step2 = _iterator2.n()).done; ) {
              var handler = _step2.value;
              if ("linked" === handler.kind) {
                var newValue = handler.handle(field, this._recordSourceProxy.get(dataID), args, this._recordSourceProxy);
                if (void 0 !== newValue && (null === newValue || this._mutator.getStatus(newValue) === EXISTENT)) return newValue;
              }
            }
          } catch (err) {
            _iterator2.e(err);
          } finally {
            _iterator2.f();
          }
          this._handleMissing();
        }, _proto._handleMissingPluralLinkField = function(field, dataID) {
          var _step3, _this = this, args = null != field.args ? getArgumentValues(field.args, this._variables) : {}, _iterator3 = (0, 
          _createForOfIteratorHelper2.default)(this._handlers);
          try {
            for (_iterator3.s(); !(_step3 = _iterator3.n()).done; ) {
              var handler = _step3.value;
              if ("pluralLinked" === handler.kind) {
                var newValue = handler.handle(field, this._recordSourceProxy.get(dataID), args, this._recordSourceProxy);
                if (null != newValue) {
                  if (newValue.every((function(linkedID) {
                    return null != linkedID && _this._mutator.getStatus(linkedID) === EXISTENT;
                  }))) return newValue;
                } else if (null === newValue) return null;
              }
            }
          } catch (err) {
            _iterator3.e(err);
          } finally {
            _iterator3.f();
          }
          this._handleMissing();
        }, _proto._traverse = function(node, dataID) {
          var status = this._mutator.getStatus(dataID);
          if (status === UNKNOWN && this._handleMissing(), status === EXISTENT) {
            var record = this._source.get(dataID), invalidatedAt = RelayModernRecord.getInvalidationEpoch(record);
            null != invalidatedAt && (this._mostRecentlyInvalidatedAt = null != this._mostRecentlyInvalidatedAt ? Math.max(this._mostRecentlyInvalidatedAt, invalidatedAt) : invalidatedAt), 
            this._traverseSelections(node.selections, dataID);
          }
        }, _proto._traverseSelections = function(selections, dataID) {
          var _this2 = this;
          selections.forEach((function(selection) {
            switch (selection.kind) {
             case "ScalarField":
              _this2._checkScalar(selection, dataID);
              break;

             case "LinkedField":
              selection.plural ? _this2._checkPluralLink(selection, dataID) : _this2._checkLink(selection, dataID);
              break;

             case "ActorChange":
              _this2._checkActorChange(selection.linkedField, dataID);
              break;

             case "Condition":
              Boolean(_this2._getVariableValue(selection.condition)) === selection.passingValue && _this2._traverseSelections(selection.selections, dataID);
              break;

             case "InlineFragment":
              var _abstractKey = selection.abstractKey;
              if (null == _abstractKey) {
                _this2._mutator.getType(dataID) === selection.type && _this2._traverseSelections(selection.selections, dataID);
              } else {
                var _recordType = _this2._mutator.getType(dataID);
                null == _recordType && invariant(!1);
                var _typeID = generateTypeID(_recordType), _implementsInterface = _this2._mutator.getValue(_typeID, _abstractKey);
                !0 === _implementsInterface ? _this2._traverseSelections(selection.selections, dataID) : null == _implementsInterface && _this2._handleMissing();
              }
              break;

             case "LinkedHandle":
              var handleField = cloneRelayHandleSourceField(selection, selections, _this2._variables);
              handleField.plural ? _this2._checkPluralLink(handleField, dataID) : _this2._checkLink(handleField, dataID);
              break;

             case "ScalarHandle":
              var _handleField = cloneRelayScalarHandleSourceField(selection, selections, _this2._variables);
              _this2._checkScalar(_handleField, dataID);
              break;

             case "ModuleImport":
              _this2._checkModuleImport(selection, dataID);
              break;

             case "Defer":
             case "Stream":
              _this2._traverseSelections(selection.selections, dataID);
              break;

             case "FragmentSpread":
              var prevVariables = _this2._variables;
              _this2._variables = getLocalVariables(_this2._variables, selection.fragment.argumentDefinitions, selection.args), 
              _this2._traverseSelections(selection.fragment.selections, dataID), _this2._variables = prevVariables;
              break;

             case "ClientExtension":
              var recordWasMissing = _this2._recordWasMissing;
              _this2._traverseSelections(selection.selections, dataID), _this2._recordWasMissing = recordWasMissing;
              break;

             case "TypeDiscriminator":
              var abstractKey = selection.abstractKey, recordType = _this2._mutator.getType(dataID);
              null == recordType && invariant(!1);
              var typeID = generateTypeID(recordType);
              null == _this2._mutator.getValue(typeID, abstractKey) && _this2._handleMissing();
              break;

             case "ClientComponent":
              if (!1 === _this2._shouldProcessClientComponents) break;
              _this2._traverseSelections(selection.fragment.selections, dataID);
              break;

             case "RelayResolver":
             case "RelayLiveResolver":
              _this2._checkResolver(selection, dataID);
              break;

             case "ClientEdgeToClientObject":
              _this2._checkResolver(selection.backingField, dataID);
              break;

             default:
              invariant(!1);
            }
          }));
        }, _proto._checkResolver = function(resolver, dataID) {
          resolver.fragment && this._traverseSelections([ resolver.fragment ], dataID);
        }, _proto._checkModuleImport = function(moduleImport, dataID) {
          var operationLoader = this._operationLoader;
          null === operationLoader && invariant(!1);
          var operationKey = getModuleOperationKey(moduleImport.documentName), operationReference = this._mutator.getValue(dataID, operationKey);
          if (null != operationReference) {
            var normalizationRootNode = operationLoader.get(operationReference);
            if (null != normalizationRootNode) {
              var operation = getOperation(normalizationRootNode), prevVariables = this._variables;
              this._variables = getLocalVariables(this._variables, operation.argumentDefinitions, moduleImport.args), 
              this._traverse(operation, dataID), this._variables = prevVariables;
            } else this._handleMissing();
          } else void 0 === operationReference && this._handleMissing();
        }, _proto._checkScalar = function(field, dataID) {
          var storageKey = getStorageKey(field, this._variables), fieldValue = this._mutator.getValue(dataID, storageKey);
          void 0 === fieldValue && void 0 !== (fieldValue = this._handleMissingScalarField(field, dataID)) && this._mutator.setValue(dataID, storageKey, fieldValue);
        }, _proto._checkLink = function(field, dataID) {
          var storageKey = getStorageKey(field, this._variables), linkedID = this._mutator.getLinkedRecordID(dataID, storageKey);
          void 0 === linkedID && (null != (linkedID = this._handleMissingLinkField(field, dataID)) ? this._mutator.setLinkedRecordID(dataID, storageKey, linkedID) : null === linkedID && this._mutator.setValue(dataID, storageKey, null)), 
          null != linkedID && this._traverse(field, linkedID);
        }, _proto._checkPluralLink = function(field, dataID) {
          var _this3 = this, storageKey = getStorageKey(field, this._variables), linkedIDs = this._mutator.getLinkedRecordIDs(dataID, storageKey);
          void 0 === linkedIDs && (null != (linkedIDs = this._handleMissingPluralLinkField(field, dataID)) ? this._mutator.setLinkedRecordIDs(dataID, storageKey, linkedIDs) : null === linkedIDs && this._mutator.setValue(dataID, storageKey, null)), 
          linkedIDs && linkedIDs.forEach((function(linkedID) {
            null != linkedID && _this3._traverse(field, linkedID);
          }));
        }, _proto._checkActorChange = function(field, dataID) {
          var storageKey = getStorageKey(field, this._variables), record = this._source.get(dataID), tuple = null != record ? RelayModernRecord.getActorLinkedRecordID(record, storageKey) : record;
          if (null == tuple) void 0 === tuple && this._handleMissing(); else {
            var actorIdentifier = tuple[0], linkedID = tuple[1], prevSource = this._source, prevMutator = this._mutator, prevRecordSourceProxy = this._recordSourceProxy, _this$_getMutatorAndR2 = this._getMutatorAndRecordProxyForActor(actorIdentifier), mutator = _this$_getMutatorAndR2[0], recordSourceProxy = _this$_getMutatorAndR2[1];
            this._source = this._getSourceForActor(actorIdentifier), this._mutator = mutator, 
            this._recordSourceProxy = recordSourceProxy, this._assignClientAbstractTypes(field), 
            this._traverse(field, linkedID), this._source = prevSource, this._mutator = prevMutator, 
            this._recordSourceProxy = prevRecordSourceProxy;
          }
        }, _proto._assignClientAbstractTypes = function(node) {
          var clientAbstractTypes = node.clientAbstractTypes;
          if (null != clientAbstractTypes) for (var _i = 0, _Object$keys = Object.keys(clientAbstractTypes); _i < _Object$keys.length; _i++) {
            var _step4, abstractType = _Object$keys[_i], _iterator4 = (0, _createForOfIteratorHelper2.default)(clientAbstractTypes[abstractType]);
            try {
              for (_iterator4.s(); !(_step4 = _iterator4.n()).done; ) {
                var concreteType = _step4.value, typeID = generateTypeID(concreteType);
                null == this._source.get(typeID) && this._mutator.create(typeID, TYPE_SCHEMA_TYPE), 
                null == this._mutator.getValue(typeID, abstractType) && this._mutator.setValue(typeID, abstractType, !0);
              }
            } catch (err) {
              _iterator4.e(err);
            } finally {
              _iterator4.f();
            }
          }
        }, DataChecker;
      }();
      module.exports = {
        check: function(getSourceForActor, getTargetForActor, defaultActorIdentifier, selector, handlers, operationLoader, getDataID, shouldProcessClientComponents, log) {
          null != log && log({
            name: "store.datachecker.start",
            selector
          });
          var dataID = selector.dataID, node = selector.node, variables = selector.variables, result = new DataChecker(getSourceForActor, getTargetForActor, defaultActorIdentifier, variables, handlers, operationLoader, getDataID, shouldProcessClientComponents).check(node, dataID);
          return null != log && log({
            name: "store.datachecker.end",
            selector
          }), result;
        }
      };
    },
    2800: (module, __unused_webpack_exports, __webpack_require__) => {
      "use strict";
      var _interopRequireDefault = __webpack_require__(1440).default, _createForOfIteratorHelper2 = _interopRequireDefault(__webpack_require__(2460)), _toConsumableArray2 = _interopRequireDefault(__webpack_require__(3451)), RelayObservable = __webpack_require__(219), generateID = __webpack_require__(5174), getOperation = __webpack_require__(7782), RelayError = __webpack_require__(5729), RelayFeatureFlags = __webpack_require__(4309), stableCopy = __webpack_require__(6163).stableCopy, withStartAndDuration = __webpack_require__(6531), _require2 = __webpack_require__(2621), generateClientID = _require2.generateClientID, generateUniqueClientID = _require2.generateUniqueClientID, getLocalVariables = __webpack_require__(7586).getLocalVariables, RelayModernRecord = __webpack_require__(5188), _require4 = __webpack_require__(7134), createNormalizationSelector = _require4.createNormalizationSelector, createReaderSelector = _require4.createReaderSelector, RelayRecordSource = __webpack_require__(6886), _require5 = __webpack_require__(6195), ROOT_TYPE = _require5.ROOT_TYPE, TYPENAME_KEY = _require5.TYPENAME_KEY, getStorageKey = _require5.getStorageKey, invariant = __webpack_require__(1235);
      __webpack_require__(3349);
      var Executor = function() {
        function Executor(_ref2) {
          var _this = this, actorIdentifier = _ref2.actorIdentifier, getDataID = _ref2.getDataID, getPublishQueue = _ref2.getPublishQueue, getStore = _ref2.getStore, isClientPayload = _ref2.isClientPayload, operation = _ref2.operation, operationExecutions = _ref2.operationExecutions, operationLoader = _ref2.operationLoader, operationTracker = _ref2.operationTracker, optimisticConfig = _ref2.optimisticConfig, scheduler = _ref2.scheduler, shouldProcessClientComponents = _ref2.shouldProcessClientComponents, sink = _ref2.sink, source = _ref2.source, treatMissingFieldsAsNull = _ref2.treatMissingFieldsAsNull, updater = _ref2.updater, log = _ref2.log, normalizeResponse = _ref2.normalizeResponse;
          this._actorIdentifier = actorIdentifier, this._getDataID = getDataID, this._treatMissingFieldsAsNull = treatMissingFieldsAsNull, 
          this._incrementalPayloadsPending = !1, this._incrementalResults = new Map, this._log = log, 
          this._executeId = generateID(), this._nextSubscriptionId = 0, this._operation = operation, 
          this._operationExecutions = operationExecutions, this._operationLoader = operationLoader, 
          this._operationTracker = operationTracker, this._operationUpdateEpochs = new Map, 
          this._optimisticUpdates = null, this._pendingModulePayloadsCount = 0, this._getPublishQueue = getPublishQueue, 
          this._scheduler = scheduler, this._sink = sink, this._source = new Map, this._state = "started", 
          this._getStore = getStore, this._subscriptions = new Map, this._updater = updater, 
          this._isClientPayload = !0 === isClientPayload, this._isSubscriptionOperation = "subscription" === this._operation.request.node.params.operationKind, 
          this._shouldProcessClientComponents = shouldProcessClientComponents, this._retainDisposables = new Map, 
          this._seenActors = new Set, this._completeFns = [], this._normalizeResponse = normalizeResponse;
          var id = this._nextSubscriptionId++;
          RelayFeatureFlags.PROCESS_OPTIMISTIC_UPDATE_BEFORE_SUBSCRIPTION && null != optimisticConfig && this._processOptimisticResponse(null != optimisticConfig.response ? {
            data: optimisticConfig.response
          } : null, optimisticConfig.updater, !1), source.subscribe({
            complete: function() {
              return _this._complete(id);
            },
            error: function(_error2) {
              return _this._error(_error2);
            },
            next: function(response) {
              try {
                _this._next(id, response);
              } catch (error) {
                sink.error(error);
              }
            },
            start: function(subscription) {
              var _this$_operation$requ;
              _this._start(id, subscription), _this._log({
                name: "execute.start",
                executeId: _this._executeId,
                params: _this._operation.request.node.params,
                variables: _this._operation.request.variables,
                cacheConfig: null !== (_this$_operation$requ = _this._operation.request.cacheConfig) && void 0 !== _this$_operation$requ ? _this$_operation$requ : {}
              });
            }
          }), RelayFeatureFlags.PROCESS_OPTIMISTIC_UPDATE_BEFORE_SUBSCRIPTION || null == optimisticConfig || this._processOptimisticResponse(null != optimisticConfig.response ? {
            data: optimisticConfig.response
          } : null, optimisticConfig.updater, !1);
        }
        var _proto = Executor.prototype;
        return _proto.cancel = function() {
          var _this2 = this;
          if ("completed" !== this._state) {
            this._state = "completed", this._operationExecutions.delete(this._operation.request.identifier), 
            0 !== this._subscriptions.size && (this._subscriptions.forEach((function(sub) {
              return sub.unsubscribe();
            })), this._subscriptions.clear());
            var optimisticUpdates = this._optimisticUpdates;
            null !== optimisticUpdates && (this._optimisticUpdates = null, optimisticUpdates.forEach((function(update) {
              return _this2._getPublishQueueAndSaveActor().revertUpdate(update);
            })), this._runPublishQueue()), this._incrementalResults.clear(), null != this._asyncStoreUpdateDisposable && (this._asyncStoreUpdateDisposable.dispose(), 
            this._asyncStoreUpdateDisposable = null), this._completeFns = [], this._completeOperationTracker(), 
            this._disposeRetainedData();
          }
        }, _proto._updateActiveState = function() {
          var activeState;
          switch (this._state) {
           case "started":
           case "loading_incremental":
            activeState = "active";
            break;

           case "completed":
            activeState = "inactive";
            break;

           case "loading_final":
            activeState = this._pendingModulePayloadsCount > 0 ? "active" : "inactive";
            break;

           default:
            this._state, invariant(!1);
          }
          this._operationExecutions.set(this._operation.request.identifier, activeState);
        }, _proto._schedule = function(task, priority) {
          var _this3 = this, scheduler = this._scheduler;
          if (null != scheduler) {
            var id = this._nextSubscriptionId++;
            RelayObservable.create((function(sink) {
              var cancellationToken = scheduler.schedule((function() {
                try {
                  task(), sink.complete();
                } catch (error) {
                  sink.error(error);
                }
              }), priority);
              return function() {
                return scheduler.cancel(cancellationToken);
              };
            })).subscribe({
              complete: function() {
                return _this3._complete(id);
              },
              error: function(_error3) {
                return _this3._error(_error3);
              },
              start: function(subscription) {
                return _this3._start(id, subscription);
              }
            });
          } else task();
        }, _proto._complete = function(id) {
          this._subscriptions.delete(id), 0 === this._subscriptions.size && (this.cancel(), 
          this._sink.complete(), this._log({
            name: "execute.complete",
            executeId: this._executeId
          }));
        }, _proto._error = function(error) {
          this.cancel(), this._sink.error(error), this._log({
            name: "execute.error",
            executeId: this._executeId,
            error
          });
        }, _proto._start = function(id, subscription) {
          this._subscriptions.set(id, subscription), this._updateActiveState();
        }, _proto._next = function(_id, response) {
          var _this4 = this, priority = "loading_incremental" === this._state ? "low" : "default";
          this._schedule((function() {
            _this4._log({
              name: "execute.next.start",
              executeId: _this4._executeId,
              response,
              operation: _this4._operation
            }), _this4._handleNext(response), _this4._maybeCompleteSubscriptionOperationTracking(), 
            _this4._log({
              name: "execute.next.end",
              executeId: _this4._executeId,
              response,
              operation: _this4._operation
            });
          }), priority);
        }, _proto._handleErrorResponse = function(responses) {
          var _this5 = this, results = [];
          return responses.forEach((function(response) {
            if (null !== response.data || null == response.extensions || response.hasOwnProperty("errors")) {
              if (null == response.data) {
                var errors = response.hasOwnProperty("errors") && null != response.errors ? response.errors : null, messages = errors ? errors.map((function(_ref3) {
                  return _ref3.message;
                })).join("\n") : "(No errors)", error = RelayError.create("RelayNetwork", "No data returned for operation `" + _this5._operation.request.node.params.name + "`, got error(s):\n" + messages + "\n\nSee the error `source` property for more information.");
                throw error.source = {
                  errors,
                  operation: _this5._operation.request.node,
                  variables: _this5._operation.request.variables
                }, error.stack, error;
              }
              var responseWithData = response;
              results.push(responseWithData);
            }
          })), results;
        }, _proto._handleOptimisticResponses = function(responses) {
          var _response$extensions;
          if (responses.length > 1) return responses.some((function(responsePart) {
            var _responsePart$extensi;
            return !0 === (null === (_responsePart$extensi = responsePart.extensions) || void 0 === _responsePart$extensi ? void 0 : _responsePart$extensi.isOptimistic);
          })) && invariant(!1), !1;
          var response = responses[0], isOptimistic = !0 === (null === (_response$extensions = response.extensions) || void 0 === _response$extensions ? void 0 : _response$extensions.isOptimistic);
          return isOptimistic && "started" !== this._state && invariant(!1), !!isOptimistic && (this._processOptimisticResponse(response, null, this._treatMissingFieldsAsNull), 
          this._sink.next(response), !0);
        }, _proto._handleNext = function(response) {
          if ("completed" !== this._state) {
            this._seenActors.clear();
            var responses = Array.isArray(response) ? response : [ response ], responsesWithData = this._handleErrorResponse(responses);
            if (0 === responsesWithData.length) return responses.some((function(x) {
              var _x$extensions;
              return !0 === (null === (_x$extensions = x.extensions) || void 0 === _x$extensions ? void 0 : _x$extensions.is_final);
            })) && (this._state = "loading_final", this._updateActiveState(), this._incrementalPayloadsPending = !1), 
            void this._sink.next(response);
            if (!this._handleOptimisticResponses(responsesWithData)) {
              var _partitionGraphQLResp = function(responses) {
                var nonIncrementalResponses = [], incrementalResponses = [];
                return responses.forEach((function(response) {
                  if (null != response.path || null != response.label) {
                    var label = response.label, path = response.path;
                    null != label && null != path || invariant(!1), incrementalResponses.push({
                      label,
                      path,
                      response
                    });
                  } else nonIncrementalResponses.push(response);
                })), [ nonIncrementalResponses, incrementalResponses ];
              }(responsesWithData), nonIncrementalResponses = _partitionGraphQLResp[0], incrementalResponses = _partitionGraphQLResp[1], hasNonIncrementalResponses = nonIncrementalResponses.length > 0;
              if (hasNonIncrementalResponses) {
                if (this._isSubscriptionOperation) {
                  var nextID = generateUniqueClientID();
                  this._operation = {
                    request: this._operation.request,
                    fragment: createReaderSelector(this._operation.fragment.node, nextID, this._operation.fragment.variables, this._operation.fragment.owner),
                    root: createNormalizationSelector(this._operation.root.node, nextID, this._operation.root.variables)
                  };
                }
                var payloadFollowups = this._processResponses(nonIncrementalResponses);
                this._processPayloadFollowups(payloadFollowups);
              }
              if (incrementalResponses.length > 0) {
                var _payloadFollowups = this._processIncrementalResponses(incrementalResponses);
                this._processPayloadFollowups(_payloadFollowups);
              }
              this._isSubscriptionOperation && (null == responsesWithData[0].extensions ? responsesWithData[0].extensions = {
                __relay_subscription_root_id: this._operation.fragment.dataID
              } : responsesWithData[0].extensions.__relay_subscription_root_id = this._operation.fragment.dataID);
              var updatedOwners = this._runPublishQueue(hasNonIncrementalResponses ? this._operation : void 0);
              hasNonIncrementalResponses && this._incrementalPayloadsPending && this._retainData(), 
              this._updateOperationTracker(updatedOwners), this._sink.next(response);
            }
          }
        }, _proto._processOptimisticResponse = function(response, updater, treatMissingFieldsAsNull) {
          var _this6 = this;
          if (null !== this._optimisticUpdates && invariant(!1), null != response || null != updater) {
            var optimisticUpdates = [];
            if (response) {
              var payload = this._normalizeResponse(response, this._operation.root, ROOT_TYPE, {
                actorIdentifier: this._actorIdentifier,
                getDataID: this._getDataID,
                path: [],
                shouldProcessClientComponents: this._shouldProcessClientComponents,
                treatMissingFieldsAsNull
              });
              validateOptimisticResponsePayload(payload), optimisticUpdates.push({
                operation: this._operation,
                payload,
                updater
              }), this._processOptimisticFollowups(payload, optimisticUpdates);
            } else updater && optimisticUpdates.push({
              operation: this._operation,
              payload: {
                errors: null,
                fieldPayloads: null,
                incrementalPlaceholders: null,
                followupPayloads: null,
                source: RelayRecordSource.create(),
                isFinal: !1
              },
              updater
            });
            this._optimisticUpdates = optimisticUpdates, optimisticUpdates.forEach((function(update) {
              return _this6._getPublishQueueAndSaveActor().applyUpdate(update);
            }));
            var updatedOwners = this._runPublishQueue();
            RelayFeatureFlags.ENABLE_OPERATION_TRACKER_OPTIMISTIC_UPDATES && this._updateOperationTracker(updatedOwners);
          }
        }, _proto._processOptimisticFollowups = function(payload, optimisticUpdates) {
          if (payload.followupPayloads && payload.followupPayloads.length) {
            var _step, followupPayloads = payload.followupPayloads, _iterator = (0, _createForOfIteratorHelper2.default)(followupPayloads);
            try {
              for (_iterator.s(); !(_step = _iterator.n()).done; ) {
                var followupPayload = _step.value;
                switch (followupPayload.kind) {
                 case "ModuleImportPayload":
                  var operation = this._expectOperationLoader().get(followupPayload.operationReference);
                  if (null == operation) this._processAsyncOptimisticModuleImport(followupPayload); else {
                    var moduleImportOptimisticUpdates = this._processOptimisticModuleImport(operation, followupPayload);
                    optimisticUpdates.push.apply(optimisticUpdates, (0, _toConsumableArray2.default)(moduleImportOptimisticUpdates));
                  }
                  break;

                 case "ActorPayload":
                  break;

                 default:
                  invariant(!1);
                }
              }
            } catch (err) {
              _iterator.e(err);
            } finally {
              _iterator.f();
            }
          }
        }, _proto._normalizeFollowupPayload = function(followupPayload, normalizationNode) {
          var variables;
          variables = "SplitOperation" === normalizationNode.kind && "ModuleImportPayload" === followupPayload.kind ? getLocalVariables(followupPayload.variables, normalizationNode.argumentDefinitions, followupPayload.args) : followupPayload.variables;
          var selector = createNormalizationSelector(normalizationNode, followupPayload.dataID, variables);
          return this._normalizeResponse({
            data: followupPayload.data
          }, selector, followupPayload.typeName, {
            actorIdentifier: this._actorIdentifier,
            getDataID: this._getDataID,
            path: followupPayload.path,
            treatMissingFieldsAsNull: this._treatMissingFieldsAsNull,
            shouldProcessClientComponents: this._shouldProcessClientComponents
          });
        }, _proto._processOptimisticModuleImport = function(normalizationRootNode, moduleImportPayload) {
          var operation = getOperation(normalizationRootNode), optimisticUpdates = [], modulePayload = this._normalizeFollowupPayload(moduleImportPayload, operation);
          return validateOptimisticResponsePayload(modulePayload), optimisticUpdates.push({
            operation: this._operation,
            payload: modulePayload,
            updater: null
          }), this._processOptimisticFollowups(modulePayload, optimisticUpdates), optimisticUpdates;
        }, _proto._processAsyncOptimisticModuleImport = function(moduleImportPayload) {
          var _this7 = this;
          this._expectOperationLoader().load(moduleImportPayload.operationReference).then((function(operation) {
            if (null != operation && "started" === _this7._state) {
              var _this$_optimisticUpda, moduleImportOptimisticUpdates = _this7._processOptimisticModuleImport(operation, moduleImportPayload);
              if (moduleImportOptimisticUpdates.forEach((function(update) {
                return _this7._getPublishQueueAndSaveActor().applyUpdate(update);
              })), null == _this7._optimisticUpdates) ; else (_this$_optimisticUpda = _this7._optimisticUpdates).push.apply(_this$_optimisticUpda, (0, 
              _toConsumableArray2.default)(moduleImportOptimisticUpdates)), _this7._runPublishQueue();
            }
          }));
        }, _proto._processResponses = function(responses) {
          var _this8 = this;
          return this._log({
            name: "execute.normalize.start",
            operation: this._operation
          }), null !== this._optimisticUpdates && (this._optimisticUpdates.forEach((function(update) {
            _this8._getPublishQueueAndSaveActor().revertUpdate(update);
          })), this._optimisticUpdates = null), this._incrementalPayloadsPending = !1, this._incrementalResults.clear(), 
          this._source.clear(), responses.map((function(payloadPart) {
            var relayPayload = _this8._normalizeResponse(payloadPart, _this8._operation.root, ROOT_TYPE, {
              actorIdentifier: _this8._actorIdentifier,
              getDataID: _this8._getDataID,
              path: [],
              treatMissingFieldsAsNull: _this8._treatMissingFieldsAsNull,
              shouldProcessClientComponents: _this8._shouldProcessClientComponents
            });
            return _this8._getPublishQueueAndSaveActor().commitPayload(_this8._operation, relayPayload, _this8._updater), 
            _this8._log({
              name: "execute.normalize.end",
              operation: _this8._operation
            }), relayPayload;
          }));
        }, _proto._processPayloadFollowups = function(payloads) {
          var _this9 = this;
          "completed" !== this._state && payloads.forEach((function(payload) {
            var incrementalPlaceholders = payload.incrementalPlaceholders, followupPayloads = payload.followupPayloads, isFinal = payload.isFinal;
            if (_this9._state = isFinal ? "loading_final" : "loading_incremental", _this9._updateActiveState(), 
            isFinal && (_this9._incrementalPayloadsPending = !1), followupPayloads && 0 !== followupPayloads.length && followupPayloads.forEach((function(followupPayload) {
              var _followupPayload$acto, prevActorIdentifier = _this9._actorIdentifier;
              _this9._actorIdentifier = null !== (_followupPayload$acto = followupPayload.actorIdentifier) && void 0 !== _followupPayload$acto ? _followupPayload$acto : _this9._actorIdentifier, 
              _this9._processFollowupPayload(followupPayload), _this9._actorIdentifier = prevActorIdentifier;
            })), incrementalPlaceholders && 0 !== incrementalPlaceholders.length && (_this9._incrementalPayloadsPending = "loading_final" !== _this9._state, 
            incrementalPlaceholders.forEach((function(incrementalPlaceholder) {
              var _incrementalPlacehold, prevActorIdentifier = _this9._actorIdentifier;
              _this9._actorIdentifier = null !== (_incrementalPlacehold = incrementalPlaceholder.actorIdentifier) && void 0 !== _incrementalPlacehold ? _incrementalPlacehold : _this9._actorIdentifier, 
              _this9._processIncrementalPlaceholder(payload, incrementalPlaceholder), _this9._actorIdentifier = prevActorIdentifier;
            })), _this9._isClientPayload || "loading_final" === _this9._state)) {
              var relayPayloads = [];
              incrementalPlaceholders.forEach((function(placeholder) {
                "defer" === placeholder.kind && relayPayloads.push(_this9._processDeferResponse(placeholder.label, placeholder.path, placeholder, {
                  data: placeholder.data
                }));
              })), relayPayloads.length > 0 && _this9._processPayloadFollowups(relayPayloads);
            }
          }));
        }, _proto._maybeCompleteSubscriptionOperationTracking = function() {
          this._isSubscriptionOperation && 0 === this._pendingModulePayloadsCount && !1 === this._incrementalPayloadsPending && this._completeOperationTracker();
        }, _proto._processFollowupPayload = function(followupPayload) {
          var _this10 = this;
          switch (followupPayload.kind) {
           case "ModuleImportPayload":
            var operationLoader = this._expectOperationLoader(), node = operationLoader.get(followupPayload.operationReference);
            if (null != node) this._processFollowupPayloadWithNormalizationNode(followupPayload, getOperation(node)); else {
              var id = this._nextSubscriptionId++;
              this._pendingModulePayloadsCount++;
              var decrementPendingCount = function() {
                _this10._pendingModulePayloadsCount--, _this10._maybeCompleteSubscriptionOperationTracking();
              }, networkObservable = RelayObservable.from(new Promise((function(resolve, reject) {
                operationLoader.load(followupPayload.operationReference).then(resolve, reject);
              })));
              RelayObservable.create((function(sink) {
                var cancellationToken, subscription = networkObservable.subscribe({
                  next: function(loadedNode) {
                    if (null != loadedNode) {
                      var publishModuleImportPayload = function() {
                        try {
                          var operation = getOperation(loadedNode), batchAsyncModuleUpdatesFN = RelayFeatureFlags.BATCH_ASYNC_MODULE_UPDATES_FN, shouldScheduleAsyncStoreUpdate = null != batchAsyncModuleUpdatesFN && _this10._pendingModulePayloadsCount > 1, _withStartAndDuration = withStartAndDuration((function() {
                            if (_this10._handleFollowupPayload(followupPayload, operation), shouldScheduleAsyncStoreUpdate) _this10._scheduleAsyncStoreUpdate(batchAsyncModuleUpdatesFN, sink.complete); else {
                              var updatedOwners = _this10._runPublishQueue();
                              _this10._updateOperationTracker(updatedOwners);
                            }
                          })), duration = (_withStartAndDuration[0], _withStartAndDuration[1]);
                          _this10._log({
                            name: "execute.async.module",
                            executeId: _this10._executeId,
                            operationName: operation.name,
                            duration
                          }), shouldScheduleAsyncStoreUpdate || sink.complete();
                        } catch (error) {
                          sink.error(error);
                        }
                      }, scheduler = _this10._scheduler;
                      null == scheduler ? publishModuleImportPayload() : cancellationToken = scheduler.schedule(publishModuleImportPayload);
                    } else sink.complete();
                  },
                  error: sink.error
                });
                return function() {
                  subscription.unsubscribe(), null != _this10._scheduler && null != cancellationToken && _this10._scheduler.cancel(cancellationToken);
                };
              })).subscribe({
                complete: function() {
                  _this10._complete(id), decrementPendingCount();
                },
                error: function(_error4) {
                  _this10._error(_error4), decrementPendingCount();
                },
                start: function(subscription) {
                  return _this10._start(id, subscription);
                }
              });
            }
            break;

           case "ActorPayload":
            this._processFollowupPayloadWithNormalizationNode(followupPayload, followupPayload.node);
            break;

           default:
            invariant(!1);
          }
        }, _proto._processFollowupPayloadWithNormalizationNode = function(followupPayload, normalizationNode) {
          this._handleFollowupPayload(followupPayload, normalizationNode), this._maybeCompleteSubscriptionOperationTracking();
        }, _proto._handleFollowupPayload = function(followupPayload, normalizationNode) {
          var relayPayload = this._normalizeFollowupPayload(followupPayload, normalizationNode);
          this._getPublishQueueAndSaveActor().commitPayload(this._operation, relayPayload), 
          this._processPayloadFollowups([ relayPayload ]);
        }, _proto._processIncrementalPlaceholder = function(relayPayload, placeholder) {
          var _relayPayload$fieldPa, label = placeholder.label, pathKey = placeholder.path.map(String).join("."), resultForLabel = this._incrementalResults.get(label);
          null == resultForLabel && (resultForLabel = new Map, this._incrementalResults.set(label, resultForLabel));
          var parentID, resultForPath = resultForLabel.get(pathKey), pendingResponses = null != resultForPath && "response" === resultForPath.kind ? resultForPath.responses : null;
          resultForLabel.set(pathKey, {
            kind: "placeholder",
            placeholder
          }), "stream" === placeholder.kind ? parentID = placeholder.parentID : "defer" === placeholder.kind ? parentID = placeholder.selector.dataID : invariant(!1);
          var nextParentRecord, nextParentPayloads, parentRecord = relayPayload.source.get(parentID), parentPayloads = (null !== (_relayPayload$fieldPa = relayPayload.fieldPayloads) && void 0 !== _relayPayload$fieldPa ? _relayPayload$fieldPa : []).filter((function(fieldPayload) {
            var fieldID = generateClientID(fieldPayload.dataID, fieldPayload.fieldKey);
            return fieldPayload.dataID === parentID || fieldID === parentID;
          }));
          null == parentRecord && invariant(!1);
          var previousParentEntry = this._source.get(parentID);
          if (null != previousParentEntry) {
            nextParentRecord = RelayModernRecord.update(previousParentEntry.record, parentRecord);
            var handlePayloads = new Map, dedupePayload = function(payload) {
              var value, _JSON$stringify, key = (value = payload, null !== (_JSON$stringify = JSON.stringify(stableCopy(value))) && void 0 !== _JSON$stringify ? _JSON$stringify : "");
              handlePayloads.set(key, payload);
            };
            previousParentEntry.fieldPayloads.forEach(dedupePayload), parentPayloads.forEach(dedupePayload), 
            nextParentPayloads = Array.from(handlePayloads.values());
          } else nextParentRecord = parentRecord, nextParentPayloads = parentPayloads;
          if (this._source.set(parentID, {
            record: nextParentRecord,
            fieldPayloads: nextParentPayloads
          }), null != pendingResponses) {
            var payloadFollowups = this._processIncrementalResponses(pendingResponses);
            this._processPayloadFollowups(payloadFollowups);
          }
        }, _proto._processIncrementalResponses = function(incrementalResponses) {
          var _this11 = this, relayPayloads = [];
          return incrementalResponses.forEach((function(incrementalResponse) {
            var label = incrementalResponse.label, path = incrementalResponse.path, response = incrementalResponse.response, resultForLabel = _this11._incrementalResults.get(label);
            if (null == resultForLabel && (resultForLabel = new Map, _this11._incrementalResults.set(label, resultForLabel)), 
            -1 !== label.indexOf("$defer$")) {
              var pathKey = path.map(String).join("."), resultForPath = resultForLabel.get(pathKey);
              if (null == resultForPath) return resultForPath = {
                kind: "response",
                responses: [ incrementalResponse ]
              }, void resultForLabel.set(pathKey, resultForPath);
              if ("response" === resultForPath.kind) return void resultForPath.responses.push(incrementalResponse);
              var placeholder = resultForPath.placeholder;
              "defer" !== placeholder.kind && invariant(!1), relayPayloads.push(_this11._processDeferResponse(label, path, placeholder, response));
            } else {
              var _pathKey = path.slice(0, -2).map(String).join("."), _resultForPath = resultForLabel.get(_pathKey);
              if (null == _resultForPath) return _resultForPath = {
                kind: "response",
                responses: [ incrementalResponse ]
              }, void resultForLabel.set(_pathKey, _resultForPath);
              if ("response" === _resultForPath.kind) return void _resultForPath.responses.push(incrementalResponse);
              var _placeholder = _resultForPath.placeholder;
              "stream" !== _placeholder.kind && invariant(!1), relayPayloads.push(_this11._processStreamResponse(label, path, _placeholder, response));
            }
          })), relayPayloads;
        }, _proto._processDeferResponse = function(label, path, placeholder, response) {
          var _placeholder$actorIde, parentID = placeholder.selector.dataID, prevActorIdentifier = this._actorIdentifier;
          this._actorIdentifier = null !== (_placeholder$actorIde = placeholder.actorIdentifier) && void 0 !== _placeholder$actorIde ? _placeholder$actorIde : this._actorIdentifier;
          var relayPayload = this._normalizeResponse(response, placeholder.selector, placeholder.typeName, {
            actorIdentifier: this._actorIdentifier,
            getDataID: this._getDataID,
            path: placeholder.path,
            treatMissingFieldsAsNull: this._treatMissingFieldsAsNull,
            shouldProcessClientComponents: this._shouldProcessClientComponents
          });
          this._getPublishQueueAndSaveActor().commitPayload(this._operation, relayPayload);
          var parentEntry = this._source.get(parentID);
          null == parentEntry && invariant(!1);
          var fieldPayloads = parentEntry.fieldPayloads;
          if (0 !== fieldPayloads.length) {
            var _response$extensions2, handleFieldsRelayPayload = {
              errors: null,
              fieldPayloads,
              incrementalPlaceholders: null,
              followupPayloads: null,
              source: RelayRecordSource.create(),
              isFinal: !0 === (null === (_response$extensions2 = response.extensions) || void 0 === _response$extensions2 ? void 0 : _response$extensions2.is_final)
            };
            this._getPublishQueueAndSaveActor().commitPayload(this._operation, handleFieldsRelayPayload);
          }
          return this._actorIdentifier = prevActorIdentifier, relayPayload;
        }, _proto._processStreamResponse = function(label, path, placeholder, response) {
          var parentID = placeholder.parentID, node = placeholder.node, variables = placeholder.variables, actorIdentifier = placeholder.actorIdentifier, prevActorIdentifier = this._actorIdentifier;
          this._actorIdentifier = null != actorIdentifier ? actorIdentifier : this._actorIdentifier;
          var field = node.selections[0];
          (null == field || "LinkedField" !== field.kind || !0 !== field.plural) && invariant(!1);
          var _this$_normalizeStrea = this._normalizeStreamItem(response, parentID, field, variables, path, placeholder.path), fieldPayloads = _this$_normalizeStrea.fieldPayloads, itemID = _this$_normalizeStrea.itemID, itemIndex = _this$_normalizeStrea.itemIndex, prevIDs = _this$_normalizeStrea.prevIDs, relayPayload = _this$_normalizeStrea.relayPayload, storageKey = _this$_normalizeStrea.storageKey;
          if (this._getPublishQueueAndSaveActor().commitPayload(this._operation, relayPayload, (function(store) {
            var currentParentRecord = store.get(parentID);
            if (null != currentParentRecord) {
              var currentItems = currentParentRecord.getLinkedRecords(storageKey);
              if (null != currentItems && currentItems.length === prevIDs.length && !currentItems.some((function(currentItem, index) {
                return prevIDs[index] !== (currentItem && currentItem.getDataID());
              }))) {
                var nextItems = (0, _toConsumableArray2.default)(currentItems);
                nextItems[itemIndex] = store.get(itemID), currentParentRecord.setLinkedRecords(nextItems, storageKey);
              }
            }
          })), 0 !== fieldPayloads.length) {
            var handleFieldsRelayPayload = {
              errors: null,
              fieldPayloads,
              incrementalPlaceholders: null,
              followupPayloads: null,
              source: RelayRecordSource.create(),
              isFinal: !1
            };
            this._getPublishQueueAndSaveActor().commitPayload(this._operation, handleFieldsRelayPayload);
          }
          return this._actorIdentifier = prevActorIdentifier, relayPayload;
        }, _proto._normalizeStreamItem = function(response, parentID, field, variables, path, normalizationPath) {
          var _field$alias, _field$concreteType, _ref, _this$_getDataID, data = response.data;
          "object" != typeof data && invariant(!1);
          var responseKey = null !== (_field$alias = field.alias) && void 0 !== _field$alias ? _field$alias : field.name, storageKey = getStorageKey(field, variables), parentEntry = this._source.get(parentID);
          null == parentEntry && invariant(!1);
          var parentRecord = parentEntry.record, fieldPayloads = parentEntry.fieldPayloads, prevIDs = RelayModernRecord.getLinkedRecordIDs(parentRecord, storageKey);
          null == prevIDs && invariant(!1);
          var finalPathEntry = path[path.length - 1], itemIndex = parseInt(finalPathEntry, 10);
          itemIndex === finalPathEntry && itemIndex >= 0 || invariant(!1);
          var typeName = null !== (_field$concreteType = field.concreteType) && void 0 !== _field$concreteType ? _field$concreteType : data[TYPENAME_KEY];
          "string" != typeof typeName && invariant(!1);
          var itemID = null !== (_ref = null !== (_this$_getDataID = this._getDataID(data, typeName)) && void 0 !== _this$_getDataID ? _this$_getDataID : null == prevIDs ? void 0 : prevIDs[itemIndex]) && void 0 !== _ref ? _ref : generateClientID(parentID, storageKey, itemIndex);
          "string" != typeof itemID && invariant(!1);
          var selector = createNormalizationSelector(field, itemID, variables), nextParentRecord = RelayModernRecord.clone(parentRecord), nextIDs = (0, 
          _toConsumableArray2.default)(prevIDs);
          return nextIDs[itemIndex] = itemID, RelayModernRecord.setLinkedRecordIDs(nextParentRecord, storageKey, nextIDs), 
          this._source.set(parentID, {
            record: nextParentRecord,
            fieldPayloads
          }), {
            fieldPayloads,
            itemID,
            itemIndex,
            prevIDs,
            relayPayload: this._normalizeResponse(response, selector, typeName, {
              actorIdentifier: this._actorIdentifier,
              getDataID: this._getDataID,
              path: [].concat((0, _toConsumableArray2.default)(normalizationPath), [ responseKey, String(itemIndex) ]),
              treatMissingFieldsAsNull: this._treatMissingFieldsAsNull,
              shouldProcessClientComponents: this._shouldProcessClientComponents
            }),
            storageKey
          };
        }, _proto._scheduleAsyncStoreUpdate = function(scheduleFn, completeFn) {
          var _this12 = this;
          this._completeFns.push(completeFn), null == this._asyncStoreUpdateDisposable && (this._asyncStoreUpdateDisposable = scheduleFn((function() {
            _this12._asyncStoreUpdateDisposable = null;
            var updatedOwners = _this12._runPublishQueue();
            _this12._updateOperationTracker(updatedOwners);
            var _step2, _iterator2 = (0, _createForOfIteratorHelper2.default)(_this12._completeFns);
            try {
              for (_iterator2.s(); !(_step2 = _iterator2.n()).done; ) {
                (0, _step2.value)();
              }
            } catch (err) {
              _iterator2.e(err);
            } finally {
              _iterator2.f();
            }
            _this12._completeFns = [];
          })));
        }, _proto._updateOperationTracker = function(updatedOwners) {
          null != updatedOwners && updatedOwners.length > 0 && this._operationTracker.update(this._operation.request, new Set(updatedOwners));
        }, _proto._completeOperationTracker = function() {
          this._operationTracker.complete(this._operation.request);
        }, _proto._getPublishQueueAndSaveActor = function() {
          return this._seenActors.add(this._actorIdentifier), this._getPublishQueue(this._actorIdentifier);
        }, _proto._getActorsToVisit = function() {
          return 0 === this._seenActors.size ? new Set([ this._actorIdentifier ]) : this._seenActors;
        }, _proto._runPublishQueue = function(operation) {
          var _step3, updatedOwners = new Set, _iterator3 = (0, _createForOfIteratorHelper2.default)(this._getActorsToVisit());
          try {
            for (_iterator3.s(); !(_step3 = _iterator3.n()).done; ) {
              var actorIdentifier = _step3.value;
              this._getPublishQueue(actorIdentifier).run(operation).forEach((function(owner) {
                return updatedOwners.add(owner);
              }));
            }
          } catch (err) {
            _iterator3.e(err);
          } finally {
            _iterator3.f();
          }
          return Array.from(updatedOwners);
        }, _proto._retainData = function() {
          var _step4, _iterator4 = (0, _createForOfIteratorHelper2.default)(this._getActorsToVisit());
          try {
            for (_iterator4.s(); !(_step4 = _iterator4.n()).done; ) {
              var actorIdentifier = _step4.value;
              this._retainDisposables.has(actorIdentifier) || this._retainDisposables.set(actorIdentifier, this._getStore(actorIdentifier).retain(this._operation));
            }
          } catch (err) {
            _iterator4.e(err);
          } finally {
            _iterator4.f();
          }
        }, _proto._disposeRetainedData = function() {
          var _step5, _iterator5 = (0, _createForOfIteratorHelper2.default)(this._retainDisposables.values());
          try {
            for (_iterator5.s(); !(_step5 = _iterator5.n()).done; ) {
              _step5.value.dispose();
            }
          } catch (err) {
            _iterator5.e(err);
          } finally {
            _iterator5.f();
          }
          this._retainDisposables.clear();
        }, _proto._expectOperationLoader = function() {
          var operationLoader = this._operationLoader;
          return operationLoader || invariant(!1), operationLoader;
        }, Executor;
      }();
      function validateOptimisticResponsePayload(payload) {
        var incrementalPlaceholders = payload.incrementalPlaceholders;
        null != incrementalPlaceholders && 0 !== incrementalPlaceholders.length && invariant(!1);
      }
      module.exports = {
        execute: function(config) {
          return new Executor(config);
        }
      };
    },
    7586: (module, __unused_webpack_exports, __webpack_require__) => {
      "use strict";
      var _objectSpread2 = (0, __webpack_require__(1440).default)(__webpack_require__(2977)), getArgumentValues = __webpack_require__(6195).getArgumentValues, invariant = __webpack_require__(1235);
      module.exports = {
        getLocalVariables: function(currentVariables, argumentDefinitions, args) {
          if (null == argumentDefinitions) return currentVariables;
          var nextVariables = (0, _objectSpread2.default)({}, currentVariables), nextArgs = args ? getArgumentValues(args, currentVariables) : {};
          return argumentDefinitions.forEach((function(def) {
            var _nextArgs$def$name, value = null !== (_nextArgs$def$name = nextArgs[def.name]) && void 0 !== _nextArgs$def$name ? _nextArgs$def$name : def.defaultValue;
            nextVariables[def.name] = value;
          })), nextVariables;
        },
        getFragmentVariables: function(fragment, rootVariables, argumentVariables) {
          return null == fragment.argumentDefinitions ? argumentVariables : (fragment.argumentDefinitions.forEach((function(definition) {
            if (!argumentVariables.hasOwnProperty(definition.name)) switch (variables = variables || (0, 
            _objectSpread2.default)({}, argumentVariables), definition.kind) {
             case "LocalArgument":
              variables[definition.name] = definition.defaultValue;
              break;

             case "RootArgument":
              if (!rootVariables.hasOwnProperty(definition.name)) {
                variables[definition.name] = void 0;
                break;
              }
              variables[definition.name] = rootVariables[definition.name];
              break;

             default:
              invariant(!1);
            }
          })), variables || argumentVariables);
          var variables;
        },
        getOperationVariables: function(operation, providedVariables, variables) {
          var operationVariables = {};
          return operation.argumentDefinitions.forEach((function(def) {
            var value = def.defaultValue;
            null != variables[def.name] && (value = variables[def.name]), operationVariables[def.name] = value;
          })), null != providedVariables && Object.keys(providedVariables).forEach((function(varName) {
            operationVariables[varName] = providedVariables[varName].get();
          })), operationVariables;
        }
      };
    },
    5135: (module, __unused_webpack_exports, __webpack_require__) => {
      "use strict";
      var _interopRequireDefault = __webpack_require__(1440).default, _objectSpread2 = _interopRequireDefault(__webpack_require__(2977)), _objectWithoutPropertiesLoose2 = _interopRequireDefault(__webpack_require__(8141)), _createForOfIteratorHelper2 = _interopRequireDefault(__webpack_require__(2460)), _toConsumableArray2 = _interopRequireDefault(__webpack_require__(3451)), _excluded = [ "path", "locations" ], SELF = Symbol("$SELF");
      function recursivelyCopyErrorsIntoArray(trieOrSet, errors) {
        var _step2, _iterator2 = (0, _createForOfIteratorHelper2.default)(trieOrSet);
        try {
          for (_iterator2.s(); !(_step2 = _iterator2.n()).done; ) {
            var _step2$value = _step2.value, childKey = _step2$value[0], value = _step2$value[1], oldLength = errors.length;
            if (Array.isArray(value) ? errors.push.apply(errors, (0, _toConsumableArray2.default)(value)) : recursivelyCopyErrorsIntoArray(value, errors), 
            childKey !== SELF) for (var newLength = errors.length, index = oldLength; index < newLength; index++) {
              var error = errors[index];
              null == error.path ? errors[index] = (0, _objectSpread2.default)((0, _objectSpread2.default)({}, error), {}, {
                path: [ childKey ]
              }) : error.path.unshift(childKey);
            }
          }
        } catch (err) {
          _iterator2.e(err);
        } finally {
          _iterator2.f();
        }
      }
      module.exports = {
        SELF,
        buildErrorTrie: function(errors) {
          if (null == errors) return null;
          var _step, trie = new Map, _iterator = (0, _createForOfIteratorHelper2.default)(errors);
          try {
            for (_iterator.s(); !(_step = _iterator.n()).done; ) {
              var _step$value = _step.value, path = _step$value.path, error = (_step$value.locations, 
              (0, _objectWithoutPropertiesLoose2.default)(_step$value, _excluded));
              if (null != path) {
                var length = path.length;
                if (0 !== length) {
                  for (var lastIndex = length - 1, currentTrie = trie, index = 0; index < lastIndex; index++) {
                    var key = path[index], existingValue = currentTrie.get(key);
                    if (existingValue instanceof Map) currentTrie = existingValue; else {
                      var newValue = new Map;
                      Array.isArray(existingValue) && newValue.set(SELF, existingValue), currentTrie.set(key, newValue), 
                      currentTrie = newValue;
                    }
                  }
                  var lastKey = path[lastIndex], container = currentTrie.get(lastKey);
                  container instanceof Map && (container = (currentTrie = container).get(lastKey), 
                  lastKey = SELF), Array.isArray(container) ? container.push(error) : currentTrie.set(lastKey, [ error ]);
                }
              }
            }
          } catch (err) {
            _iterator.e(err);
          } finally {
            _iterator.f();
          }
          return trie;
        },
        getNestedErrorTrieByKey: function(trie, key) {
          var value = trie.get(key);
          return value instanceof Map ? value : null;
        },
        getErrorsByKey: function(trie, key) {
          var value = trie.get(key);
          if (null == value) return null;
          if (Array.isArray(value)) return value;
          var errors = [];
          return recursivelyCopyErrorsIntoArray(value, errors), errors;
        }
      };
    },
    8262: (module, __unused_webpack_exports, __webpack_require__) => {
      "use strict";
      var _objectSpread2 = (0, __webpack_require__(1440).default)(__webpack_require__(2977)), RelayDefaultHandlerProvider = __webpack_require__(1442), _require = __webpack_require__(5792), INTERNAL_ACTOR_IDENTIFIER_DO_NOT_USE = _require.INTERNAL_ACTOR_IDENTIFIER_DO_NOT_USE, assertInternalActorIdentifier = _require.assertInternalActorIdentifier, RelayObservable = __webpack_require__(219), wrapNetworkWithLogObserver = __webpack_require__(9216), RelayOperationTracker = __webpack_require__(3367), registerEnvironmentWithDevTools = __webpack_require__(7550), defaultGetDataID = __webpack_require__(206), defaultRelayFieldLogger = __webpack_require__(7087), normalizeResponse = __webpack_require__(2772), OperationExecutor = __webpack_require__(2800), RelayPublishQueue = __webpack_require__(7684), RelayRecordSource = __webpack_require__(6886), RelayModernEnvironment = (__webpack_require__(1235), 
      function() {
        function RelayModernEnvironment(config) {
          var _config$log, _config$relayFieldLog, _config$UNSTABLE_defa, _config$getDataID, _config$missingFieldH, _config$handlerProvid, _config$scheduler, _config$isServer, _config$normalizeResp, _config$operationTrac, _this = this;
          this.configName = config.configName, this._treatMissingFieldsAsNull = !0 === config.treatMissingFieldsAsNull;
          var operationLoader = config.operationLoader;
          this.__log = null !== (_config$log = config.log) && void 0 !== _config$log ? _config$log : emptyFunction, 
          this.relayFieldLogger = null !== (_config$relayFieldLog = config.relayFieldLogger) && void 0 !== _config$relayFieldLog ? _config$relayFieldLog : defaultRelayFieldLogger, 
          this._defaultRenderPolicy = null !== (_config$UNSTABLE_defa = config.UNSTABLE_defaultRenderPolicy) && void 0 !== _config$UNSTABLE_defa ? _config$UNSTABLE_defa : "partial", 
          this._operationLoader = operationLoader, this._operationExecutions = new Map, this._network = wrapNetworkWithLogObserver(this, config.network), 
          this._getDataID = null !== (_config$getDataID = config.getDataID) && void 0 !== _config$getDataID ? _config$getDataID : defaultGetDataID, 
          this._missingFieldHandlers = null !== (_config$missingFieldH = config.missingFieldHandlers) && void 0 !== _config$missingFieldH ? _config$missingFieldH : [], 
          this._publishQueue = new RelayPublishQueue(config.store, null !== (_config$handlerProvid = config.handlerProvider) && void 0 !== _config$handlerProvid ? _config$handlerProvid : RelayDefaultHandlerProvider, this._getDataID, this._missingFieldHandlers), 
          this._scheduler = null !== (_config$scheduler = config.scheduler) && void 0 !== _config$scheduler ? _config$scheduler : null, 
          this._store = config.store, this.options = config.options, this._isServer = null !== (_config$isServer = config.isServer) && void 0 !== _config$isServer && _config$isServer, 
          this._normalizeResponse = null !== (_config$normalizeResp = config.normalizeResponse) && void 0 !== _config$normalizeResp ? _config$normalizeResp : normalizeResponse, 
          this.__setNet = function(newNet) {
            return _this._network = wrapNetworkWithLogObserver(_this, newNet);
          }, this._operationTracker = null !== (_config$operationTrac = config.operationTracker) && void 0 !== _config$operationTrac ? _config$operationTrac : new RelayOperationTracker, 
          this._shouldProcessClientComponents = config.shouldProcessClientComponents, registerEnvironmentWithDevTools(this);
        }
        var _proto = RelayModernEnvironment.prototype;
        return _proto.getStore = function() {
          return this._store;
        }, _proto.getNetwork = function() {
          return this._network;
        }, _proto.getOperationTracker = function() {
          return this._operationTracker;
        }, _proto.getScheduler = function() {
          return this._scheduler;
        }, _proto.isRequestActive = function(requestIdentifier) {
          return "active" === this._operationExecutions.get(requestIdentifier);
        }, _proto.UNSTABLE_getDefaultRenderPolicy = function() {
          return this._defaultRenderPolicy;
        }, _proto.applyUpdate = function(optimisticUpdate) {
          var _this2 = this;
          return this._scheduleUpdates((function() {
            _this2._publishQueue.applyUpdate(optimisticUpdate), _this2._publishQueue.run();
          })), {
            dispose: function() {
              _this2._scheduleUpdates((function() {
                _this2._publishQueue.revertUpdate(optimisticUpdate), _this2._publishQueue.run();
              }));
            }
          };
        }, _proto.revertUpdate = function(update) {
          var _this3 = this;
          this._scheduleUpdates((function() {
            _this3._publishQueue.revertUpdate(update), _this3._publishQueue.run();
          }));
        }, _proto.replaceUpdate = function(update, newUpdate) {
          var _this4 = this;
          this._scheduleUpdates((function() {
            _this4._publishQueue.revertUpdate(update), _this4._publishQueue.applyUpdate(newUpdate), 
            _this4._publishQueue.run();
          }));
        }, _proto.applyMutation = function(optimisticConfig) {
          var subscription = this._execute({
            createSource: function() {
              return RelayObservable.create((function(_sink) {}));
            },
            isClientPayload: !1,
            operation: optimisticConfig.operation,
            optimisticConfig,
            updater: null
          }).subscribe({});
          return {
            dispose: function() {
              return subscription.unsubscribe();
            }
          };
        }, _proto.check = function(operation) {
          return 0 !== this._missingFieldHandlers.length || function(operation) {
            return "Operation" === operation.root.node.kind && null != operation.root.node.clientAbstractTypes;
          }(operation) ? this._checkSelectorAndHandleMissingFields(operation, this._missingFieldHandlers) : this._store.check(operation);
        }, _proto.commitPayload = function(operation, payload) {
          this._execute({
            createSource: function() {
              return RelayObservable.from({
                data: payload
              });
            },
            isClientPayload: !0,
            operation,
            optimisticConfig: null,
            updater: null
          }).subscribe({});
        }, _proto.commitUpdate = function(updater) {
          var _this5 = this;
          this._scheduleUpdates((function() {
            _this5._publishQueue.commitUpdate(updater), _this5._publishQueue.run();
          }));
        }, _proto.lookup = function(readSelector) {
          return this._store.lookup(readSelector);
        }, _proto.subscribe = function(snapshot, callback) {
          return this._store.subscribe(snapshot, callback);
        }, _proto.retain = function(operation) {
          return this._store.retain(operation);
        }, _proto.isServer = function() {
          return this._isServer;
        }, _proto._checkSelectorAndHandleMissingFields = function(operation, handlers) {
          var _this6 = this, target = RelayRecordSource.create(), source = this._store.getSource(), result = this._store.check(operation, {
            handlers,
            defaultActorIdentifier: INTERNAL_ACTOR_IDENTIFIER_DO_NOT_USE,
            getSourceForActor: function(actorIdentifier) {
              return assertInternalActorIdentifier(actorIdentifier), source;
            },
            getTargetForActor: function(actorIdentifier) {
              return assertInternalActorIdentifier(actorIdentifier), target;
            }
          });
          return target.size() > 0 && this._scheduleUpdates((function() {
            _this6._publishQueue.commitSource(target), _this6._publishQueue.run();
          })), result;
        }, _proto._scheduleUpdates = function(task) {
          var scheduler = this._scheduler;
          null != scheduler ? scheduler.schedule(task) : task();
        }, _proto.execute = function(_ref) {
          var _this7 = this, operation = _ref.operation;
          return this._execute({
            createSource: function() {
              return _this7.getNetwork().execute(operation.request.node.params, operation.request.variables, operation.request.cacheConfig || {}, null);
            },
            isClientPayload: !1,
            operation,
            optimisticConfig: null,
            updater: null
          });
        }, _proto.executeSubscription = function(_ref2) {
          var _this8 = this, operation = _ref2.operation, updater = _ref2.updater;
          return this._execute({
            createSource: function() {
              return _this8.getNetwork().execute(operation.request.node.params, operation.request.variables, operation.request.cacheConfig || {}, null);
            },
            isClientPayload: !1,
            operation,
            optimisticConfig: null,
            updater
          });
        }, _proto.executeMutation = function(_ref3) {
          var optimisticConfig, _this9 = this, operation = _ref3.operation, optimisticResponse = _ref3.optimisticResponse, optimisticUpdater = _ref3.optimisticUpdater, updater = _ref3.updater, uploadables = _ref3.uploadables;
          return (optimisticResponse || optimisticUpdater) && (optimisticConfig = {
            operation,
            response: optimisticResponse,
            updater: optimisticUpdater
          }), this._execute({
            createSource: function() {
              return _this9.getNetwork().execute(operation.request.node.params, operation.request.variables, (0, 
              _objectSpread2.default)((0, _objectSpread2.default)({}, operation.request.cacheConfig), {}, {
                force: !0
              }), uploadables);
            },
            isClientPayload: !1,
            operation,
            optimisticConfig,
            updater
          });
        }, _proto.executeWithSource = function(_ref4) {
          var operation = _ref4.operation, source = _ref4.source;
          return this._execute({
            createSource: function() {
              return source;
            },
            isClientPayload: !1,
            operation,
            optimisticConfig: null,
            updater: null
          });
        }, _proto.toJSON = function() {
          var _this$configName;
          return "RelayModernEnvironment(".concat(null !== (_this$configName = this.configName) && void 0 !== _this$configName ? _this$configName : "", ")");
        }, _proto._execute = function(_ref5) {
          var _this10 = this, createSource = _ref5.createSource, isClientPayload = _ref5.isClientPayload, operation = _ref5.operation, optimisticConfig = _ref5.optimisticConfig, updater = _ref5.updater, publishQueue = this._publishQueue, store = this._store;
          return RelayObservable.create((function(sink) {
            var executor = OperationExecutor.execute({
              actorIdentifier: INTERNAL_ACTOR_IDENTIFIER_DO_NOT_USE,
              getDataID: _this10._getDataID,
              isClientPayload,
              log: _this10.__log,
              operation,
              operationExecutions: _this10._operationExecutions,
              operationLoader: _this10._operationLoader,
              operationTracker: _this10._operationTracker,
              optimisticConfig,
              getPublishQueue: function(actorIdentifier) {
                return assertInternalActorIdentifier(actorIdentifier), publishQueue;
              },
              scheduler: _this10._scheduler,
              shouldProcessClientComponents: _this10._shouldProcessClientComponents,
              sink,
              source: createSource(),
              getStore: function(actorIdentifier) {
                return assertInternalActorIdentifier(actorIdentifier), store;
              },
              treatMissingFieldsAsNull: _this10._treatMissingFieldsAsNull,
              updater,
              normalizeResponse: _this10._normalizeResponse
            });
            return function() {
              return executor.cancel();
            };
          }));
        }, RelayModernEnvironment;
      }());
      function emptyFunction() {}
      RelayModernEnvironment.prototype["@@RelayModernEnvironment"] = !0, module.exports = RelayModernEnvironment;
    },
    9850: (module, __unused_webpack_exports, __webpack_require__) => {
      "use strict";
      var _interopRequireDefault = __webpack_require__(1440).default, _objectSpread2 = _interopRequireDefault(__webpack_require__(2977)), _defineProperty2 = _interopRequireDefault(__webpack_require__(5217)), getPendingOperationsForFragment = __webpack_require__(966), handlePotentialSnapshotErrors = __webpack_require__(8746).handlePotentialSnapshotErrors, isScalarAndEqual = __webpack_require__(3275), recycleNodesInto = __webpack_require__(7237), RelayFeatureFlags = __webpack_require__(4309), createRequestDescriptor = __webpack_require__(7133).createRequestDescriptor, _require3 = __webpack_require__(7134), areEqualSelectors = _require3.areEqualSelectors, createReaderSelector = _require3.createReaderSelector, getSelectorsFromObject = _require3.getSelectorsFromObject, areEqual = __webpack_require__(1345), invariant = __webpack_require__(1235), RelayModernFragmentSpecResolver = (__webpack_require__(3349), 
      function() {
        function RelayModernFragmentSpecResolver(context, fragments, props, callback, rootIsQueryRenderer) {
          var _this = this;
          (0, _defineProperty2.default)(this, "_onChange", (function() {
            _this._stale = !0, "function" == typeof _this._callback && _this._callback();
          })), this._callback = callback, this._context = context, this._data = {}, this._fragments = fragments, 
          this._props = {}, this._resolvers = {}, this._stale = !1, this._rootIsQueryRenderer = rootIsQueryRenderer, 
          this.setProps(props);
        }
        var _proto = RelayModernFragmentSpecResolver.prototype;
        return _proto.dispose = function() {
          for (var key in this._resolvers) this._resolvers.hasOwnProperty(key) && disposeCallback(this._resolvers[key]);
        }, _proto.resolve = function() {
          if (this._stale) {
            var nextData, prevData = this._data;
            for (var key in this._resolvers) if (this._resolvers.hasOwnProperty(key)) {
              var resolver = this._resolvers[key], prevItem = prevData[key];
              if (resolver) {
                var nextItem = resolver.resolve();
                (nextData || nextItem !== prevItem) && ((nextData = nextData || (0, _objectSpread2.default)({}, prevData))[key] = nextItem);
              } else {
                var prop = this._props[key], _nextItem = void 0 !== prop ? prop : null;
                !nextData && isScalarAndEqual(_nextItem, prevItem) || ((nextData = nextData || (0, 
                _objectSpread2.default)({}, prevData))[key] = _nextItem);
              }
            }
            this._data = nextData || prevData, this._stale = !1;
          }
          return this._data;
        }, _proto.setCallback = function(props, callback) {
          this._callback = callback, !0 === RelayFeatureFlags.ENABLE_CONTAINERS_SUBSCRIBE_ON_COMMIT && this.setProps(props);
        }, _proto.setProps = function(props) {
          this._props = {};
          var ownedSelectors = getSelectorsFromObject(this._fragments, props);
          for (var key in ownedSelectors) if (ownedSelectors.hasOwnProperty(key)) {
            var ownedSelector = ownedSelectors[key], resolver = this._resolvers[key];
            null == ownedSelector ? (null != resolver && resolver.dispose(), resolver = null) : "PluralReaderSelector" === ownedSelector.kind ? null == resolver ? resolver = new SelectorListResolver(this._context.environment, this._rootIsQueryRenderer, ownedSelector, null != this._callback, this._onChange) : (resolver instanceof SelectorListResolver || invariant(!1), 
            resolver.setSelector(ownedSelector)) : null == resolver ? resolver = new SelectorResolver(this._context.environment, this._rootIsQueryRenderer, ownedSelector, null != this._callback, this._onChange) : (resolver instanceof SelectorResolver || invariant(!1), 
            resolver.setSelector(ownedSelector)), this._props[key] = props[key], this._resolvers[key] = resolver;
          }
          this._stale = !0;
        }, _proto.setVariables = function(variables, request) {
          for (var key in this._resolvers) if (this._resolvers.hasOwnProperty(key)) {
            var resolver = this._resolvers[key];
            resolver && resolver.setVariables(variables, request);
          }
          this._stale = !0;
        }, RelayModernFragmentSpecResolver;
      }()), SelectorResolver = function() {
        function SelectorResolver(environment, rootIsQueryRenderer, selector, subscribeOnConstruction, callback) {
          var _this2 = this;
          (0, _defineProperty2.default)(this, "_onChange", (function(snapshot) {
            _this2._data = snapshot.data, _this2._isMissingData = snapshot.isMissingData, _this2._errorResponseFields = snapshot.errorResponseFields, 
            _this2._callback();
          }));
          var _snapshot = environment.lookup(selector);
          this._callback = callback, this._data = _snapshot.data, this._isMissingData = _snapshot.isMissingData, 
          this._errorResponseFields = _snapshot.errorResponseFields, this._environment = environment, 
          this._rootIsQueryRenderer = rootIsQueryRenderer, this._selector = selector, !0 === RelayFeatureFlags.ENABLE_CONTAINERS_SUBSCRIBE_ON_COMMIT ? subscribeOnConstruction && (this._subscription = environment.subscribe(_snapshot, this._onChange)) : this._subscription = environment.subscribe(_snapshot, this._onChange);
        }
        var _proto2 = SelectorResolver.prototype;
        return _proto2.dispose = function() {
          this._subscription && (this._subscription.dispose(), this._subscription = null);
        }, _proto2.resolve = function() {
          if (!0 === this._isMissingData) {
            var pendingOperationsResult = getPendingOperationsForFragment(this._environment, this._selector.node, this._selector.owner), promise = null == pendingOperationsResult ? void 0 : pendingOperationsResult.promise;
            if (null != promise && !this._rootIsQueryRenderer) {
              var _pendingOperationsRes, pendingOperations = null !== (_pendingOperationsRes = null == pendingOperationsResult ? void 0 : pendingOperationsResult.pendingOperations) && void 0 !== _pendingOperationsRes ? _pendingOperationsRes : [];
              throw this._environment.__log({
                name: "suspense.fragment",
                data: this._data,
                fragment: this._selector.node,
                isRelayHooks: !1,
                isMissingData: this._isMissingData,
                isPromiseCached: !1,
                pendingOperations
              }), promise;
            }
          }
          return handlePotentialSnapshotErrors(this._environment, this._errorResponseFields), 
          this._data;
        }, _proto2.setSelector = function(selector) {
          if (null == this._subscription || !areEqualSelectors(selector, this._selector)) {
            this.dispose();
            var snapshot = this._environment.lookup(selector);
            this._data = recycleNodesInto(this._data, snapshot.data), this._isMissingData = snapshot.isMissingData, 
            this._errorResponseFields = snapshot.errorResponseFields, this._selector = selector, 
            this._subscription = this._environment.subscribe(snapshot, this._onChange);
          }
        }, _proto2.setVariables = function(variables, request) {
          if (!areEqual(variables, this._selector.variables)) {
            var requestDescriptor = createRequestDescriptor(request, variables), selector = createReaderSelector(this._selector.node, this._selector.dataID, variables, requestDescriptor);
            this.setSelector(selector);
          }
        }, SelectorResolver;
      }(), SelectorListResolver = function() {
        function SelectorListResolver(environment, rootIsQueryRenderer, selector, subscribeOnConstruction, callback) {
          var _this3 = this;
          (0, _defineProperty2.default)(this, "_onChange", (function(data) {
            _this3._stale = !0, _this3._callback();
          })), this._callback = callback, this._data = [], this._environment = environment, 
          this._resolvers = [], this._stale = !0, this._rootIsQueryRenderer = rootIsQueryRenderer, 
          this._subscribeOnConstruction = subscribeOnConstruction, this.setSelector(selector);
        }
        var _proto3 = SelectorListResolver.prototype;
        return _proto3.dispose = function() {
          this._resolvers.forEach(disposeCallback);
        }, _proto3.resolve = function() {
          if (this._stale) {
            for (var nextData, prevData = this._data, ii = 0; ii < this._resolvers.length; ii++) {
              var prevItem = prevData[ii], nextItem = this._resolvers[ii].resolve();
              (nextData || nextItem !== prevItem) && (nextData = nextData || prevData.slice(0, ii)).push(nextItem);
            }
            nextData || this._resolvers.length === prevData.length || (nextData = prevData.slice(0, this._resolvers.length)), 
            this._data = nextData || prevData, this._stale = !1;
          }
          return this._data;
        }, _proto3.setSelector = function(selector) {
          for (var selectors = selector.selectors; this._resolvers.length > selectors.length; ) {
            this._resolvers.pop().dispose();
          }
          for (var ii = 0; ii < selectors.length; ii++) ii < this._resolvers.length ? this._resolvers[ii].setSelector(selectors[ii]) : this._resolvers[ii] = new SelectorResolver(this._environment, this._rootIsQueryRenderer, selectors[ii], this._subscribeOnConstruction, this._onChange);
          this._stale = !0;
        }, _proto3.setVariables = function(variables, request) {
          this._resolvers.forEach((function(resolver) {
            return resolver.setVariables(variables, request);
          })), this._stale = !0;
        }, SelectorListResolver;
      }();
      function disposeCallback(disposable) {
        disposable && disposable.dispose();
      }
      module.exports = RelayModernFragmentSpecResolver;
    },
    7133: (module, __unused_webpack_exports, __webpack_require__) => {
      "use strict";
      __webpack_require__(7700);
      var getRequestIdentifier = __webpack_require__(5269), RelayFeatureFlags = __webpack_require__(4309), hasCycle = __webpack_require__(6163).hasCycle, getOperationVariables = __webpack_require__(7586).getOperationVariables, _require3 = __webpack_require__(7134), createNormalizationSelector = _require3.createNormalizationSelector, createReaderSelector = _require3.createReaderSelector, ROOT_ID = __webpack_require__(6195).ROOT_ID, invariant = __webpack_require__(1235);
      function createRequestDescriptor(request, variables, cacheConfig) {
        return {
          identifier: getRequestIdentifier(request.params, variables),
          node: request,
          variables,
          cacheConfig
        };
      }
      module.exports = {
        createOperationDescriptor: function(request, variables, cacheConfig) {
          var dataID = arguments.length > 3 && void 0 !== arguments[3] ? arguments[3] : ROOT_ID, operation = request.operation, operationVariables = getOperationVariables(operation, request.params.providedVariables, variables);
          RelayFeatureFlags.ENABLE_CYLE_DETECTION_IN_VARIABLES && hasCycle(operationVariables) && invariant(!1);
          var requestDescriptor = createRequestDescriptor(request, operationVariables, cacheConfig);
          return {
            fragment: createReaderSelector(request.fragment, dataID, operationVariables, requestDescriptor),
            request: requestDescriptor,
            root: createNormalizationSelector(operation, dataID, operationVariables)
          };
        },
        createRequestDescriptor
      };
    },
    5188: (module, __unused_webpack_exports, __webpack_require__) => {
      "use strict";
      var _interopRequireDefault = __webpack_require__(1440).default, _defineProperty2 = _interopRequireDefault(__webpack_require__(5217)), _objectWithoutPropertiesLoose2 = _interopRequireDefault(__webpack_require__(8141)), _toPropertyKey2 = _interopRequireDefault(__webpack_require__(5148)), _objectSpread2 = _interopRequireDefault(__webpack_require__(2977)), deepFreeze = __webpack_require__(7700), _require = __webpack_require__(2621), generateClientObjectClientID = _require.generateClientObjectClientID, isSuspenseSentinel = (_require.isClientID, 
      __webpack_require__(7678).isSuspenseSentinel), _require3 = __webpack_require__(6195), ACTOR_IDENTIFIER_KEY = _require3.ACTOR_IDENTIFIER_KEY, ERRORS_KEY = _require3.ERRORS_KEY, ID_KEY = _require3.ID_KEY, INVALIDATED_AT_KEY = _require3.INVALIDATED_AT_KEY, REF_KEY = _require3.REF_KEY, REFS_KEY = _require3.REFS_KEY, RELAY_RESOLVER_VALUE_KEY = _require3.RELAY_RESOLVER_VALUE_KEY, TYPENAME_KEY = (_require3.ROOT_ID, 
      _require3.TYPENAME_KEY), areEqual = __webpack_require__(1345), invariant = __webpack_require__(1235);
      __webpack_require__(3349);
      function getValue(record, storageKey) {
        var value = record[storageKey];
        return value && "object" == typeof value && (value.hasOwnProperty(REF_KEY) || value.hasOwnProperty(REFS_KEY)) && invariant(!1), 
        value;
      }
      function setErrors(record, storageKey, errors) {
        var errorsByStorageKey = record[ERRORS_KEY];
        if (null != errors && errors.length > 0) null == errorsByStorageKey ? record[ERRORS_KEY] = (0, 
        _defineProperty2.default)({}, storageKey, errors) : errorsByStorageKey[storageKey] = errors; else if (null != errorsByStorageKey && delete errorsByStorageKey[storageKey]) {
          for (var otherStorageKey in errorsByStorageKey) if (errorsByStorageKey.hasOwnProperty(otherStorageKey)) return;
          delete record[ERRORS_KEY];
        }
      }
      function setValue(record, storageKey, value) {
        record[storageKey] = value;
      }
      module.exports = {
        clone: function(record) {
          return (0, _objectSpread2.default)({}, record);
        },
        copyFields: function(source, sink) {
          for (var key in source) source.hasOwnProperty(key) && key !== ID_KEY && key !== TYPENAME_KEY && (sink[key] = source[key]);
        },
        create: function(dataID, typeName) {
          var record = {};
          return record[ID_KEY] = dataID, record[TYPENAME_KEY] = typeName, record;
        },
        freeze: function(record) {
          deepFreeze(record);
        },
        fromObject: function(json) {
          return json;
        },
        getDataID: function(record) {
          return record[ID_KEY];
        },
        getErrors: function(record, storageKey) {
          var _record$ERRORS_KEY;
          return null === (_record$ERRORS_KEY = record[ERRORS_KEY]) || void 0 === _record$ERRORS_KEY ? void 0 : _record$ERRORS_KEY[storageKey];
        },
        getFields: function(record) {
          return ERRORS_KEY in record ? Object.keys(record).filter((function(field) {
            return field !== ERRORS_KEY;
          })) : Object.keys(record);
        },
        getInvalidationEpoch: function(record) {
          if (null == record) return null;
          var invalidatedAt = record[INVALIDATED_AT_KEY];
          return "number" != typeof invalidatedAt ? null : invalidatedAt;
        },
        getLinkedRecordID: function(record, storageKey) {
          var maybeLink = record[storageKey];
          if (null == maybeLink) return maybeLink;
          var link = maybeLink;
          return "object" == typeof link && link && "string" == typeof link[REF_KEY] || invariant(!1), 
          link[REF_KEY];
        },
        getLinkedRecordIDs: function(record, storageKey) {
          var links = record[storageKey];
          return null == links ? links : ("object" == typeof links && Array.isArray(links[REFS_KEY]) || invariant(!1), 
          links[REFS_KEY]);
        },
        getType: function(record) {
          return record[TYPENAME_KEY];
        },
        getValue,
        hasValue: function(record, storageKey) {
          return storageKey in record;
        },
        hasLinkedRecordID: function(record, storageKey) {
          var maybeLink = record[storageKey];
          return null != maybeLink && ("object" == typeof maybeLink && maybeLink && "string" == typeof maybeLink[REF_KEY]);
        },
        hasLinkedRecordIDs: function(record, storageKey) {
          var links = record[storageKey];
          return null != links && ("object" == typeof links && Array.isArray(links[REFS_KEY]) && links[REFS_KEY].every((function(link) {
            return "string" == typeof link;
          })));
        },
        merge: function(record1, record2) {
          if (ERRORS_KEY in record1 || ERRORS_KEY in record2) {
            var errors1 = record1[ERRORS_KEY], fields1 = (0, _objectWithoutPropertiesLoose2.default)(record1, [ ERRORS_KEY ].map(_toPropertyKey2.default)), errors2 = record2[ERRORS_KEY], fields2 = (0, 
            _objectWithoutPropertiesLoose2.default)(record2, [ ERRORS_KEY ].map(_toPropertyKey2.default)), updated = (0, 
            _objectSpread2.default)((0, _objectSpread2.default)({}, fields1), fields2);
            if (null == errors1 && null == errors2) return updated;
            var updatedErrors = {};
            for (var storageKey in errors1) fields2.hasOwnProperty(storageKey) || (updatedErrors[storageKey] = errors1[storageKey]);
            for (var _storageKey3 in errors2) updatedErrors[_storageKey3] = errors2[_storageKey3];
            for (var _storageKey in updatedErrors) {
              updated[ERRORS_KEY] = updatedErrors;
              break;
            }
            return updated;
          }
          return (0, _objectSpread2.default)((0, _objectSpread2.default)({}, record1), record2);
        },
        setErrors,
        setValue,
        setLinkedRecordID: function(record, storageKey, linkedID) {
          var link = {};
          link[REF_KEY] = linkedID, record[storageKey] = link;
        },
        setLinkedRecordIDs: function(record, storageKey, linkedIDs) {
          var links = {};
          links[REFS_KEY] = linkedIDs, record[storageKey] = links;
        },
        update: function(prevRecord, nextRecord) {
          var _updated2, prevErrorsByKey = prevRecord[ERRORS_KEY], nextErrorsByKey = nextRecord[ERRORS_KEY], updated = null;
          if (null == prevErrorsByKey && null == nextErrorsByKey) {
            var _updated;
            for (var storageKey in nextRecord) !updated && areEqual(prevRecord[storageKey], nextRecord[storageKey]) || ((updated = null !== updated ? updated : (0, 
            _objectSpread2.default)({}, prevRecord))[storageKey] = nextRecord[storageKey]);
            return null !== (_updated = updated) && void 0 !== _updated ? _updated : prevRecord;
          }
          for (var _storageKey2 in nextRecord) if (_storageKey2 !== ERRORS_KEY) {
            var nextValue = nextRecord[_storageKey2], nextErrors = null == nextErrorsByKey ? void 0 : nextErrorsByKey[_storageKey2];
            if (null == updated) {
              var prevValue = prevRecord[_storageKey2], prevErrors = null == prevErrorsByKey ? void 0 : prevErrorsByKey[_storageKey2];
              if (areEqual(prevValue, nextValue) && areEqual(prevErrors, nextErrors)) continue;
              updated = (0, _objectSpread2.default)({}, prevRecord), null != prevErrorsByKey && (updated[ERRORS_KEY] = (0, 
              _objectSpread2.default)({}, prevErrorsByKey));
            }
            setValue(updated, _storageKey2, nextValue), setErrors(updated, _storageKey2, nextErrors);
          }
          return null !== (_updated2 = updated) && void 0 !== _updated2 ? _updated2 : prevRecord;
        },
        getActorLinkedRecordID: function(record, storageKey) {
          var link = record[storageKey];
          return null == link ? link : (("object" != typeof link || "string" != typeof link[REF_KEY] || null == link[ACTOR_IDENTIFIER_KEY]) && invariant(!1), 
          [ link[ACTOR_IDENTIFIER_KEY], link[REF_KEY] ]);
        },
        setActorLinkedRecordID: function(record, storageKey, actorIdentifier, linkedID) {
          var link = {};
          link[REF_KEY] = linkedID, link[ACTOR_IDENTIFIER_KEY] = actorIdentifier, record[storageKey] = link;
        },
        getResolverLinkedRecordID: function(record, typeName) {
          var id = getValue(record, RELAY_RESOLVER_VALUE_KEY);
          return null == id || isSuspenseSentinel(id) ? null : ("object" == typeof id && (id = id.id), 
          "string" != typeof id && invariant(!1), generateClientObjectClientID(typeName, id));
        },
        getResolverLinkedRecordIDs: function(record, typeName) {
          var resolverValue = getValue(record, RELAY_RESOLVER_VALUE_KEY);
          return null == resolverValue || isSuspenseSentinel(resolverValue) ? null : (Array.isArray(resolverValue) || invariant(!1), 
          resolverValue.map((function(id) {
            return null == id ? null : ("object" == typeof id && (id = id.id), "string" != typeof id && invariant(!1), 
            generateClientObjectClientID(typeName, id));
          })));
        },
        toJSON: function(record) {
          return record;
        }
      };
    },
    7134: (module, __unused_webpack_exports, __webpack_require__) => {
      "use strict";
      var getFragmentVariables = __webpack_require__(7586).getFragmentVariables, _require2 = __webpack_require__(6195), CLIENT_EDGE_TRAVERSAL_PATH = _require2.CLIENT_EDGE_TRAVERSAL_PATH, FRAGMENT_OWNER_KEY = _require2.FRAGMENT_OWNER_KEY, FRAGMENT_POINTER_IS_WITHIN_UNMATCHED_TYPE_REFINEMENT = _require2.FRAGMENT_POINTER_IS_WITHIN_UNMATCHED_TYPE_REFINEMENT, FRAGMENTS_KEY = _require2.FRAGMENTS_KEY, ID_KEY = _require2.ID_KEY, areEqual = __webpack_require__(1345), invariant = __webpack_require__(1235);
      __webpack_require__(3349);
      function getSingularSelector(fragment, item) {
        ("object" != typeof item || null === item || Array.isArray(item)) && invariant(!1);
        var dataID = item[ID_KEY], fragments = item[FRAGMENTS_KEY], mixedOwner = item[FRAGMENT_OWNER_KEY], mixedClientEdgeTraversalPath = item[CLIENT_EDGE_TRAVERSAL_PATH];
        if ("string" == typeof dataID && "object" == typeof fragments && null !== fragments && "object" == typeof fragments[fragment.name] && null !== fragments[fragment.name] && "object" == typeof mixedOwner && null !== mixedOwner && (null == mixedClientEdgeTraversalPath || Array.isArray(mixedClientEdgeTraversalPath))) {
          var owner = mixedOwner, clientEdgeTraversalPath = mixedClientEdgeTraversalPath, argumentVariables = fragments[fragment.name];
          return createReaderSelector(fragment, dataID, getFragmentVariables(fragment, owner.variables, argumentVariables), owner, !0 === argumentVariables[FRAGMENT_POINTER_IS_WITHIN_UNMATCHED_TYPE_REFINEMENT], clientEdgeTraversalPath);
        }
        return null;
      }
      function getPluralSelector(fragment, items) {
        var selectors = null;
        return items.forEach((function(item, ii) {
          var selector = null != item ? getSingularSelector(fragment, item) : null;
          null != selector && (selectors = selectors || []).push(selector);
        })), null == selectors ? null : {
          kind: "PluralReaderSelector",
          selectors
        };
      }
      function getSelector(fragment, item) {
        return null == item ? item : fragment.metadata && !0 === fragment.metadata.plural ? (Array.isArray(item) || invariant(!1), 
        getPluralSelector(fragment, item)) : (Array.isArray(item) && invariant(!1), getSingularSelector(fragment, item));
      }
      function getDataIDsFromFragment(fragment, item) {
        return null == item ? item : fragment.metadata && !0 === fragment.metadata.plural ? (Array.isArray(item) || invariant(!1), 
        function(fragment, items) {
          var ids = null;
          return items.forEach((function(item) {
            var id = null != item ? getDataID(fragment, item) : null;
            null != id && (ids = ids || []).push(id);
          })), ids;
        }(fragment, item)) : (Array.isArray(item) && invariant(!1), getDataID(fragment, item));
      }
      function getDataID(fragment, item) {
        ("object" != typeof item || null === item || Array.isArray(item)) && invariant(!1);
        var dataID = item[ID_KEY];
        return "string" == typeof dataID ? dataID : null;
      }
      function getVariablesFromFragment(fragment, item) {
        var _fragment$metadata;
        return null == item ? {} : !0 === (null === (_fragment$metadata = fragment.metadata) || void 0 === _fragment$metadata ? void 0 : _fragment$metadata.plural) ? (Array.isArray(item) || invariant(!1), 
        getVariablesFromPluralFragment(fragment, item)) : (Array.isArray(item) && invariant(!1), 
        getVariablesFromSingularFragment(fragment, item) || {});
      }
      function getVariablesFromSingularFragment(fragment, item) {
        var selector = getSingularSelector(fragment, item);
        return selector ? selector.variables : null;
      }
      function getVariablesFromPluralFragment(fragment, items) {
        var variables = {};
        return items.forEach((function(value, ii) {
          if (null != value) {
            var itemVariables = getVariablesFromSingularFragment(fragment, value);
            null != itemVariables && Object.assign(variables, itemVariables);
          }
        })), variables;
      }
      function areEqualSingularSelectors(thisSelector, thatSelector) {
        return thisSelector.dataID === thatSelector.dataID && thisSelector.node === thatSelector.node && areEqual(thisSelector.variables, thatSelector.variables) && (thisOwner = thisSelector.owner, 
        thatOwner = thatSelector.owner, thisOwner === thatOwner || thisOwner.identifier === thatOwner.identifier && areEqual(thisOwner.cacheConfig, thatOwner.cacheConfig)) && thisSelector.isWithinUnmatchedTypeRefinement === thatSelector.isWithinUnmatchedTypeRefinement && function(thisPath, thatPath) {
          if (thisPath === thatPath) return !0;
          if (null == thisPath || null == thatPath || thisPath.length !== thatPath.length) return !1;
          var idx = thisPath.length;
          for (;idx--; ) {
            var a = thisPath[idx], b = thatPath[idx];
            if (a !== b && (null == a || null == b || a.clientEdgeDestinationID !== b.clientEdgeDestinationID || a.readerClientEdge !== b.readerClientEdge)) return !1;
          }
          return !0;
        }(thisSelector.clientEdgeTraversalPath, thatSelector.clientEdgeTraversalPath);
        var thisOwner, thatOwner;
      }
      function createReaderSelector(fragment, dataID, variables, request) {
        var clientEdgeTraversalPath = arguments.length > 5 ? arguments[5] : void 0;
        return {
          kind: "SingularReaderSelector",
          dataID,
          isWithinUnmatchedTypeRefinement: arguments.length > 4 && void 0 !== arguments[4] && arguments[4],
          clientEdgeTraversalPath: null != clientEdgeTraversalPath ? clientEdgeTraversalPath : null,
          node: fragment,
          variables,
          owner: request
        };
      }
      module.exports = {
        areEqualSelectors: function(a, b) {
          return a === b || (null == a ? null == b : null == b ? null == a : "SingularReaderSelector" === a.kind && "SingularReaderSelector" === b.kind ? areEqualSingularSelectors(a, b) : "PluralReaderSelector" === a.kind && "PluralReaderSelector" === b.kind && (a.selectors.length === b.selectors.length && a.selectors.every((function(s, i) {
            return areEqualSingularSelectors(s, b.selectors[i]);
          }))));
        },
        createReaderSelector,
        createNormalizationSelector: function(node, dataID, variables) {
          return {
            dataID,
            node,
            variables
          };
        },
        getDataIDsFromFragment,
        getDataIDsFromObject: function(fragments, object) {
          var ids = {};
          for (var key in fragments) if (fragments.hasOwnProperty(key)) {
            var fragment = fragments[key], item = object[key];
            ids[key] = getDataIDsFromFragment(fragment, item);
          }
          return ids;
        },
        getSingularSelector,
        getPluralSelector,
        getSelector,
        getSelectorsFromObject: function(fragments, object) {
          var selectors = {};
          for (var key in fragments) if (fragments.hasOwnProperty(key)) {
            var fragment = fragments[key], item = object[key];
            selectors[key] = getSelector(fragment, item);
          }
          return selectors;
        },
        getVariablesFromSingularFragment,
        getVariablesFromPluralFragment,
        getVariablesFromFragment,
        getVariablesFromObject: function(fragments, object) {
          var variables = {};
          for (var key in fragments) if (fragments.hasOwnProperty(key)) {
            var itemVariables = getVariablesFromFragment(fragments[key], object[key]);
            Object.assign(variables, itemVariables);
          }
          return variables;
        }
      };
    },
    7947: (module, __unused_webpack_exports, __webpack_require__) => {
      "use strict";
      var _interopRequireDefault = __webpack_require__(1440).default, _createForOfIteratorHelper2 = _interopRequireDefault(__webpack_require__(2460)), _defineProperty2 = _interopRequireDefault(__webpack_require__(5217)), _require = __webpack_require__(5792), INTERNAL_ACTOR_IDENTIFIER_DO_NOT_USE = _require.INTERNAL_ACTOR_IDENTIFIER_DO_NOT_USE, assertInternalActorIdentifier = _require.assertInternalActorIdentifier, resolveImmediate = (__webpack_require__(7700), 
      __webpack_require__(2779)), DataChecker = __webpack_require__(2483), defaultGetDataID = __webpack_require__(206), _require2 = __webpack_require__(2593), LiveResolverCache = _require2.LiveResolverCache, RELAY_RESOLVER_LIVE_STATE_SUBSCRIPTION_KEY = _require2.RELAY_RESOLVER_LIVE_STATE_SUBSCRIPTION_KEY, getUpdatedDataIDs = _require2.getUpdatedDataIDs, RelayModernRecord = __webpack_require__(5188), RelayOptimisticRecordSource = __webpack_require__(6786), RelayReader = __webpack_require__(3442), RelayReferenceMarker = __webpack_require__(9520), RelayStoreSubscriptions = __webpack_require__(8090), RelayStoreUtils = __webpack_require__(6195), _require3 = __webpack_require__(6195), ROOT_ID = _require3.ROOT_ID, ROOT_TYPE = _require3.ROOT_TYPE, invariant = __webpack_require__(1235), RelayModernStore = function() {
        function RelayModernStore(source, options) {
          var _options$gcReleaseBuf, _options$gcScheduler, _options$getDataID, _options$log, _options$operationLoa, _options$shouldProces, _options$treatMissing, _this = this;
          (0, _defineProperty2.default)(this, "_gcStep", (function() {
            _this._gcRun && (_this._gcRun.next().done ? _this._gcRun = null : _this._gcScheduler(_this._gcStep));
          })), this._currentWriteEpoch = 0, this._gcHoldCounter = 0, this._gcReleaseBufferSize = null !== (_options$gcReleaseBuf = null == options ? void 0 : options.gcReleaseBufferSize) && void 0 !== _options$gcReleaseBuf ? _options$gcReleaseBuf : 10, 
          this._gcRun = null, this._gcScheduler = null !== (_options$gcScheduler = null == options ? void 0 : options.gcScheduler) && void 0 !== _options$gcScheduler ? _options$gcScheduler : resolveImmediate, 
          this._getDataID = null !== (_options$getDataID = null == options ? void 0 : options.getDataID) && void 0 !== _options$getDataID ? _options$getDataID : defaultGetDataID, 
          this._globalInvalidationEpoch = null, this._invalidationSubscriptions = new Set, 
          this._invalidatedRecordIDs = new Set, this.__log = null !== (_options$log = null == options ? void 0 : options.log) && void 0 !== _options$log ? _options$log : null, 
          this._queryCacheExpirationTime = null == options ? void 0 : options.queryCacheExpirationTime, 
          this._operationLoader = null !== (_options$operationLoa = null == options ? void 0 : options.operationLoader) && void 0 !== _options$operationLoa ? _options$operationLoa : null, 
          this._optimisticSource = null, this._recordSource = source, this._releaseBuffer = [], 
          this._roots = new Map, this._shouldScheduleGC = !1, this._resolverCache = new LiveResolverCache((function() {
            return _this._getMutableRecordSource();
          }), this), this._storeSubscriptions = new RelayStoreSubscriptions(null == options ? void 0 : options.log, this._resolverCache), 
          this._updatedRecordIDs = new Set, this._shouldProcessClientComponents = null !== (_options$shouldProces = null == options ? void 0 : options.shouldProcessClientComponents) && void 0 !== _options$shouldProces && _options$shouldProces, 
          this._resolverContext = null == options ? void 0 : options.resolverContext, this._treatMissingFieldsAsNull = null !== (_options$treatMissing = null == options ? void 0 : options.treatMissingFieldsAsNull) && void 0 !== _options$treatMissing && _options$treatMissing, 
          this._actorIdentifier = null == options ? void 0 : options.actorIdentifier, function(target) {
            if (!target.has(ROOT_ID)) {
              var rootRecord = RelayModernRecord.create(ROOT_ID, ROOT_TYPE);
              target.set(ROOT_ID, rootRecord);
            }
          }(this._recordSource);
        }
        var _proto = RelayModernStore.prototype;
        return _proto.getSource = function() {
          var _this$_optimisticSour;
          return null !== (_this$_optimisticSour = this._optimisticSource) && void 0 !== _this$_optimisticSour ? _this$_optimisticSour : this._recordSource;
        }, _proto.getOperationLoader = function() {
          return this._operationLoader;
        }, _proto._getMutableRecordSource = function() {
          var _this$_optimisticSour2;
          return null !== (_this$_optimisticSour2 = this._optimisticSource) && void 0 !== _this$_optimisticSour2 ? _this$_optimisticSour2 : this._recordSource;
        }, _proto.getLiveResolverPromise = function(recordID) {
          return this._resolverCache.getLiveResolverPromise(recordID);
        }, _proto.batchLiveStateUpdates = function(callback) {
          null != this.__log && this.__log({
            name: "liveresolver.batch.start"
          });
          try {
            this._resolverCache.batchLiveStateUpdates(callback);
          } finally {
            null != this.__log && this.__log({
              name: "liveresolver.batch.end"
            });
          }
        }, _proto.check = function(operation, options) {
          var _options$handlers, _options$getSourceFor, _options$getTargetFor, _options$defaultActor, selector = operation.root, source = this._getMutableRecordSource(), globalInvalidationEpoch = this._globalInvalidationEpoch, rootEntry = this._roots.get(operation.request.identifier), operationLastWrittenAt = null != rootEntry ? rootEntry.epoch : null;
          if (null != globalInvalidationEpoch && (null == operationLastWrittenAt || operationLastWrittenAt <= globalInvalidationEpoch)) return {
            status: "stale"
          };
          var handlers = null !== (_options$handlers = null == options ? void 0 : options.handlers) && void 0 !== _options$handlers ? _options$handlers : [], getSourceForActor = null !== (_options$getSourceFor = null == options ? void 0 : options.getSourceForActor) && void 0 !== _options$getSourceFor ? _options$getSourceFor : function(actorIdentifier) {
            return assertInternalActorIdentifier(actorIdentifier), source;
          }, getTargetForActor = null !== (_options$getTargetFor = null == options ? void 0 : options.getTargetForActor) && void 0 !== _options$getTargetFor ? _options$getTargetFor : function(actorIdentifier) {
            return assertInternalActorIdentifier(actorIdentifier), source;
          };
          return function(operationAvailability, operationLastWrittenAt, operationFetchTime, queryCacheExpirationTime) {
            var mostRecentlyInvalidatedAt = operationAvailability.mostRecentlyInvalidatedAt, status = operationAvailability.status;
            if ("number" == typeof mostRecentlyInvalidatedAt && (null == operationLastWrittenAt || mostRecentlyInvalidatedAt > operationLastWrittenAt)) return {
              status: "stale"
            };
            if ("missing" === status) return {
              status: "missing"
            };
            if (null != operationFetchTime && null != queryCacheExpirationTime) {
              if (operationFetchTime <= Date.now() - queryCacheExpirationTime) return {
                status: "stale"
              };
            }
            return {
              status: "available",
              fetchTime: null != operationFetchTime ? operationFetchTime : null
            };
          }(DataChecker.check(getSourceForActor, getTargetForActor, null !== (_options$defaultActor = null == options ? void 0 : options.defaultActorIdentifier) && void 0 !== _options$defaultActor ? _options$defaultActor : INTERNAL_ACTOR_IDENTIFIER_DO_NOT_USE, selector, handlers, this._operationLoader, this._getDataID, this._shouldProcessClientComponents, this.__log), operationLastWrittenAt, null == rootEntry ? void 0 : rootEntry.fetchTime, this._queryCacheExpirationTime);
        }, _proto.retain = function(operation) {
          var _this2 = this, id = operation.request.identifier, disposed = !1, rootEntry = this._roots.get(id);
          return null != rootEntry ? (0 === rootEntry.refCount && (this._releaseBuffer = this._releaseBuffer.filter((function(_id) {
            return _id !== id;
          }))), rootEntry.refCount += 1) : this._roots.set(id, {
            operation,
            refCount: 1,
            epoch: null,
            fetchTime: null
          }), {
            dispose: function() {
              if (!disposed) {
                disposed = !0;
                var rootEntry = _this2._roots.get(id);
                if (null != rootEntry && (rootEntry.refCount--, 0 === rootEntry.refCount)) {
                  var _queryCacheExpirationTime = _this2._queryCacheExpirationTime;
                  if (null != rootEntry.fetchTime && null != _queryCacheExpirationTime && rootEntry.fetchTime <= Date.now() - _queryCacheExpirationTime) _this2._roots.delete(id), 
                  _this2.scheduleGC(); else if (_this2._releaseBuffer.push(id), _this2._releaseBuffer.length > _this2._gcReleaseBufferSize) {
                    var _id = _this2._releaseBuffer.shift();
                    _this2._roots.delete(_id), _this2.scheduleGC();
                  }
                }
              }
            }
          };
        }, _proto.lookup = function(selector) {
          var log = this.__log;
          null != log && log({
            name: "store.lookup.start",
            selector
          });
          var source = this.getSource(), snapshot = RelayReader.read(source, selector, this._resolverCache, this._resolverContext);
          return null != log && log({
            name: "store.lookup.end",
            selector
          }), snapshot;
        }, _proto.notify = function(sourceOperation, invalidateStore) {
          var _this3 = this, log = this.__log;
          null != log && log({
            name: "store.notify.start",
            sourceOperation
          }), this._currentWriteEpoch++, !0 === invalidateStore && (this._globalInvalidationEpoch = this._currentWriteEpoch), 
          this._resolverCache.invalidateDataIDs(this._updatedRecordIDs);
          var source = this.getSource(), updatedOwners = [];
          if (this._storeSubscriptions.updateSubscriptions(source, this._updatedRecordIDs, updatedOwners, sourceOperation), 
          this._invalidationSubscriptions.forEach((function(subscription) {
            _this3._updateInvalidationSubscription(subscription, !0 === invalidateStore);
          })), null != sourceOperation) {
            var id = sourceOperation.request.identifier, rootEntry = this._roots.get(id);
            if (null != rootEntry) rootEntry.epoch = this._currentWriteEpoch, rootEntry.fetchTime = Date.now(); else if ("query" === sourceOperation.request.node.params.operationKind && this._gcReleaseBufferSize > 0 && this._releaseBuffer.length < this._gcReleaseBufferSize) {
              var temporaryRootEntry = {
                operation: sourceOperation,
                refCount: 0,
                epoch: this._currentWriteEpoch,
                fetchTime: Date.now()
              };
              this._releaseBuffer.push(id), this._roots.set(id, temporaryRootEntry);
            }
          }
          return null != log && log({
            name: "store.notify.complete",
            sourceOperation,
            updatedRecordIDs: this._updatedRecordIDs,
            invalidatedRecordIDs: this._invalidatedRecordIDs,
            subscriptionsSize: this._storeSubscriptions.size(),
            updatedOwners
          }), this._updatedRecordIDs.clear(), this._invalidatedRecordIDs.clear(), updatedOwners;
        }, _proto.publish = function(source, idsMarkedForInvalidation) {
          var target = this._getMutableRecordSource();
          !function(target, source, currentWriteEpoch, idsMarkedForInvalidation, updatedRecordIDs, invalidatedRecordIDs) {
            idsMarkedForInvalidation && idsMarkedForInvalidation.forEach((function(dataID) {
              var nextRecord, targetRecord = target.get(dataID), sourceRecord = source.get(dataID);
              null !== sourceRecord && ((nextRecord = null != targetRecord ? RelayModernRecord.clone(targetRecord) : null != sourceRecord ? RelayModernRecord.clone(sourceRecord) : null) && (RelayModernRecord.setValue(nextRecord, RelayStoreUtils.INVALIDATED_AT_KEY, currentWriteEpoch), 
              invalidatedRecordIDs.add(dataID), target.set(dataID, nextRecord)));
            }));
            for (var dataIDs = source.getRecordIDs(), ii = 0; ii < dataIDs.length; ii++) {
              var dataID = dataIDs[ii], sourceRecord = source.get(dataID), targetRecord = target.get(dataID);
              if (sourceRecord && targetRecord) {
                var nextRecord = RelayModernRecord.update(targetRecord, sourceRecord);
                nextRecord !== targetRecord && (updatedRecordIDs.add(dataID), target.set(dataID, nextRecord));
              } else null === sourceRecord ? (target.delete(dataID), null !== targetRecord && updatedRecordIDs.add(dataID)) : sourceRecord && (target.set(dataID, sourceRecord), 
              updatedRecordIDs.add(dataID));
            }
          }(target, source, this._currentWriteEpoch + 1, idsMarkedForInvalidation, this._updatedRecordIDs, this._invalidatedRecordIDs);
          var log = this.__log;
          null != log && log({
            name: "store.publish",
            source,
            optimistic: target === this._optimisticSource
          });
        }, _proto.subscribe = function(snapshot, callback) {
          return this._storeSubscriptions.subscribe(snapshot, callback);
        }, _proto.holdGC = function() {
          var _this4 = this;
          this._gcRun && (this._gcRun = null, this._shouldScheduleGC = !0), this._gcHoldCounter++;
          return {
            dispose: function() {
              _this4._gcHoldCounter > 0 && (_this4._gcHoldCounter--, 0 === _this4._gcHoldCounter && _this4._shouldScheduleGC && (_this4.scheduleGC(), 
              _this4._shouldScheduleGC = !1));
            }
          };
        }, _proto.toJSON = function() {
          return "RelayModernStore()";
        }, _proto.getEpoch = function() {
          return this._currentWriteEpoch;
        }, _proto.__getUpdatedRecordIDs = function() {
          return this._updatedRecordIDs;
        }, _proto.lookupInvalidationState = function(dataIDs) {
          var _this5 = this, invalidations = new Map;
          return dataIDs.forEach((function(dataID) {
            var _RelayModernRecord$ge, record = _this5.getSource().get(dataID);
            invalidations.set(dataID, null !== (_RelayModernRecord$ge = RelayModernRecord.getInvalidationEpoch(record)) && void 0 !== _RelayModernRecord$ge ? _RelayModernRecord$ge : null);
          })), invalidations.set("global", this._globalInvalidationEpoch), {
            dataIDs,
            invalidations
          };
        }, _proto.checkInvalidationState = function(prevInvalidationState) {
          var currentInvalidations = this.lookupInvalidationState(prevInvalidationState.dataIDs).invalidations, prevInvalidations = prevInvalidationState.invalidations;
          if (currentInvalidations.get("global") !== prevInvalidations.get("global")) return !0;
          var _step, _iterator = (0, _createForOfIteratorHelper2.default)(prevInvalidationState.dataIDs);
          try {
            for (_iterator.s(); !(_step = _iterator.n()).done; ) {
              var dataID = _step.value;
              if (currentInvalidations.get(dataID) !== prevInvalidations.get(dataID)) return !0;
            }
          } catch (err) {
            _iterator.e(err);
          } finally {
            _iterator.f();
          }
          return !1;
        }, _proto.subscribeToInvalidationState = function(invalidationState, callback) {
          var _this6 = this, subscription = {
            callback,
            invalidationState
          };
          return this._invalidationSubscriptions.add(subscription), {
            dispose: function() {
              _this6._invalidationSubscriptions.delete(subscription);
            }
          };
        }, _proto._updateInvalidationSubscription = function(subscription, invalidatedStore) {
          var _this7 = this, callback = subscription.callback, dataIDs = subscription.invalidationState.dataIDs;
          (invalidatedStore || dataIDs.some((function(dataID) {
            return _this7._invalidatedRecordIDs.has(dataID);
          }))) && callback();
        }, _proto.snapshot = function() {
          null != this._optimisticSource && invariant(!1);
          var log = this.__log;
          null != log && log({
            name: "store.snapshot"
          }), this._storeSubscriptions.snapshotSubscriptions(this.getSource()), this._gcRun && (this._gcRun = null, 
          this._shouldScheduleGC = !0), this._optimisticSource = RelayOptimisticRecordSource.create(this.getSource());
        }, _proto.restore = function() {
          var optimisticSource = this._optimisticSource;
          optimisticSource || invariant(!1);
          var log = this.__log;
          null != log && log({
            name: "store.restore"
          });
          var optimisticIDs = RelayOptimisticRecordSource.getOptimisticRecordIDs(optimisticSource);
          this._resolverCache.unsubscribeFromLiveResolverRecords(optimisticIDs), this._optimisticSource = null, 
          this._shouldScheduleGC && this.scheduleGC(), this._storeSubscriptions.restoreSubscriptions(), 
          this._resolverCache.invalidateResolverRecords(optimisticIDs);
        }, _proto.scheduleGC = function() {
          this._gcHoldCounter > 0 ? this._shouldScheduleGC = !0 : this._gcRun || (this._gcRun = this._collect(), 
          this._gcScheduler(this._gcStep));
        }, _proto.__gc = function() {
          if (null == this._optimisticSource) for (var gcRun = this._collect(); !gcRun.next().done; ) ;
        }, _proto._collect = function*() {
          var log = this.__log;
          top: for (;;) {
            null != log && log({
              name: "store.gc.start"
            });
            var _step2, startEpoch = this._currentWriteEpoch, references = new Set, _iterator2 = (0, 
            _createForOfIteratorHelper2.default)(this._roots.values());
            try {
              for (_iterator2.s(); !(_step2 = _iterator2.n()).done; ) {
                var selector = _step2.value.operation.root;
                if (RelayReferenceMarker.mark(this._recordSource, selector, references, this._operationLoader, this._shouldProcessClientComponents), 
                yield, startEpoch !== this._currentWriteEpoch) {
                  null != log && log({
                    name: "store.gc.interrupted"
                  });
                  continue top;
                }
              }
            } catch (err) {
              _iterator2.e(err);
            } finally {
              _iterator2.f();
            }
            if (0 === references.size) this._recordSource.clear(); else for (var storeIDs = this._recordSource.getRecordIDs(), ii = 0; ii < storeIDs.length; ii++) {
              var dataID = storeIDs[ii];
              if (!references.has(dataID)) {
                var record = this._recordSource.get(dataID);
                if (null != record) {
                  var maybeResolverSubscription = RelayModernRecord.getValue(record, RELAY_RESOLVER_LIVE_STATE_SUBSCRIPTION_KEY);
                  null != maybeResolverSubscription && maybeResolverSubscription();
                }
                this._recordSource.remove(dataID);
              }
            }
            return void (null != log && log({
              name: "store.gc.end",
              references
            }));
          }
        }, _proto.__getNormalizationOptions = function(path) {
          return {
            path,
            getDataID: this._getDataID,
            treatMissingFieldsAsNull: this._treatMissingFieldsAsNull,
            shouldProcessClientComponents: this._shouldProcessClientComponents,
            actorIdentifier: this._actorIdentifier
          };
        }, _proto.__notifyUpdatedSubscribers = function(updatedRecords) {
          var nextUpdatedRecordIDs = getUpdatedDataIDs(updatedRecords), prevUpdatedRecordIDs = this._updatedRecordIDs;
          this._updatedRecordIDs = nextUpdatedRecordIDs, this.notify(), this._updatedRecordIDs = prevUpdatedRecordIDs;
        }, RelayModernStore;
      }();
      module.exports = RelayModernStore;
    },
    3367: (module, __unused_webpack_exports, __webpack_require__) => {
      "use strict";
      var _createForOfIteratorHelper2 = (0, __webpack_require__(1440).default)(__webpack_require__(2460)), invariant = __webpack_require__(1235), RelayOperationTracker = function() {
        function RelayOperationTracker() {
          this._ownersToPendingOperations = new Map, this._pendingOperationsToOwners = new Map, 
          this._ownersToPendingPromise = new Map;
        }
        var _proto = RelayOperationTracker.prototype;
        return _proto.update = function(pendingOperation, affectedOwners) {
          if (0 !== affectedOwners.size) {
            var _step, pendingOperationIdentifier = pendingOperation.identifier, newlyAffectedOwnersIdentifier = new Set, _iterator = (0, 
            _createForOfIteratorHelper2.default)(affectedOwners);
            try {
              for (_iterator.s(); !(_step = _iterator.n()).done; ) {
                var ownerIdentifier = _step.value.identifier, pendingOperationsAffectingOwner = this._ownersToPendingOperations.get(ownerIdentifier);
                null != pendingOperationsAffectingOwner ? pendingOperationsAffectingOwner.has(pendingOperationIdentifier) || (pendingOperationsAffectingOwner.set(pendingOperationIdentifier, pendingOperation), 
                newlyAffectedOwnersIdentifier.add(ownerIdentifier)) : (this._ownersToPendingOperations.set(ownerIdentifier, new Map([ [ pendingOperationIdentifier, pendingOperation ] ])), 
                newlyAffectedOwnersIdentifier.add(ownerIdentifier));
              }
            } catch (err) {
              _iterator.e(err);
            } finally {
              _iterator.f();
            }
            if (0 !== newlyAffectedOwnersIdentifier.size) {
              var _step2, ownersAffectedByPendingOperation = this._pendingOperationsToOwners.get(pendingOperationIdentifier) || new Set, _iterator2 = (0, 
              _createForOfIteratorHelper2.default)(newlyAffectedOwnersIdentifier);
              try {
                for (_iterator2.s(); !(_step2 = _iterator2.n()).done; ) {
                  var _ownerIdentifier = _step2.value;
                  this._resolveOwnerResolvers(_ownerIdentifier), ownersAffectedByPendingOperation.add(_ownerIdentifier);
                }
              } catch (err) {
                _iterator2.e(err);
              } finally {
                _iterator2.f();
              }
              this._pendingOperationsToOwners.set(pendingOperationIdentifier, ownersAffectedByPendingOperation);
            }
          }
        }, _proto.complete = function(pendingOperation) {
          var pendingOperationIdentifier = pendingOperation.identifier, affectedOwnersIdentifier = this._pendingOperationsToOwners.get(pendingOperationIdentifier);
          if (null != affectedOwnersIdentifier) {
            var _step3, completedOwnersIdentifier = new Set, updatedOwnersIdentifier = new Set, _iterator3 = (0, 
            _createForOfIteratorHelper2.default)(affectedOwnersIdentifier);
            try {
              for (_iterator3.s(); !(_step3 = _iterator3.n()).done; ) {
                var ownerIdentifier = _step3.value, pendingOperationsAffectingOwner = this._ownersToPendingOperations.get(ownerIdentifier);
                pendingOperationsAffectingOwner && (pendingOperationsAffectingOwner.delete(pendingOperationIdentifier), 
                pendingOperationsAffectingOwner.size > 0 ? updatedOwnersIdentifier.add(ownerIdentifier) : completedOwnersIdentifier.add(ownerIdentifier));
              }
            } catch (err) {
              _iterator3.e(err);
            } finally {
              _iterator3.f();
            }
            var _step4, _iterator4 = (0, _createForOfIteratorHelper2.default)(completedOwnersIdentifier);
            try {
              for (_iterator4.s(); !(_step4 = _iterator4.n()).done; ) {
                var _ownerIdentifier2 = _step4.value;
                this._resolveOwnerResolvers(_ownerIdentifier2), this._ownersToPendingOperations.delete(_ownerIdentifier2);
              }
            } catch (err) {
              _iterator4.e(err);
            } finally {
              _iterator4.f();
            }
            var _step5, _iterator5 = (0, _createForOfIteratorHelper2.default)(updatedOwnersIdentifier);
            try {
              for (_iterator5.s(); !(_step5 = _iterator5.n()).done; ) {
                var _ownerIdentifier3 = _step5.value;
                this._resolveOwnerResolvers(_ownerIdentifier3);
              }
            } catch (err) {
              _iterator5.e(err);
            } finally {
              _iterator5.f();
            }
            this._pendingOperationsToOwners.delete(pendingOperationIdentifier);
          }
        }, _proto._resolveOwnerResolvers = function(ownerIdentifier) {
          var promiseEntry = this._ownersToPendingPromise.get(ownerIdentifier);
          null != promiseEntry && promiseEntry.resolve(), this._ownersToPendingPromise.delete(ownerIdentifier);
        }, _proto.getPendingOperationsAffectingOwner = function(owner) {
          var ownerIdentifier = owner.identifier, pendingOperationsForOwner = this._ownersToPendingOperations.get(ownerIdentifier);
          if (null == pendingOperationsForOwner || 0 === pendingOperationsForOwner.size) return null;
          var resolve, cachedPromiseEntry = this._ownersToPendingPromise.get(ownerIdentifier);
          if (null != cachedPromiseEntry) return {
            promise: cachedPromiseEntry.promise,
            pendingOperations: cachedPromiseEntry.pendingOperations
          };
          var promise = new Promise((function(r) {
            resolve = r;
          }));
          null == resolve && invariant(!1);
          var pendingOperations = Array.from(pendingOperationsForOwner.values());
          return this._ownersToPendingPromise.set(ownerIdentifier, {
            promise,
            resolve,
            pendingOperations
          }), {
            promise,
            pendingOperations
          };
        }, RelayOperationTracker;
      }();
      module.exports = RelayOperationTracker;
    },
    6786: (module, __unused_webpack_exports, __webpack_require__) => {
      "use strict";
      var _objectSpread2 = (0, __webpack_require__(1440).default)(__webpack_require__(2977)), RelayModernRecord = __webpack_require__(5188), RelayRecordSource = __webpack_require__(6886), invariant = __webpack_require__(1235), UNPUBLISH_RECORD_SENTINEL = RelayModernRecord.fromObject(Object.freeze({
        __UNPUBLISH_RECORD_SENTINEL: !0
      })), RelayOptimisticRecordSource = function() {
        function RelayOptimisticRecordSource(base) {
          this._base = base, this._sink = RelayRecordSource.create();
        }
        var _proto = RelayOptimisticRecordSource.prototype;
        return _proto.has = function(dataID) {
          return this._sink.has(dataID) ? this._sink.get(dataID) !== UNPUBLISH_RECORD_SENTINEL : this._base.has(dataID);
        }, _proto.get = function(dataID) {
          if (this._sink.has(dataID)) {
            var sinkRecord = this._sink.get(dataID);
            return sinkRecord === UNPUBLISH_RECORD_SENTINEL ? void 0 : sinkRecord;
          }
          return this._base.get(dataID);
        }, _proto.getStatus = function(dataID) {
          var record = this.get(dataID);
          return void 0 === record ? "UNKNOWN" : null === record ? "NONEXISTENT" : "EXISTENT";
        }, _proto.clear = function() {
          this._base = RelayRecordSource.create(), this._sink.clear();
        }, _proto.delete = function(dataID) {
          this._sink.delete(dataID);
        }, _proto.remove = function(dataID) {
          this._sink.set(dataID, UNPUBLISH_RECORD_SENTINEL);
        }, _proto.set = function(dataID, record) {
          this._sink.set(dataID, record);
        }, _proto.getRecordIDs = function() {
          return Object.keys(this.toJSON());
        }, _proto.size = function() {
          return Object.keys(this.toJSON()).length;
        }, _proto.toJSON = function() {
          var _this = this, merged = (0, _objectSpread2.default)({}, this._base.toJSON());
          return this._sink.getRecordIDs().forEach((function(dataID) {
            var record = _this.get(dataID);
            void 0 === record ? delete merged[dataID] : merged[dataID] = RelayModernRecord.toJSON(record);
          })), merged;
        }, _proto.getOptimisticRecordIDs = function() {
          return new Set(this._sink.getRecordIDs());
        }, RelayOptimisticRecordSource;
      }();
      module.exports = {
        create: function(base) {
          return new RelayOptimisticRecordSource(base);
        },
        getOptimisticRecordIDs: function(source) {
          return source instanceof RelayOptimisticRecordSource || invariant(!1), source.getOptimisticRecordIDs();
        }
      };
    },
    7684: (module, __unused_webpack_exports, __webpack_require__) => {
      "use strict";
      var _global$ErrorUtils$ap, _global$ErrorUtils, RelayRecordSourceMutator = __webpack_require__(3551), RelayRecordSourceProxy = __webpack_require__(9743), RelayRecordSourceSelectorProxy = __webpack_require__(5064), RelayReader = __webpack_require__(3442), RelayRecordSource = __webpack_require__(6886), invariant = __webpack_require__(1235), _global = (__webpack_require__(3349), 
      void 0 !== __webpack_require__.g ? __webpack_require__.g : "undefined" != typeof window ? window : void 0), applyWithGuard = null !== (_global$ErrorUtils$ap = null == _global || null === (_global$ErrorUtils = _global.ErrorUtils) || void 0 === _global$ErrorUtils ? void 0 : _global$ErrorUtils.applyWithGuard) && void 0 !== _global$ErrorUtils$ap ? _global$ErrorUtils$ap : function(callback, context, args, onError, name) {
        return callback.apply(context, args);
      }, RelayPublishQueue = function() {
        function RelayPublishQueue(store, handlerProvider, getDataID, missingFieldHandlers) {
          this._hasStoreSnapshot = !1, this._handlerProvider = handlerProvider || null, this._pendingBackupRebase = !1, 
          this._pendingData = new Set, this._pendingOptimisticUpdates = new Set, this._store = store, 
          this._appliedOptimisticUpdates = new Set, this._gcHold = null, this._getDataID = getDataID, 
          this._missingFieldHandlers = missingFieldHandlers;
        }
        var _proto = RelayPublishQueue.prototype;
        return _proto.applyUpdate = function(updater) {
          (this._appliedOptimisticUpdates.has(updater) || this._pendingOptimisticUpdates.has(updater)) && invariant(!1), 
          this._pendingOptimisticUpdates.add(updater);
        }, _proto.revertUpdate = function(updater) {
          this._pendingOptimisticUpdates.has(updater) ? this._pendingOptimisticUpdates.delete(updater) : this._appliedOptimisticUpdates.has(updater) && (this._pendingBackupRebase = !0, 
          this._appliedOptimisticUpdates.delete(updater));
        }, _proto.revertAll = function() {
          this._pendingBackupRebase = !0, this._pendingOptimisticUpdates.clear(), this._appliedOptimisticUpdates.clear();
        }, _proto.commitPayload = function(operation, payload, updater) {
          this._pendingBackupRebase = !0, this._pendingData.add({
            kind: "payload",
            operation,
            payload,
            updater
          });
        }, _proto.commitUpdate = function(updater) {
          this._pendingBackupRebase = !0, this._pendingData.add({
            kind: "updater",
            updater
          });
        }, _proto.commitSource = function(source) {
          this._pendingBackupRebase = !0, this._pendingData.add({
            kind: "source",
            source
          });
        }, _proto.run = function(sourceOperation) {
          var runWillClearGcHold = 0 === this._appliedOptimisticUpdates && !!this._gcHold;
          if (!this._pendingBackupRebase && 0 === this._pendingOptimisticUpdates.size && !runWillClearGcHold) return [];
          this._pendingBackupRebase && this._hasStoreSnapshot && (this._store.restore(), this._hasStoreSnapshot = !1);
          var invalidatedStore = this._commitData();
          return (this._pendingOptimisticUpdates.size || this._pendingBackupRebase && this._appliedOptimisticUpdates.size) && (this._hasStoreSnapshot || (this._store.snapshot(), 
          this._hasStoreSnapshot = !0), this._applyUpdates()), this._pendingBackupRebase = !1, 
          this._appliedOptimisticUpdates.size > 0 ? this._gcHold || (this._gcHold = this._store.holdGC()) : this._gcHold && (this._gcHold.dispose(), 
          this._gcHold = null), this._store.notify(sourceOperation, invalidatedStore);
        }, _proto._publishSourceFromPayload = function(pendingPayload) {
          var _this = this, payload = pendingPayload.payload, operation = pendingPayload.operation, updater = pendingPayload.updater, source = payload.source, fieldPayloads = payload.fieldPayloads, mutator = new RelayRecordSourceMutator(this._store.getSource(), source), recordSourceProxy = new RelayRecordSourceProxy(mutator, this._getDataID, this._handlerProvider, this._missingFieldHandlers);
          if (fieldPayloads && fieldPayloads.length && fieldPayloads.forEach((function(fieldPayload) {
            var handler = _this._handlerProvider && _this._handlerProvider(fieldPayload.handle);
            handler || invariant(!1), handler.update(recordSourceProxy, fieldPayload);
          })), updater) {
            var selector = operation.fragment;
            null == selector && invariant(!1), updater(new RelayRecordSourceSelectorProxy(mutator, recordSourceProxy, selector, this._missingFieldHandlers), lookupSelector(source, selector));
          }
          var idsMarkedForInvalidation = recordSourceProxy.getIDsMarkedForInvalidation();
          return this._store.publish(source, idsMarkedForInvalidation), recordSourceProxy.isStoreMarkedForInvalidation();
        }, _proto._commitData = function() {
          var _this2 = this;
          if (!this._pendingData.size) return !1;
          var invalidatedStore = !1;
          return this._pendingData.forEach((function(data) {
            if ("payload" === data.kind) {
              var payloadInvalidatedStore = _this2._publishSourceFromPayload(data);
              invalidatedStore = invalidatedStore || payloadInvalidatedStore;
            } else if ("source" === data.kind) {
              var source = data.source;
              _this2._store.publish(source);
            } else {
              var updater = data.updater, sink = RelayRecordSource.create(), mutator = new RelayRecordSourceMutator(_this2._store.getSource(), sink), recordSourceProxy = new RelayRecordSourceProxy(mutator, _this2._getDataID, _this2._handlerProvider, _this2._missingFieldHandlers);
              applyWithGuard(updater, null, [ recordSourceProxy ], null, "RelayPublishQueue:commitData"), 
              invalidatedStore = invalidatedStore || recordSourceProxy.isStoreMarkedForInvalidation();
              var idsMarkedForInvalidation = recordSourceProxy.getIDsMarkedForInvalidation();
              _this2._store.publish(sink, idsMarkedForInvalidation);
            }
          })), this._pendingData.clear(), invalidatedStore;
        }, _proto._applyUpdates = function() {
          var _this3 = this, sink = RelayRecordSource.create(), mutator = new RelayRecordSourceMutator(this._store.getSource(), sink), recordSourceProxy = new RelayRecordSourceProxy(mutator, this._getDataID, this._handlerProvider, this._missingFieldHandlers), processUpdate = function(optimisticUpdate) {
            if (optimisticUpdate.storeUpdater) {
              var storeUpdater = optimisticUpdate.storeUpdater;
              applyWithGuard(storeUpdater, null, [ recordSourceProxy ], null, "RelayPublishQueue:applyUpdates");
            } else {
              var operation = optimisticUpdate.operation, payload = optimisticUpdate.payload, updater = optimisticUpdate.updater, source = payload.source, fieldPayloads = payload.fieldPayloads;
              if (source && recordSourceProxy.publishSource(source, fieldPayloads), updater) {
                var selectorData;
                source && (selectorData = lookupSelector(source, operation.fragment));
                var recordSourceSelectorProxy = new RelayRecordSourceSelectorProxy(mutator, recordSourceProxy, operation.fragment, _this3._missingFieldHandlers);
                applyWithGuard(updater, null, [ recordSourceSelectorProxy, selectorData ], null, "RelayPublishQueue:applyUpdates");
              }
            }
          };
          this._pendingBackupRebase && this._appliedOptimisticUpdates.size && this._appliedOptimisticUpdates.forEach(processUpdate), 
          this._pendingOptimisticUpdates.size && (this._pendingOptimisticUpdates.forEach((function(optimisticUpdate) {
            processUpdate(optimisticUpdate), _this3._appliedOptimisticUpdates.add(optimisticUpdate);
          })), this._pendingOptimisticUpdates.clear()), this._store.publish(sink);
        }, RelayPublishQueue;
      }();
      function lookupSelector(source, selector) {
        return RelayReader.read(source, selector).data;
      }
      module.exports = RelayPublishQueue;
    },
    3442: (module, __unused_webpack_exports, __webpack_require__) => {
      "use strict";
      var _interopRequireDefault = __webpack_require__(1440).default, _objectSpread2 = _interopRequireDefault(__webpack_require__(2977)), _defineProperty2 = _interopRequireDefault(__webpack_require__(5217)), _objectWithoutPropertiesLoose2 = _interopRequireDefault(__webpack_require__(8141)), _createForOfIteratorHelper2 = _interopRequireDefault(__webpack_require__(2460)), _toConsumableArray2 = _interopRequireDefault(__webpack_require__(3451)), _excluded = [ "message" ], isSuspenseSentinel = __webpack_require__(7678).isSuspenseSentinel, RelayConcreteVariables = __webpack_require__(7586), RelayModernRecord = __webpack_require__(5188), _require2 = __webpack_require__(6195), CLIENT_EDGE_TRAVERSAL_PATH = _require2.CLIENT_EDGE_TRAVERSAL_PATH, FRAGMENT_OWNER_KEY = _require2.FRAGMENT_OWNER_KEY, FRAGMENT_PROP_NAME_KEY = _require2.FRAGMENT_PROP_NAME_KEY, FRAGMENTS_KEY = _require2.FRAGMENTS_KEY, ID_KEY = _require2.ID_KEY, MODULE_COMPONENT_KEY = _require2.MODULE_COMPONENT_KEY, ROOT_ID = _require2.ROOT_ID, getArgumentValues = _require2.getArgumentValues, getModuleComponentKey = _require2.getModuleComponentKey, getStorageKey = _require2.getStorageKey, NoopResolverCache = __webpack_require__(1640).NoopResolverCache, _require4 = __webpack_require__(6278), RESOLVER_FRAGMENT_ERRORED_SENTINEL = _require4.RESOLVER_FRAGMENT_ERRORED_SENTINEL, withResolverContext = _require4.withResolverContext, generateTypeID = __webpack_require__(2620).generateTypeID, invariant = __webpack_require__(1235);
      function read(recordSource, selector, resolverCache, resolverContext) {
        return new RelayReader(recordSource, selector, null != resolverCache ? resolverCache : new NoopResolverCache, resolverContext).read();
      }
      var RelayReader = function() {
        function RelayReader(recordSource, selector, resolverCache, resolverContext) {
          var _selector$clientEdgeT;
          this._clientEdgeTraversalPath = null !== (_selector$clientEdgeT = selector.clientEdgeTraversalPath) && void 0 !== _selector$clientEdgeT && _selector$clientEdgeT.length ? (0, 
          _toConsumableArray2.default)(selector.clientEdgeTraversalPath) : [], this._missingClientEdges = [], 
          this._missingLiveResolverFields = [], this._isMissingData = !1, this._isWithinUnmatchedTypeRefinement = !1, 
          this._errorResponseFields = null, this._owner = selector.owner, this._recordSource = recordSource, 
          this._seenRecords = new Set, this._selector = selector, this._variables = selector.variables, 
          this._resolverCache = resolverCache, this._fragmentName = selector.node.name, this._updatedDataIDs = new Set, 
          this._resolverContext = resolverContext;
        }
        var _proto = RelayReader.prototype;
        return _proto.read = function() {
          var _this$_selector = this._selector, node = _this$_selector.node, dataID = _this$_selector.dataID, isWithinUnmatchedTypeRefinement = _this$_selector.isWithinUnmatchedTypeRefinement, abstractKey = node.abstractKey, record = this._recordSource.get(dataID), isDataExpectedToBePresent = !isWithinUnmatchedTypeRefinement;
          (isDataExpectedToBePresent && null == abstractKey && null != record && (this._recordMatchesTypeCondition(record, node.type) || (isDataExpectedToBePresent = !1)), 
          isDataExpectedToBePresent && null != abstractKey && null != record) && (!1 === this._implementsInterface(record, abstractKey) && (isDataExpectedToBePresent = !1));
          this._isWithinUnmatchedTypeRefinement = !isDataExpectedToBePresent;
          var data = this._traverse(node, dataID, null);
          return this._updatedDataIDs.size > 0 && (this._resolverCache.notifyUpdatedSubscribers(this._updatedDataIDs), 
          this._updatedDataIDs.clear()), {
            data,
            isMissingData: this._isMissingData && isDataExpectedToBePresent,
            missingClientEdges: this._missingClientEdges.length ? this._missingClientEdges : null,
            missingLiveResolverFields: this._missingLiveResolverFields,
            seenRecords: this._seenRecords,
            selector: this._selector,
            errorResponseFields: this._errorResponseFields
          };
        }, _proto._maybeAddErrorResponseFields = function(record, storageKey) {
          var errors = RelayModernRecord.getErrors(record, storageKey);
          if (null != errors) {
            var owner = this._fragmentName;
            null == this._errorResponseFields && (this._errorResponseFields = []);
            var _step, _iterator = (0, _createForOfIteratorHelper2.default)(errors);
            try {
              for (_iterator.s(); !(_step = _iterator.n()).done; ) {
                var _error$path, _this$_selector$node$, _this$_selector$node$2, error = _step.value;
                this._errorResponseFields.push({
                  kind: "relay_field_payload.error",
                  owner,
                  fieldPath: (null !== (_error$path = error.path) && void 0 !== _error$path ? _error$path : []).join("."),
                  error,
                  shouldThrow: null !== (_this$_selector$node$ = null === (_this$_selector$node$2 = this._selector.node.metadata) || void 0 === _this$_selector$node$2 ? void 0 : _this$_selector$node$2.throwOnFieldError) && void 0 !== _this$_selector$node$ && _this$_selector$node$,
                  handled: !1
                });
              }
            } catch (err) {
              _iterator.e(err);
            } finally {
              _iterator.f();
            }
          }
        }, _proto._markDataAsMissing = function() {
          var _this$_selector$node$3, _this$_selector$node$4;
          if (!this._isWithinUnmatchedTypeRefinement) {
            null == this._errorResponseFields && (this._errorResponseFields = []);
            var owner = this._fragmentName;
            if (this._errorResponseFields.push(null !== (_this$_selector$node$3 = null === (_this$_selector$node$4 = this._selector.node.metadata) || void 0 === _this$_selector$node$4 ? void 0 : _this$_selector$node$4.throwOnFieldError) && void 0 !== _this$_selector$node$3 && _this$_selector$node$3 ? {
              kind: "missing_expected_data.throw",
              owner,
              fieldPath: "",
              handled: !1
            } : {
              kind: "missing_expected_data.log",
              owner,
              fieldPath: ""
            }), this._isMissingData = !0, this._clientEdgeTraversalPath.length) {
              var top = this._clientEdgeTraversalPath[this._clientEdgeTraversalPath.length - 1];
              null !== top && this._missingClientEdges.push({
                request: top.readerClientEdge.operation,
                clientEdgeDestinationID: top.clientEdgeDestinationID
              });
            }
          }
        }, _proto._traverse = function(node, dataID, prevData) {
          var record = this._recordSource.get(dataID);
          if (this._seenRecords.add(dataID), null == record) return void 0 === record && this._markDataAsMissing(), 
          record;
          var data = prevData || {};
          return this._traverseSelections(node.selections, record, data) ? data : null;
        }, _proto._getVariableValue = function(name) {
          return this._variables.hasOwnProperty(name) || invariant(!1), this._variables[name];
        }, _proto._maybeReportUnexpectedNull = function(fieldPath, action) {
          var owner = this._fragmentName;
          switch (null == this._errorResponseFields && (this._errorResponseFields = []), action) {
           case "THROW":
            return void this._errorResponseFields.push({
              kind: "missing_required_field.throw",
              fieldPath,
              owner,
              handled: !1
            });

           case "LOG":
            return void this._errorResponseFields.push({
              kind: "missing_required_field.log",
              fieldPath,
              owner
            });
          }
        }, _proto._handleCatchToResult = function(selection, record, data, value) {
          var _selection$field$back, _selection$field, _field$alias, _this$_errorResponseF, field = null !== (_selection$field$back = null === (_selection$field = selection.field) || void 0 === _selection$field ? void 0 : _selection$field.backingField) && void 0 !== _selection$field$back ? _selection$field$back : selection.field, fieldName = null !== (_field$alias = null == field ? void 0 : field.alias) && void 0 !== _field$alias ? _field$alias : null == field ? void 0 : field.name;
          null == fieldName && invariant(!1);
          var errors = null === (_this$_errorResponseF = this._errorResponseFields) || void 0 === _this$_errorResponseF ? void 0 : _this$_errorResponseF.map((function(error) {
            switch (error.kind) {
             case "relay_field_payload.error":
              var _error$error = error.error;
              _error$error.message;
              return (0, _objectWithoutPropertiesLoose2.default)(_error$error, _excluded);

             case "missing_expected_data.throw":
             case "missing_expected_data.log":
              return {
                path: error.fieldPath.split(".")
              };

             case "relay_resolver.error":
              return {
                message: "Relay: Error in resolver for field at ".concat(error.fieldPath, " in ").concat(error.owner)
              };

             case "missing_required_field.throw":
              return {
                message: "Relay: Missing @required value at path '".concat(error.fieldPath, "' in '").concat(error.owner, "'.")
              };

             case "missing_required_field.log":
              return null;

             default:
              error.kind, invariant(!1);
            }
          })).filter(Boolean);
          data[fieldName] = null != errors ? {
            ok: !1,
            errors
          } : {
            ok: !0,
            value
          };
        }, _proto._handleRequiredFieldValue = function(selection, value) {
          if (null == value) {
            var action = selection.action;
            return "NONE" !== action && this._maybeReportUnexpectedNull(selection.path, action), 
            !1;
          }
          return !0;
        }, _proto._traverseSelections = function(selections, record, data) {
          for (var i = 0; i < selections.length; i++) {
            var selection = selections[i];
            switch (selection.kind) {
             case "RequiredField":
              var requiredFieldValue = this._readClientSideDirectiveField(selection, record, data);
              if (!this._handleRequiredFieldValue(selection, requiredFieldValue)) return !1;
              break;

             case "CatchField":
              var previousResponseFields = this._errorResponseFields;
              this._errorResponseFields = null;
              var catchFieldValue = this._readClientSideDirectiveField(selection, record, data);
              "RESULT" === selection.to && this._handleCatchToResult(selection, record, data, catchFieldValue);
              var childrenErrorResponseFields = this._errorResponseFields;
              if (this._errorResponseFields = previousResponseFields, null != childrenErrorResponseFields) {
                null == this._errorResponseFields && (this._errorResponseFields = []);
                for (var _i = 0; _i < childrenErrorResponseFields.length; _i++) this._errorResponseFields.push(markFieldErrorHasHandled(childrenErrorResponseFields[_i]));
              }
              break;

             case "ScalarField":
              this._readScalar(selection, record, data);
              break;

             case "LinkedField":
              selection.plural ? this._readPluralLink(selection, record, data) : this._readLink(selection, record, data);
              break;

             case "Condition":
              if (Boolean(this._getVariableValue(selection.condition)) === selection.passingValue) if (!this._traverseSelections(selection.selections, record, data)) return !1;
              break;

             case "InlineFragment":
              if (!1 === this._readInlineFragment(selection, record, data, !1)) return !1;
              break;

             case "RelayLiveResolver":
             case "RelayResolver":
              this._readResolverField(selection, record, data);
              break;

             case "FragmentSpread":
              this._createFragmentPointer(selection, record, data);
              break;

             case "AliasedInlineFragmentSpread":
              var fieldValue = this._readInlineFragment(selection.fragment, record, {}, !0);
              !1 === fieldValue && (fieldValue = null), data[selection.name] = fieldValue;
              break;

             case "ModuleImport":
              this._readModuleImport(selection, record, data);
              break;

             case "InlineDataFragmentSpread":
              this._createInlineDataOrResolverFragmentPointer(selection, record, data);
              break;

             case "Defer":
             case "ClientExtension":
              var isMissingData = this._isMissingData, alreadyMissingClientEdges = this._missingClientEdges.length;
              this._clientEdgeTraversalPath.push(null);
              var _hasExpectedData2 = this._traverseSelections(selection.selections, record, data);
              if (this._isMissingData = isMissingData || this._missingClientEdges.length > alreadyMissingClientEdges || this._missingLiveResolverFields.length > 0, 
              this._clientEdgeTraversalPath.pop(), !_hasExpectedData2) return !1;
              break;

             case "Stream":
              if (!this._traverseSelections(selection.selections, record, data)) return !1;
              break;

             case "ActorChange":
              this._readActorChange(selection, record, data);
              break;

             case "ClientEdgeToClientObject":
             case "ClientEdgeToServerObject":
              this._readClientEdge(selection, record, data);
              break;

             default:
              invariant(!1);
            }
          }
          return !0;
        }, _proto._readClientSideDirectiveField = function(selection, record, data) {
          switch (selection.field.kind) {
           case "ScalarField":
            return this._readScalar(selection.field, record, data);

           case "LinkedField":
            return selection.field.plural ? this._readPluralLink(selection.field, record, data) : this._readLink(selection.field, record, data);

           case "RelayResolver":
           case "RelayLiveResolver":
            return this._readResolverField(selection.field, record, data);

           case "ClientEdgeToClientObject":
           case "ClientEdgeToServerObject":
            return this._readClientEdge(selection.field, record, data);

           default:
            selection.field.kind, invariant(!1);
          }
        }, _proto._readResolverField = function(field, record, data) {
          var _field$alias2, parentRecordID = RelayModernRecord.getDataID(record), result = this._readResolverFieldImpl(field, parentRecordID);
          return data[null !== (_field$alias2 = field.alias) && void 0 !== _field$alias2 ? _field$alias2 : field.name] = result, 
          result;
        }, _proto._readResolverFieldImpl = function(field, parentRecordID) {
          var snapshot, _this = this, fragment = field.fragment, getDataForResolverFragment = function(singularReaderSelector) {
            return null != snapshot ? {
              data: snapshot.data,
              isMissingData: snapshot.isMissingData,
              errorResponseFields: snapshot.errorResponseFields
            } : {
              data: (snapshot = read(_this._recordSource, singularReaderSelector, _this._resolverCache)).data,
              isMissingData: snapshot.isMissingData,
              errorResponseFields: snapshot.errorResponseFields
            };
          }, _this$_resolverCache$ = this._resolverCache.readFromCacheOrEvaluate(parentRecordID, field, this._variables, (function() {
            if (null != fragment) {
              var key = {
                __id: parentRecordID,
                __fragmentOwner: _this._owner,
                __fragments: (0, _defineProperty2.default)({}, fragment.name, fragment.args ? getArgumentValues(fragment.args, _this._variables) : {})
              };
              return withResolverContext({
                getDataForResolverFragment
              }, (function() {
                var _getResolverValue = getResolverValue(field, _this._variables, key, _this._resolverContext), resolverResult = _getResolverValue[0], resolverError = _getResolverValue[1];
                return {
                  resolverResult,
                  snapshot,
                  error: resolverError
                };
              }));
            }
            var _getResolverValue2 = getResolverValue(field, _this._variables, null, _this._resolverContext);
            return {
              resolverResult: _getResolverValue2[0],
              snapshot: void 0,
              error: _getResolverValue2[1]
            };
          }), getDataForResolverFragment), result = _this$_resolverCache$[0], seenRecord = _this$_resolverCache$[1], resolverError = _this$_resolverCache$[2], cachedSnapshot = _this$_resolverCache$[3], suspenseID = _this$_resolverCache$[4], updatedDataIDs = _this$_resolverCache$[5];
          return this._propagateResolverMetadata(field.path, cachedSnapshot, resolverError, seenRecord, suspenseID, updatedDataIDs), 
          result;
        }, _proto._propagateResolverMetadata = function(fieldPath, cachedSnapshot, resolverError, seenRecord, suspenseID, updatedDataIDs) {
          if (null != cachedSnapshot) {
            if (null != cachedSnapshot.missingClientEdges) {
              var _step2, _iterator2 = (0, _createForOfIteratorHelper2.default)(cachedSnapshot.missingClientEdges);
              try {
                for (_iterator2.s(); !(_step2 = _iterator2.n()).done; ) {
                  var missing = _step2.value;
                  this._missingClientEdges.push(missing);
                }
              } catch (err) {
                _iterator2.e(err);
              } finally {
                _iterator2.f();
              }
            }
            if (null != cachedSnapshot.missingLiveResolverFields) {
              this._isMissingData = this._isMissingData || cachedSnapshot.missingLiveResolverFields.length > 0;
              var _step3, _iterator3 = (0, _createForOfIteratorHelper2.default)(cachedSnapshot.missingLiveResolverFields);
              try {
                for (_iterator3.s(); !(_step3 = _iterator3.n()).done; ) {
                  var missingResolverField = _step3.value;
                  this._missingLiveResolverFields.push(missingResolverField);
                }
              } catch (err) {
                _iterator3.e(err);
              } finally {
                _iterator3.f();
              }
            }
            if (null != cachedSnapshot.errorResponseFields) {
              null == this._errorResponseFields && (this._errorResponseFields = []);
              var _step4, _iterator4 = (0, _createForOfIteratorHelper2.default)(cachedSnapshot.errorResponseFields);
              try {
                for (_iterator4.s(); !(_step4 = _iterator4.n()).done; ) {
                  var _this$_selector$node$5, error = _step4.value;
                  !0 === (null === (_this$_selector$node$5 = this._selector.node.metadata) || void 0 === _this$_selector$node$5 ? void 0 : _this$_selector$node$5.throwOnFieldError) ? this._errorResponseFields.push(error) : this._errorResponseFields.push(markFieldErrorHasHandled(error));
                }
              } catch (err) {
                _iterator4.e(err);
              } finally {
                _iterator4.f();
              }
            }
            this._isMissingData = this._isMissingData || cachedSnapshot.isMissingData;
          }
          if (resolverError) {
            var _this$_selector$node$6, _this$_selector$node$7, errorEvent = {
              kind: "relay_resolver.error",
              fieldPath,
              owner: this._fragmentName,
              error: resolverError,
              shouldThrow: null !== (_this$_selector$node$6 = null === (_this$_selector$node$7 = this._selector.node.metadata) || void 0 === _this$_selector$node$7 ? void 0 : _this$_selector$node$7.throwOnFieldError) && void 0 !== _this$_selector$node$6 && _this$_selector$node$6,
              handled: !1
            };
            null == this._errorResponseFields ? this._errorResponseFields = [ errorEvent ] : this._errorResponseFields.push(errorEvent);
          }
          if (null != seenRecord && this._seenRecords.add(seenRecord), null != suspenseID && (this._isMissingData = !0, 
          this._missingLiveResolverFields.push({
            path: "".concat(this._fragmentName, ".").concat(fieldPath),
            liveStateID: suspenseID
          })), null != updatedDataIDs) {
            var _step5, _iterator5 = (0, _createForOfIteratorHelper2.default)(updatedDataIDs);
            try {
              for (_iterator5.s(); !(_step5 = _iterator5.n()).done; ) {
                var recordID = _step5.value;
                this._updatedDataIDs.add(recordID);
              }
            } catch (err) {
              _iterator5.e(err);
            } finally {
              _iterator5.f();
            }
          }
        }, _proto._readClientEdge = function(field, record, data) {
          var _backingField$alias, _this2 = this, backingField = field.backingField;
          "ClientExtension" === backingField.kind && invariant(!1);
          var fieldName = null !== (_backingField$alias = backingField.alias) && void 0 !== _backingField$alias ? _backingField$alias : backingField.name, backingFieldData = {};
          this._traverseSelections([ backingField ], record, backingFieldData);
          var clientEdgeResolverResponse = backingFieldData[fieldName];
          if (null == clientEdgeResolverResponse || isSuspenseSentinel(clientEdgeResolverResponse)) return data[fieldName] = clientEdgeResolverResponse, 
          clientEdgeResolverResponse;
          if (field.linkedField.plural) {
            var storeIDs;
            Array.isArray(clientEdgeResolverResponse) || invariant(!1), "ClientEdgeToClientObject" !== field.kind && invariant(!1), 
            storeIDs = null == field.backingField.normalizationInfo ? clientEdgeResolverResponse.map((function(itemResponse) {
              var _field$concreteType, concreteType = null !== (_field$concreteType = field.concreteType) && void 0 !== _field$concreteType ? _field$concreteType : itemResponse.__typename;
              "string" != typeof concreteType && invariant(!1);
              var localId = extractIdFromResponse(itemResponse, backingField.path, _this2._owner.identifier), id = _this2._resolverCache.ensureClientRecord(localId, concreteType), modelResolvers = field.modelResolvers;
              if (null != modelResolvers) {
                var modelResolver = modelResolvers[concreteType];
                return void 0 === modelResolver && invariant(!1), null != _this2._readResolverFieldImpl(modelResolver, id) ? id : null;
              }
              return id;
            })) : clientEdgeResolverResponse.map((function(obj) {
              return extractIdFromResponse(obj, backingField.path, _this2._owner.identifier);
            })), this._clientEdgeTraversalPath.push(null);
            var edgeValues = this._readLinkedIds(field.linkedField, storeIDs, record, data);
            return this._clientEdgeTraversalPath.pop(), data[fieldName] = edgeValues, edgeValues;
          }
          var _field$concreteType2, storeID, traversalPathSegment, id = extractIdFromResponse(clientEdgeResolverResponse, backingField.path, this._owner.identifier), concreteType = null !== (_field$concreteType2 = field.concreteType) && void 0 !== _field$concreteType2 ? _field$concreteType2 : clientEdgeResolverResponse.__typename;
          "ClientEdgeToClientObject" === field.kind ? null == field.backingField.normalizationInfo ? ("string" != typeof concreteType && invariant(!1), 
          storeID = this._resolverCache.ensureClientRecord(id, concreteType), traversalPathSegment = null) : (storeID = id, 
          traversalPathSegment = null) : (storeID = id, traversalPathSegment = {
            readerClientEdge: field,
            clientEdgeDestinationID: id
          });
          var modelResolvers = field.modelResolvers;
          if (null != modelResolvers) {
            "string" != typeof concreteType && invariant(!1);
            var modelResolver = modelResolvers[concreteType];
            if (void 0 === modelResolver && invariant(!1), null == this._readResolverFieldImpl(modelResolver, storeID)) return data[fieldName] = null, 
            null;
          }
          this._clientEdgeTraversalPath.push(traversalPathSegment);
          var prevData = data[fieldName];
          null != prevData && "object" != typeof prevData && invariant(!1);
          var edgeValue = this._traverse(field.linkedField, storeID, prevData);
          return this._clientEdgeTraversalPath.pop(), data[fieldName] = edgeValue, edgeValue;
        }, _proto._readScalar = function(field, record, data) {
          var _field$alias3, fieldName = null !== (_field$alias3 = field.alias) && void 0 !== _field$alias3 ? _field$alias3 : field.name, storageKey = getStorageKey(field, this._variables), value = RelayModernRecord.getValue(record, storageKey);
          return null === value ? this._maybeAddErrorResponseFields(record, storageKey) : void 0 === value && this._markDataAsMissing(), 
          data[fieldName] = value, value;
        }, _proto._readLink = function(field, record, data) {
          var _field$alias4, fieldName = null !== (_field$alias4 = field.alias) && void 0 !== _field$alias4 ? _field$alias4 : field.name, storageKey = getStorageKey(field, this._variables), linkedID = RelayModernRecord.getLinkedRecordID(record, storageKey);
          if (null == linkedID) return data[fieldName] = linkedID, null === linkedID ? this._maybeAddErrorResponseFields(record, storageKey) : void 0 === linkedID && this._markDataAsMissing(), 
          linkedID;
          var prevData = data[fieldName];
          null != prevData && "object" != typeof prevData && invariant(!1);
          var value = this._traverse(field, linkedID, prevData);
          return data[fieldName] = value, value;
        }, _proto._readActorChange = function(field, record, data) {
          var _field$alias5, fieldName = null !== (_field$alias5 = field.alias) && void 0 !== _field$alias5 ? _field$alias5 : field.name, storageKey = getStorageKey(field, this._variables), externalRef = RelayModernRecord.getActorLinkedRecordID(record, storageKey);
          if (null == externalRef) return data[fieldName] = externalRef, void 0 === externalRef ? this._markDataAsMissing() : null === externalRef && this._maybeAddErrorResponseFields(record, storageKey), 
          data[fieldName];
          var actorIdentifier = externalRef[0], dataID = externalRef[1], fragmentRef = {};
          return this._createFragmentPointer(field.fragmentSpread, RelayModernRecord.fromObject({
            __id: dataID
          }), fragmentRef), data[fieldName] = {
            __fragmentRef: fragmentRef,
            __viewer: actorIdentifier
          }, data[fieldName];
        }, _proto._readPluralLink = function(field, record, data) {
          var storageKey = getStorageKey(field, this._variables), linkedIDs = RelayModernRecord.getLinkedRecordIDs(record, storageKey);
          return null === linkedIDs && this._maybeAddErrorResponseFields(record, storageKey), 
          this._readLinkedIds(field, linkedIDs, record, data);
        }, _proto._readLinkedIds = function(field, linkedIDs, record, data) {
          var _field$alias6, _this3 = this, fieldName = null !== (_field$alias6 = field.alias) && void 0 !== _field$alias6 ? _field$alias6 : field.name;
          if (null == linkedIDs) return data[fieldName] = linkedIDs, void 0 === linkedIDs && this._markDataAsMissing(), 
          linkedIDs;
          var prevData = data[fieldName];
          null == prevData || Array.isArray(prevData) || invariant(!1);
          var linkedArray = prevData || [];
          return linkedIDs.forEach((function(linkedID, nextIndex) {
            if (null == linkedID) return void 0 === linkedID && _this3._markDataAsMissing(), 
            void (linkedArray[nextIndex] = linkedID);
            var prevItem = linkedArray[nextIndex];
            null != prevItem && "object" != typeof prevItem && invariant(!1), linkedArray[nextIndex] = _this3._traverse(field, linkedID, prevItem);
          })), data[fieldName] = linkedArray, linkedArray;
        }, _proto._readModuleImport = function(moduleImport, record, data) {
          var _moduleImport$compone, componentKey = getModuleComponentKey(moduleImport.documentName), component = null !== (_moduleImport$compone = moduleImport.componentModuleProvider) && void 0 !== _moduleImport$compone ? _moduleImport$compone : RelayModernRecord.getValue(record, componentKey);
          null != component ? (this._createFragmentPointer({
            kind: "FragmentSpread",
            name: moduleImport.fragmentName,
            args: moduleImport.args
          }, record, data), data[FRAGMENT_PROP_NAME_KEY] = moduleImport.fragmentPropName, 
          data[MODULE_COMPONENT_KEY] = component) : void 0 === component && this._markDataAsMissing();
        }, _proto._readInlineFragment = function(inlineFragment, record, data, skipUnmatchedAbstractTypes) {
          if (null == inlineFragment.type) return !1 !== this._traverseSelections(inlineFragment.selections, record, data) && data;
          var abstractKey = inlineFragment.abstractKey;
          if (null == abstractKey) {
            if (!this._recordMatchesTypeCondition(record, inlineFragment.type)) return null;
            if (!this._traverseSelections(inlineFragment.selections, record, data)) return !1;
          } else {
            var implementsInterface = this._implementsInterface(record, abstractKey);
            if (!1 === implementsInterface && skipUnmatchedAbstractTypes) return null;
            var parentIsMissingData = this._isMissingData, parentIsWithinUnmatchedTypeRefinement = this._isWithinUnmatchedTypeRefinement;
            this._isWithinUnmatchedTypeRefinement = parentIsWithinUnmatchedTypeRefinement || !1 === implementsInterface;
            var hasMissingData = this._traverseSelections(inlineFragment.selections, record, data);
            if (this._isWithinUnmatchedTypeRefinement = parentIsWithinUnmatchedTypeRefinement, 
            !1 === implementsInterface) return this._isMissingData = parentIsMissingData, null;
            if (null == implementsInterface) return;
            if (!1 === hasMissingData) return !1;
          }
          return data;
        }, _proto._recordMatchesTypeCondition = function(record, type) {
          var typeName = RelayModernRecord.getType(record);
          return null != typeName && typeName === type || RelayModernRecord.getDataID(record) === ROOT_ID;
        }, _proto._createFragmentPointer = function(fragmentSpread, record, data) {
          var fragmentPointers = data[FRAGMENTS_KEY];
          null == fragmentPointers && (fragmentPointers = data[FRAGMENTS_KEY] = {}), ("object" != typeof fragmentPointers || null == fragmentPointers) && invariant(!1), 
          null == data[ID_KEY] && (data[ID_KEY] = RelayModernRecord.getDataID(record)), fragmentPointers[fragmentSpread.name] = getArgumentValues(fragmentSpread.args, this._variables, this._isWithinUnmatchedTypeRefinement), 
          data[FRAGMENT_OWNER_KEY] = this._owner, this._clientEdgeTraversalPath.length > 0 && null !== this._clientEdgeTraversalPath[this._clientEdgeTraversalPath.length - 1] && (data[CLIENT_EDGE_TRAVERSAL_PATH] = (0, 
          _toConsumableArray2.default)(this._clientEdgeTraversalPath));
        }, _proto._createInlineDataOrResolverFragmentPointer = function(fragmentSpreadOrFragment, record, data) {
          var fragmentPointers = data[FRAGMENTS_KEY];
          null == fragmentPointers && (fragmentPointers = data[FRAGMENTS_KEY] = {}), ("object" != typeof fragmentPointers || null == fragmentPointers) && invariant(!1), 
          null == data[ID_KEY] && (data[ID_KEY] = RelayModernRecord.getDataID(record));
          var inlineData = {}, parentFragmentName = this._fragmentName;
          this._fragmentName = fragmentSpreadOrFragment.name;
          var parentVariables = this._variables, argumentVariables = fragmentSpreadOrFragment.args ? getArgumentValues(fragmentSpreadOrFragment.args, this._variables) : {};
          this._variables = RelayConcreteVariables.getFragmentVariables(fragmentSpreadOrFragment, this._owner.variables, argumentVariables), 
          this._traverseSelections(fragmentSpreadOrFragment.selections, record, inlineData), 
          this._variables = parentVariables, this._fragmentName = parentFragmentName, fragmentPointers[fragmentSpreadOrFragment.name] = inlineData;
        }, _proto._implementsInterface = function(record, abstractKey) {
          var typeName = RelayModernRecord.getType(record), typeRecord = this._recordSource.get(generateTypeID(typeName)), implementsInterface = null != typeRecord ? RelayModernRecord.getValue(typeRecord, abstractKey) : null;
          return null == implementsInterface && this._markDataAsMissing(), implementsInterface;
        }, RelayReader;
      }();
      function markFieldErrorHasHandled(event) {
        switch (event.kind) {
         case "missing_expected_data.throw":
         case "missing_required_field.throw":
         case "relay_field_payload.error":
         case "relay_resolver.error":
          return (0, _objectSpread2.default)((0, _objectSpread2.default)({}, event), {}, {
            handled: !0
          });

         case "missing_expected_data.log":
         case "missing_required_field.log":
          return event;

         default:
          event.kind, invariant(!1);
        }
      }
      function getResolverValue(field, variables, fragmentKey, resolverContext) {
        var resolverFunction = "function" == typeof field.resolverModule ? field.resolverModule : field.resolverModule.default, resolverResult = null, resolverError = null;
        try {
          var resolverFunctionArgs = [];
          null != field.fragment && resolverFunctionArgs.push(fragmentKey);
          var args = field.args ? getArgumentValues(field.args, variables) : void 0;
          resolverFunctionArgs.push(args), resolverFunctionArgs.push(resolverContext), resolverResult = resolverFunction.apply(null, resolverFunctionArgs);
        } catch (e) {
          resolverResult = null, e !== RESOLVER_FRAGMENT_ERRORED_SENTINEL && (resolverError = e);
        }
        return [ resolverResult, resolverError ];
      }
      function extractIdFromResponse(individualResponse, path, owner) {
        return "string" == typeof individualResponse ? individualResponse : "object" == typeof individualResponse && null != individualResponse && "string" == typeof individualResponse.id ? individualResponse.id : void invariant(!1);
      }
      module.exports = {
        read
      };
    },
    6886: (module, __unused_webpack_exports, __webpack_require__) => {
      "use strict";
      var _createForOfIteratorHelper2 = (0, __webpack_require__(1440).default)(__webpack_require__(2460)), RelayModernRecord = __webpack_require__(5188), RelayRecordState = __webpack_require__(8337), EXISTENT = RelayRecordState.EXISTENT, NONEXISTENT = RelayRecordState.NONEXISTENT, UNKNOWN = RelayRecordState.UNKNOWN, RelayRecordSource = function() {
        function RelayRecordSource(records) {
          var _this = this;
          this._records = new Map, null != records && Object.keys(records).forEach((function(key) {
            var object = records[key], record = RelayModernRecord.fromObject(object);
            _this._records.set(key, record);
          }));
        }
        RelayRecordSource.create = function(records) {
          return new RelayRecordSource(records);
        };
        var _proto = RelayRecordSource.prototype;
        return _proto.clear = function() {
          this._records = new Map;
        }, _proto.delete = function(dataID) {
          this._records.set(dataID, null);
        }, _proto.get = function(dataID) {
          return this._records.get(dataID);
        }, _proto.getRecordIDs = function() {
          return Array.from(this._records.keys());
        }, _proto.getStatus = function(dataID) {
          return this._records.has(dataID) ? null == this._records.get(dataID) ? NONEXISTENT : EXISTENT : UNKNOWN;
        }, _proto.has = function(dataID) {
          return this._records.has(dataID);
        }, _proto.remove = function(dataID) {
          this._records.delete(dataID);
        }, _proto.set = function(dataID, record) {
          this._records.set(dataID, record);
        }, _proto.size = function() {
          return this._records.size;
        }, _proto.toJSON = function() {
          var _step, obj = {}, _iterator = (0, _createForOfIteratorHelper2.default)(this._records);
          try {
            for (_iterator.s(); !(_step = _iterator.n()).done; ) {
              var _step$value = _step.value, key = _step$value[0], record = _step$value[1];
              obj[key] = RelayModernRecord.toJSON(record);
            }
          } catch (err) {
            _iterator.e(err);
          } finally {
            _iterator.f();
          }
          return obj;
        }, RelayRecordSource;
      }();
      module.exports = RelayRecordSource;
    },
    8337: module => {
      "use strict";
      module.exports = {
        EXISTENT: "EXISTENT",
        NONEXISTENT: "NONEXISTENT",
        UNKNOWN: "UNKNOWN"
      };
    },
    9520: (module, __unused_webpack_exports, __webpack_require__) => {
      "use strict";
      var _createForOfIteratorHelper2 = (0, __webpack_require__(1440).default)(__webpack_require__(2460)), getOperation = __webpack_require__(7782), cloneRelayHandleSourceField = __webpack_require__(1647), getOutputTypeRecordIDs = __webpack_require__(1332), getLocalVariables = __webpack_require__(7586).getLocalVariables, RelayModernRecord = __webpack_require__(5188), RelayStoreUtils = __webpack_require__(6195), generateTypeID = __webpack_require__(2620).generateTypeID, invariant = __webpack_require__(1235), getStorageKey = RelayStoreUtils.getStorageKey, getModuleOperationKey = RelayStoreUtils.getModuleOperationKey;
      var RelayReferenceMarker = function() {
        function RelayReferenceMarker(recordSource, variables, references, operationLoader, shouldProcessClientComponents) {
          this._operationLoader = null != operationLoader ? operationLoader : null, this._operationName = null, 
          this._recordSource = recordSource, this._references = references, this._variables = variables, 
          this._shouldProcessClientComponents = shouldProcessClientComponents;
        }
        var _proto = RelayReferenceMarker.prototype;
        return _proto.mark = function(node, dataID) {
          "Operation" !== node.kind && "SplitOperation" !== node.kind || (this._operationName = node.name), 
          this._traverse(node, dataID);
        }, _proto._traverse = function(node, dataID) {
          this._references.add(dataID);
          var record = this._recordSource.get(dataID);
          null != record && this._traverseSelections(node.selections, record);
        }, _proto._getVariableValue = function(name) {
          return this._variables.hasOwnProperty(name) || invariant(!1), this._variables[name];
        }, _proto._traverseSelections = function(selections, record) {
          var _this = this;
          selections.forEach((function(selection) {
            switch (selection.kind) {
             case "ActorChange":
              _this._traverseLink(selection.linkedField, record);
              break;

             case "LinkedField":
              selection.plural ? _this._traversePluralLink(selection, record) : _this._traverseLink(selection, record);
              break;

             case "Condition":
              Boolean(_this._getVariableValue(selection.condition)) === selection.passingValue && _this._traverseSelections(selection.selections, record);
              break;

             case "InlineFragment":
              if (null == selection.abstractKey) {
                var typeName = RelayModernRecord.getType(record);
                (null != typeName && typeName === selection.type || typeName === RelayStoreUtils.ROOT_TYPE) && _this._traverseSelections(selection.selections, record);
              } else {
                var _typeName = RelayModernRecord.getType(record), typeID = generateTypeID(_typeName);
                _this._references.add(typeID), _this._traverseSelections(selection.selections, record);
              }
              break;

             case "FragmentSpread":
              var prevVariables = _this._variables;
              _this._variables = getLocalVariables(_this._variables, selection.fragment.argumentDefinitions, selection.args), 
              _this._traverseSelections(selection.fragment.selections, record), _this._variables = prevVariables;
              break;

             case "LinkedHandle":
              var handleField = cloneRelayHandleSourceField(selection, selections, _this._variables);
              handleField.plural ? _this._traversePluralLink(handleField, record) : _this._traverseLink(handleField, record);
              break;

             case "Defer":
             case "Stream":
             case "ClientExtension":
              _this._traverseSelections(selection.selections, record);
              break;

             case "ScalarField":
             case "ScalarHandle":
              break;

             case "TypeDiscriminator":
              var _typeName2 = RelayModernRecord.getType(record), _typeID = generateTypeID(_typeName2);
              _this._references.add(_typeID);
              break;

             case "ModuleImport":
              _this._traverseModuleImport(selection, record);
              break;

             case "ClientComponent":
              if (!1 === _this._shouldProcessClientComponents) break;
              _this._traverseSelections(selection.fragment.selections, record);
              break;

             case "RelayResolver":
             case "RelayLiveResolver":
              _this._traverseResolverField(selection, record);
              break;

             case "ClientEdgeToClientObject":
              _this._traverseClientEdgeToClientObject(selection, record);
              break;

             default:
              invariant(!1);
            }
          }));
        }, _proto._traverseClientEdgeToClientObject = function(field, record) {
          var dataID = this._traverseResolverField(field.backingField, record);
          if (null != dataID) {
            var resolverRecord = this._recordSource.get(dataID);
            if (null != resolverRecord) if (field.backingField.isOutputType) {
              var outputTypeRecordIDs = getOutputTypeRecordIDs(resolverRecord);
              if (null != outputTypeRecordIDs) {
                var _step, _iterator = (0, _createForOfIteratorHelper2.default)(outputTypeRecordIDs);
                try {
                  for (_iterator.s(); !(_step = _iterator.n()).done; ) {
                    var _dataID = _step.value;
                    this._references.add(_dataID);
                  }
                } catch (err) {
                  _iterator.e(err);
                } finally {
                  _iterator.f();
                }
              }
            } else {
              var linkedField = field.linkedField, concreteType = linkedField.concreteType;
              if (null == concreteType) return;
              if (linkedField.plural) {
                var dataIDs = RelayModernRecord.getResolverLinkedRecordIDs(resolverRecord, concreteType);
                if (null != dataIDs) {
                  var _step2, _iterator2 = (0, _createForOfIteratorHelper2.default)(dataIDs);
                  try {
                    for (_iterator2.s(); !(_step2 = _iterator2.n()).done; ) {
                      var _dataID2 = _step2.value;
                      null != _dataID2 && this._traverse(linkedField, _dataID2);
                    }
                  } catch (err) {
                    _iterator2.e(err);
                  } finally {
                    _iterator2.f();
                  }
                }
              } else {
                var _dataID3 = RelayModernRecord.getResolverLinkedRecordID(resolverRecord, concreteType);
                null != _dataID3 && this._traverse(linkedField, _dataID3);
              }
            }
          }
        }, _proto._traverseResolverField = function(field, record) {
          var storageKey = getStorageKey(field, this._variables), dataID = RelayModernRecord.getLinkedRecordID(record, storageKey);
          null != dataID && this._references.add(dataID);
          var fragment = field.fragment;
          return null != fragment && this._traverseSelections([ fragment ], record), dataID;
        }, _proto._traverseModuleImport = function(moduleImport, record) {
          var operationLoader = this._operationLoader;
          null === operationLoader && invariant(!1);
          var operationKey = getModuleOperationKey(moduleImport.documentName), operationReference = RelayModernRecord.getValue(record, operationKey);
          if (null != operationReference) {
            var normalizationRootNode = operationLoader.get(operationReference);
            if (null != normalizationRootNode) {
              var operation = getOperation(normalizationRootNode), prevVariables = this._variables;
              this._variables = getLocalVariables(this._variables, operation.argumentDefinitions, moduleImport.args), 
              this._traverseSelections(operation.selections, record), this._variables = prevVariables;
            }
          }
        }, _proto._traverseLink = function(field, record) {
          var storageKey = getStorageKey(field, this._variables), linkedID = RelayModernRecord.getLinkedRecordID(record, storageKey);
          null != linkedID && this._traverse(field, linkedID);
        }, _proto._traversePluralLink = function(field, record) {
          var _this2 = this, storageKey = getStorageKey(field, this._variables), linkedIDs = RelayModernRecord.getLinkedRecordIDs(record, storageKey);
          null != linkedIDs && linkedIDs.forEach((function(linkedID) {
            null != linkedID && _this2._traverse(field, linkedID);
          }));
        }, RelayReferenceMarker;
      }();
      module.exports = {
        mark: function(recordSource, selector, references, operationLoader, shouldProcessClientComponents) {
          var dataID = selector.dataID, node = selector.node, variables = selector.variables;
          new RelayReferenceMarker(recordSource, variables, references, operationLoader, shouldProcessClientComponents).mark(node, dataID);
        }
      };
    },
    3467: (module, __unused_webpack_exports, __webpack_require__) => {
      "use strict";
      var _interopRequireDefault = __webpack_require__(1440).default, _createForOfIteratorHelper2 = _interopRequireDefault(__webpack_require__(2460)), _toConsumableArray2 = _interopRequireDefault(__webpack_require__(3451)), _require = __webpack_require__(4946), getActorIdentifierFromPayload = (_require.ACTOR_IDENTIFIER_FIELD_NAME, 
      _require.getActorIdentifierFromPayload), _require2 = __webpack_require__(2621), generateClientID = _require2.generateClientID, getLocalVariables = (_require2.isClientID, 
      __webpack_require__(7586).getLocalVariables), _require4 = __webpack_require__(5135), buildErrorTrie = _require4.buildErrorTrie, getErrorsByKey = _require4.getErrorsByKey, getNestedErrorTrieByKey = _require4.getNestedErrorTrieByKey, RelayModernRecord = __webpack_require__(5188), createNormalizationSelector = __webpack_require__(7134).createNormalizationSelector, _require6 = __webpack_require__(6195), TYPENAME_KEY = (_require6.ROOT_ID, 
      _require6.TYPENAME_KEY), getArgumentValues = _require6.getArgumentValues, getHandleStorageKey = _require6.getHandleStorageKey, getModuleComponentKey = _require6.getModuleComponentKey, getModuleOperationKey = _require6.getModuleOperationKey, getStorageKey = _require6.getStorageKey, _require7 = __webpack_require__(2620), TYPE_SCHEMA_TYPE = _require7.TYPE_SCHEMA_TYPE, generateTypeID = _require7.generateTypeID, invariant = (__webpack_require__(1345), 
      __webpack_require__(1235));
      __webpack_require__(3349);
      var RelayResponseNormalizer = function() {
        function RelayResponseNormalizer(recordSource, variables, options) {
          this._actorIdentifier = options.actorIdentifier, this._getDataId = options.getDataID, 
          this._handleFieldPayloads = [], this._treatMissingFieldsAsNull = options.treatMissingFieldsAsNull, 
          this._incrementalPlaceholders = [], this._isClientExtension = !1, this._isUnmatchedAbstractType = !1, 
          this._followupPayloads = [], this._path = options.path ? (0, _toConsumableArray2.default)(options.path) : [], 
          this._recordSource = recordSource, this._variables = variables, this._shouldProcessClientComponents = options.shouldProcessClientComponents;
        }
        var _proto = RelayResponseNormalizer.prototype;
        return _proto.normalizeResponse = function(node, dataID, data, errors) {
          var record = this._recordSource.get(dataID);
          return record || invariant(!1), this._assignClientAbstractTypes(node), this._errorTrie = buildErrorTrie(errors), 
          this._traverseSelections(node, record, data), {
            errors,
            fieldPayloads: this._handleFieldPayloads,
            incrementalPlaceholders: this._incrementalPlaceholders,
            followupPayloads: this._followupPayloads,
            source: this._recordSource,
            isFinal: !1
          };
        }, _proto._assignClientAbstractTypes = function(node) {
          var clientAbstractTypes = node.clientAbstractTypes;
          if (null != clientAbstractTypes) for (var _i = 0, _Object$keys = Object.keys(clientAbstractTypes); _i < _Object$keys.length; _i++) {
            var _step, abstractType = _Object$keys[_i], _iterator = (0, _createForOfIteratorHelper2.default)(clientAbstractTypes[abstractType]);
            try {
              for (_iterator.s(); !(_step = _iterator.n()).done; ) {
                var concreteType = _step.value, typeID = generateTypeID(concreteType), typeRecord = this._recordSource.get(typeID);
                null == typeRecord && (typeRecord = RelayModernRecord.create(typeID, TYPE_SCHEMA_TYPE), 
                this._recordSource.set(typeID, typeRecord)), RelayModernRecord.setValue(typeRecord, abstractType, !0);
              }
            } catch (err) {
              _iterator.e(err);
            } finally {
              _iterator.f();
            }
          }
        }, _proto._getVariableValue = function(name) {
          return this._variables.hasOwnProperty(name) || invariant(!1), this._variables[name];
        }, _proto._getRecordType = function(data) {
          var typeName = data[TYPENAME_KEY];
          return null == typeName && invariant(!1), typeName;
        }, _proto._traverseSelections = function(node, record, data) {
          for (var i = 0; i < node.selections.length; i++) {
            var selection = node.selections[i];
            switch (selection.kind) {
             case "ScalarField":
             case "LinkedField":
              this._normalizeField(selection, record, data);
              break;

             case "Condition":
              Boolean(this._getVariableValue(selection.condition)) === selection.passingValue && this._traverseSelections(selection, record, data);
              break;

             case "FragmentSpread":
              var prevVariables = this._variables;
              this._variables = getLocalVariables(this._variables, selection.fragment.argumentDefinitions, selection.args), 
              this._traverseSelections(selection.fragment, record, data), this._variables = prevVariables;
              break;

             case "InlineFragment":
              var abstractKey = selection.abstractKey;
              if (null == abstractKey) {
                RelayModernRecord.getType(record) === selection.type && this._traverseSelections(selection, record, data);
              } else {
                var implementsInterface = data.hasOwnProperty(abstractKey), _typeName = RelayModernRecord.getType(record), typeID = generateTypeID(_typeName), typeRecord = this._recordSource.get(typeID);
                null == typeRecord && (typeRecord = RelayModernRecord.create(typeID, TYPE_SCHEMA_TYPE), 
                this._recordSource.set(typeID, typeRecord)), RelayModernRecord.setValue(typeRecord, abstractKey, implementsInterface), 
                implementsInterface && this._traverseSelections(selection, record, data);
              }
              break;

             case "TypeDiscriminator":
              var _abstractKey = selection.abstractKey, _implementsInterface = data.hasOwnProperty(_abstractKey), _typeName2 = RelayModernRecord.getType(record), _typeID = generateTypeID(_typeName2), _typeRecord = this._recordSource.get(_typeID);
              null == _typeRecord && (_typeRecord = RelayModernRecord.create(_typeID, TYPE_SCHEMA_TYPE), 
              this._recordSource.set(_typeID, _typeRecord)), RelayModernRecord.setValue(_typeRecord, _abstractKey, _implementsInterface);
              break;

             case "LinkedHandle":
             case "ScalarHandle":
              var args = selection.args ? getArgumentValues(selection.args, this._variables) : {}, fieldKey = getStorageKey(selection, this._variables), handleKey = getHandleStorageKey(selection, this._variables);
              this._handleFieldPayloads.push({
                args,
                dataID: RelayModernRecord.getDataID(record),
                fieldKey,
                handle: selection.handle,
                handleKey,
                handleArgs: selection.handleArgs ? getArgumentValues(selection.handleArgs, this._variables) : {}
              });
              break;

             case "ModuleImport":
              this._normalizeModuleImport(selection, record, data);
              break;

             case "Defer":
              this._normalizeDefer(selection, record, data);
              break;

             case "Stream":
              this._normalizeStream(selection, record, data);
              break;

             case "ClientExtension":
              var isClientExtension = this._isClientExtension;
              this._isClientExtension = !0, this._traverseSelections(selection, record, data), 
              this._isClientExtension = isClientExtension;
              break;

             case "ClientComponent":
              if (!1 === this._shouldProcessClientComponents) break;
              this._traverseSelections(selection.fragment, record, data);
              break;

             case "ActorChange":
              this._normalizeActorChange(selection, record, data);
              break;

             case "RelayResolver":
             case "RelayLiveResolver":
              this._normalizeResolver(selection, record, data);
              break;

             case "ClientEdgeToClientObject":
              this._normalizeResolver(selection.backingField, record, data);
              break;

             default:
              invariant(!1);
            }
          }
        }, _proto._normalizeResolver = function(resolver, record, data) {
          null != resolver.fragment && this._traverseSelections(resolver.fragment, record, data);
        }, _proto._normalizeDefer = function(defer, record, data) {
          !1 === (null === defer.if || this._getVariableValue(defer.if)) ? this._traverseSelections(defer, record, data) : this._incrementalPlaceholders.push({
            kind: "defer",
            data,
            label: defer.label,
            path: (0, _toConsumableArray2.default)(this._path),
            selector: createNormalizationSelector(defer, RelayModernRecord.getDataID(record), this._variables),
            typeName: RelayModernRecord.getType(record),
            actorIdentifier: this._actorIdentifier
          });
        }, _proto._normalizeStream = function(stream, record, data) {
          this._traverseSelections(stream, record, data), !0 === (null === stream.if || this._getVariableValue(stream.if)) && this._incrementalPlaceholders.push({
            kind: "stream",
            label: stream.label,
            path: (0, _toConsumableArray2.default)(this._path),
            parentID: RelayModernRecord.getDataID(record),
            node: stream,
            variables: this._variables,
            actorIdentifier: this._actorIdentifier
          });
        }, _proto._normalizeModuleImport = function(moduleImport, record, data) {
          "object" == typeof data && data || invariant(!1);
          var typeName = RelayModernRecord.getType(record), componentKey = getModuleComponentKey(moduleImport.documentName), componentReference = moduleImport.componentModuleProvider || data[componentKey];
          RelayModernRecord.setValue(record, componentKey, null != componentReference ? componentReference : null);
          var operationKey = getModuleOperationKey(moduleImport.documentName), operationReference = moduleImport.operationModuleProvider || data[operationKey];
          RelayModernRecord.setValue(record, operationKey, null != operationReference ? operationReference : null), 
          null != operationReference && this._followupPayloads.push({
            kind: "ModuleImportPayload",
            args: moduleImport.args,
            data,
            dataID: RelayModernRecord.getDataID(record),
            operationReference,
            path: (0, _toConsumableArray2.default)(this._path),
            typeName,
            variables: this._variables,
            actorIdentifier: this._actorIdentifier
          });
        }, _proto._normalizeField = function(selection, record, data) {
          "object" == typeof data && data || invariant(!1);
          var responseKey = selection.alias || selection.name, storageKey = getStorageKey(selection, this._variables), fieldValue = data[responseKey];
          if (null != fieldValue) if ("ScalarField" === selection.kind) RelayModernRecord.setValue(record, storageKey, fieldValue); else if ("LinkedField" === selection.kind) {
            this._path.push(responseKey);
            var oldErrorTrie = this._errorTrie;
            this._errorTrie = null == oldErrorTrie ? null : getNestedErrorTrieByKey(oldErrorTrie, responseKey), 
            selection.plural ? this._normalizePluralLink(selection, record, storageKey, fieldValue) : this._normalizeLink(selection, record, storageKey, fieldValue), 
            this._errorTrie = oldErrorTrie, this._path.pop();
          } else invariant(!1); else {
            if (void 0 === fieldValue) {
              if (this._isClientExtension || this._isUnmatchedAbstractType) return;
              if (!this._treatMissingFieldsAsNull) return void 0;
            }
            RelayModernRecord.setValue(record, storageKey, null);
            var errorTrie = this._errorTrie;
            if (null != errorTrie) {
              var errors = getErrorsByKey(errorTrie, responseKey);
              null != errors && RelayModernRecord.setErrors(record, storageKey, errors);
            }
          }
        }, _proto._normalizeActorChange = function(selection, record, data) {
          var _field$concreteType, field = selection.linkedField;
          "object" == typeof data && data || invariant(!1);
          var responseKey = field.alias || field.name, storageKey = getStorageKey(field, this._variables), fieldValue = data[responseKey];
          if (null != fieldValue) {
            var actorIdentifier = getActorIdentifierFromPayload(fieldValue);
            if (null != actorIdentifier) {
              var typeName = null !== (_field$concreteType = field.concreteType) && void 0 !== _field$concreteType ? _field$concreteType : this._getRecordType(fieldValue), nextID = this._getDataId(fieldValue, typeName) || RelayModernRecord.getLinkedRecordID(record, storageKey) || generateClientID(RelayModernRecord.getDataID(record), storageKey);
              "string" != typeof nextID && invariant(!1), RelayModernRecord.setActorLinkedRecordID(record, storageKey, actorIdentifier, nextID), 
              this._followupPayloads.push({
                kind: "ActorPayload",
                data: fieldValue,
                dataID: nextID,
                path: [].concat((0, _toConsumableArray2.default)(this._path), [ responseKey ]),
                typeName,
                variables: this._variables,
                node: field,
                actorIdentifier
              });
            } else RelayModernRecord.setValue(record, storageKey, null);
          } else {
            if (void 0 === fieldValue) {
              if (this._isClientExtension || this._isUnmatchedAbstractType) return;
              if (!this._treatMissingFieldsAsNull) return void 0;
            }
            RelayModernRecord.setValue(record, storageKey, null);
          }
        }, _proto._normalizeLink = function(field, record, storageKey, fieldValue) {
          var _field$concreteType2;
          "object" == typeof fieldValue && fieldValue || invariant(!1);
          var nextID = this._getDataId(fieldValue, null !== (_field$concreteType2 = field.concreteType) && void 0 !== _field$concreteType2 ? _field$concreteType2 : this._getRecordType(fieldValue)) || RelayModernRecord.getLinkedRecordID(record, storageKey) || generateClientID(RelayModernRecord.getDataID(record), storageKey);
          "string" != typeof nextID && invariant(!1), RelayModernRecord.setLinkedRecordID(record, storageKey, nextID);
          var nextRecord = this._recordSource.get(nextID);
          if (nextRecord) 0; else {
            var typeName = field.concreteType || this._getRecordType(fieldValue);
            nextRecord = RelayModernRecord.create(nextID, typeName), this._recordSource.set(nextID, nextRecord);
          }
          this._traverseSelections(field, nextRecord, fieldValue);
        }, _proto._normalizePluralLink = function(field, record, storageKey, fieldValue) {
          var _this = this;
          Array.isArray(fieldValue) || invariant(!1);
          var prevIDs = RelayModernRecord.getLinkedRecordIDs(record, storageKey), nextIDs = [];
          fieldValue.forEach((function(item, nextIndex) {
            var _field$concreteType3;
            if (null != item) {
              _this._path.push(String(nextIndex));
              var oldErrorTrie = _this._errorTrie;
              _this._errorTrie = null == oldErrorTrie ? null : getNestedErrorTrieByKey(oldErrorTrie, nextIndex), 
              "object" != typeof item && invariant(!1);
              var nextID = _this._getDataId(item, null !== (_field$concreteType3 = field.concreteType) && void 0 !== _field$concreteType3 ? _field$concreteType3 : _this._getRecordType(item)) || prevIDs && prevIDs[nextIndex] || generateClientID(RelayModernRecord.getDataID(record), storageKey, nextIndex);
              "string" != typeof nextID && invariant(!1), nextIDs.push(nextID);
              var nextRecord = _this._recordSource.get(nextID);
              if (nextRecord) 0; else {
                var typeName = field.concreteType || _this._getRecordType(item);
                nextRecord = RelayModernRecord.create(nextID, typeName), _this._recordSource.set(nextID, nextRecord);
              }
              0, _this._traverseSelections(field, nextRecord, item), _this._errorTrie = oldErrorTrie, 
              _this._path.pop();
            } else nextIDs.push(item);
          })), RelayModernRecord.setLinkedRecordIDs(record, storageKey, nextIDs);
        }, _proto._validateRecordType = function(record, field, payload) {
          var _field$concreteType4;
          null !== (_field$concreteType4 = field.concreteType) && void 0 !== _field$concreteType4 || this._getRecordType(payload), 
          RelayModernRecord.getDataID(record);
        }, _proto._validateConflictingFieldsWithIdenticalId = function(record, storageKey, fieldValue) {}, 
        _proto._validateConflictingLinkedFieldsWithIdenticalId = function(prevID, nextID, storageKey) {
          0;
        }, RelayResponseNormalizer;
      }();
      module.exports = {
        normalize: function(recordSource, selector, response, options, errors) {
          var dataID = selector.dataID, node = selector.node, variables = selector.variables;
          return new RelayResponseNormalizer(recordSource, variables, options).normalizeResponse(node, dataID, response, errors);
        }
      };
    },
    8090: (module, __unused_webpack_exports, __webpack_require__) => {
      "use strict";
      __webpack_require__(7700);
      var recycleNodesInto = __webpack_require__(7237), RelayFeatureFlags = __webpack_require__(4309), hasOverlappingIDs = __webpack_require__(4500), hasSignificantOverlappingIDs = __webpack_require__(8726), RelayReader = __webpack_require__(3442), RelayStoreSubscriptions = function() {
        function RelayStoreSubscriptions(log, resolverCache, resolverContext) {
          this._subscriptions = new Set, this.__log = log, this._resolverCache = resolverCache, 
          this._resolverContext = resolverContext;
        }
        var _proto = RelayStoreSubscriptions.prototype;
        return _proto.subscribe = function(snapshot, callback) {
          var _this = this, subscription = {
            backup: null,
            callback,
            snapshot,
            stale: !1
          };
          return this._subscriptions.add(subscription), {
            dispose: function() {
              _this._subscriptions.delete(subscription);
            }
          };
        }, _proto.snapshotSubscriptions = function(source) {
          var _this2 = this;
          this._subscriptions.forEach((function(subscription) {
            if (subscription.stale) {
              var snapshot = subscription.snapshot, backup = RelayReader.read(source, snapshot.selector, _this2._resolverCache, _this2._resolverContext), nextData = recycleNodesInto(snapshot.data, backup.data);
              backup.data = nextData, subscription.backup = backup;
            } else subscription.backup = subscription.snapshot;
          }));
        }, _proto.restoreSubscriptions = function() {
          this._subscriptions.forEach((function(subscription) {
            var backup = subscription.backup;
            subscription.backup = null, backup ? (backup.data !== subscription.snapshot.data && (subscription.stale = !0), 
            subscription.snapshot = {
              data: subscription.snapshot.data,
              isMissingData: backup.isMissingData,
              missingClientEdges: backup.missingClientEdges,
              missingLiveResolverFields: backup.missingLiveResolverFields,
              seenRecords: backup.seenRecords,
              selector: backup.selector,
              errorResponseFields: backup.errorResponseFields
            }) : subscription.stale = !0;
          }));
        }, _proto.updateSubscriptions = function(source, updatedRecordIDs, updatedOwners, sourceOperation) {
          var _this3 = this, hasUpdatedRecords = 0 !== updatedRecordIDs.size;
          this._subscriptions.forEach((function(subscription) {
            var owner = _this3._updateSubscription(source, subscription, updatedRecordIDs, hasUpdatedRecords, sourceOperation);
            null != owner && updatedOwners.push(owner);
          }));
        }, _proto._updateSubscription = function(source, subscription, updatedRecordIDs, hasUpdatedRecords, sourceOperation) {
          var backup = subscription.backup, callback = subscription.callback, snapshot = subscription.snapshot, stale = subscription.stale, hasOverlappingUpdates = hasUpdatedRecords && hasOverlappingIDs(snapshot.seenRecords, updatedRecordIDs);
          if (stale || hasOverlappingUpdates) {
            var nextSnapshot = hasOverlappingUpdates || !backup ? RelayReader.read(source, snapshot.selector, this._resolverCache, this._resolverContext) : backup;
            return nextSnapshot = {
              data: recycleNodesInto(snapshot.data, nextSnapshot.data),
              isMissingData: nextSnapshot.isMissingData,
              missingClientEdges: nextSnapshot.missingClientEdges,
              missingLiveResolverFields: nextSnapshot.missingLiveResolverFields,
              seenRecords: nextSnapshot.seenRecords,
              selector: nextSnapshot.selector,
              errorResponseFields: nextSnapshot.errorResponseFields
            }, subscription.snapshot = nextSnapshot, subscription.stale = !1, nextSnapshot.data !== snapshot.data ? (this.__log && RelayFeatureFlags.ENABLE_NOTIFY_SUBSCRIPTION && this.__log({
              name: "store.notify.subscription",
              sourceOperation,
              snapshot,
              nextSnapshot
            }), callback(nextSnapshot), snapshot.selector.owner) : RelayFeatureFlags.ENABLE_LOOSE_SUBSCRIPTION_ATTRIBUTION && (stale || hasSignificantOverlappingIDs(snapshot.seenRecords, updatedRecordIDs)) ? snapshot.selector.owner : void 0;
          }
        }, _proto.size = function() {
          return this._subscriptions.size;
        }, RelayStoreSubscriptions;
      }();
      module.exports = RelayStoreSubscriptions;
    },
    6195: (module, __unused_webpack_exports, __webpack_require__) => {
      "use strict";
      var _toConsumableArray2 = (0, __webpack_require__(1440).default)(__webpack_require__(3451)), getRelayHandleKey = __webpack_require__(4505), RelayConcreteNode = __webpack_require__(351), stableCopy = __webpack_require__(6163).stableCopy, invariant = __webpack_require__(1235), VARIABLE = RelayConcreteNode.VARIABLE, LITERAL = RelayConcreteNode.LITERAL, OBJECT_VALUE = RelayConcreteNode.OBJECT_VALUE, LIST_VALUE = RelayConcreteNode.LIST_VALUE;
      function getArgumentValue(arg, variables) {
        if (arg.kind === VARIABLE) return function(name, variables) {
          return variables.hasOwnProperty(name) || invariant(!1), stableCopy(variables[name]);
        }(arg.variableName, variables);
        if (arg.kind === LITERAL) return arg.value;
        if (arg.kind === OBJECT_VALUE) {
          var value = {};
          return arg.fields.forEach((function(field) {
            value[field.name] = getArgumentValue(field, variables);
          })), value;
        }
        if (arg.kind === LIST_VALUE) {
          var _value = [];
          return arg.items.forEach((function(item) {
            null != item && _value.push(getArgumentValue(item, variables));
          })), _value;
        }
      }
      function getArgumentValues(args, variables, isWithinUnmatchedTypeRefinement) {
        var values = {};
        return isWithinUnmatchedTypeRefinement && (values[RelayStoreUtils.FRAGMENT_POINTER_IS_WITHIN_UNMATCHED_TYPE_REFINEMENT] = !0), 
        args && args.forEach((function(arg) {
          values[arg.name] = getArgumentValue(arg, variables);
        })), values;
      }
      function formatStorageKey(name, argValues) {
        if (!argValues) return name;
        var values = [];
        for (var argName in argValues) if (argValues.hasOwnProperty(argName)) {
          var _JSON$stringify, value = argValues[argName];
          if (null != value) values.push(argName + ":" + (null !== (_JSON$stringify = JSON.stringify(value)) && void 0 !== _JSON$stringify ? _JSON$stringify : "undefined"));
        }
        return 0 === values.length ? name : name + "(".concat(values.join(","), ")");
      }
      var RelayStoreUtils = {
        ACTOR_IDENTIFIER_KEY: "__actorIdentifier",
        CLIENT_EDGE_TRAVERSAL_PATH: "__clientEdgeTraversalPath",
        FRAGMENTS_KEY: "__fragments",
        FRAGMENT_OWNER_KEY: "__fragmentOwner",
        FRAGMENT_POINTER_IS_WITHIN_UNMATCHED_TYPE_REFINEMENT: "$isWithinUnmatchedTypeRefinement",
        FRAGMENT_PROP_NAME_KEY: "__fragmentPropName",
        MODULE_COMPONENT_KEY: "__module_component",
        ERRORS_KEY: "__errors",
        ID_KEY: "__id",
        REF_KEY: "__ref",
        REFS_KEY: "__refs",
        ROOT_ID: "client:root",
        ROOT_TYPE: "__Root",
        TYPENAME_KEY: "__typename",
        INVALIDATED_AT_KEY: "__invalidated_at",
        RELAY_RESOLVER_VALUE_KEY: "__resolverValue",
        RELAY_RESOLVER_INVALIDATION_KEY: "__resolverValueMayBeInvalid",
        RELAY_RESOLVER_SNAPSHOT_KEY: "__resolverSnapshot",
        RELAY_RESOLVER_ERROR_KEY: "__resolverError",
        RELAY_RESOLVER_OUTPUT_TYPE_RECORD_IDS: "__resolverOutputTypeRecordIDs",
        formatStorageKey,
        getArgumentValue,
        getArgumentValues,
        getHandleStorageKey: function(handleField, variables) {
          var dynamicKey = handleField.dynamicKey, handle = handleField.handle, key = handleField.key, name = handleField.name, args = handleField.args, filters = handleField.filters, handleName = getRelayHandleKey(handle, key, name), filterArgs = null;
          return args && filters && 0 !== args.length && 0 !== filters.length && (filterArgs = args.filter((function(arg) {
            return filters.indexOf(arg.name) > -1;
          }))), dynamicKey && (filterArgs = null != filterArgs ? [ dynamicKey ].concat((0, 
          _toConsumableArray2.default)(filterArgs)) : [ dynamicKey ]), null === filterArgs ? handleName : formatStorageKey(handleName, getArgumentValues(filterArgs, variables));
        },
        getStorageKey: function(field, variables) {
          if (field.storageKey) return field.storageKey;
          var args = function(field) {
            if ("RelayResolver" === field.kind || "RelayLiveResolver" === field.kind) {
              var _field$fragment2, _field$fragment;
              return null == field.args ? null === (_field$fragment = field.fragment) || void 0 === _field$fragment ? void 0 : _field$fragment.args : null == (null === (_field$fragment2 = field.fragment) || void 0 === _field$fragment2 ? void 0 : _field$fragment2.args) ? field.args : field.args.concat(field.fragment.args);
            }
            var args = void 0 === field.args ? void 0 : field.args;
            return args;
          }(field), name = field.name;
          return args && 0 !== args.length ? formatStorageKey(name, getArgumentValues(args, variables)) : name;
        },
        getStableStorageKey: function(name, args) {
          return formatStorageKey(name, stableCopy(args));
        },
        getModuleComponentKey: function(documentName) {
          return "".concat("__module_component_").concat(documentName);
        },
        getModuleOperationKey: function(documentName) {
          return "".concat("__module_operation_").concat(documentName);
        }
      };
      module.exports = RelayStoreUtils;
    },
    1640: (module, __unused_webpack_exports, __webpack_require__) => {
      "use strict";
      var _createForOfIteratorHelper2 = (0, __webpack_require__(1440).default)(__webpack_require__(2460)), recycleNodesInto = __webpack_require__(7237), RELAY_LIVE_RESOLVER = __webpack_require__(351).RELAY_LIVE_RESOLVER, RelayFeatureFlags = __webpack_require__(4309), shallowFreeze = __webpack_require__(405), generateClientID = __webpack_require__(2621).generateClientID, RelayModernRecord = __webpack_require__(5188), _require3 = __webpack_require__(6195), RELAY_RESOLVER_ERROR_KEY = _require3.RELAY_RESOLVER_ERROR_KEY, RELAY_RESOLVER_INVALIDATION_KEY = _require3.RELAY_RESOLVER_INVALIDATION_KEY, RELAY_RESOLVER_SNAPSHOT_KEY = _require3.RELAY_RESOLVER_SNAPSHOT_KEY, RELAY_RESOLVER_VALUE_KEY = _require3.RELAY_RESOLVER_VALUE_KEY, getStorageKey = _require3.getStorageKey, invariant = __webpack_require__(1235), emptySet = (__webpack_require__(3349), 
      new Set), NoopResolverCache = function() {
        function NoopResolverCache() {}
        var _proto = NoopResolverCache.prototype;
        return _proto.readFromCacheOrEvaluate = function(recordID, field, variables, evaluate, getDataForResolverFragment) {
          field.kind === RELAY_LIVE_RESOLVER && invariant(!1);
          var _evaluate = evaluate(), resolverResult = _evaluate.resolverResult, snapshot = _evaluate.snapshot;
          return [ resolverResult, void 0, _evaluate.error, snapshot, void 0, void 0 ];
        }, _proto.invalidateDataIDs = function(updatedDataIDs) {}, _proto.ensureClientRecord = function(id, typeName) {
          invariant(!1);
        }, _proto.notifyUpdatedSubscribers = function(updatedDataIDs) {}, NoopResolverCache;
      }();
      function addDependencyEdge(edges, from, to) {
        var set = edges.get(from);
        set || (set = new Set, edges.set(from, set)), set.add(to);
      }
      var RecordResolverCache = function() {
        function RecordResolverCache(getRecordSource) {
          this._resolverIDToRecordIDs = new Map, this._recordIDToResolverIDs = new Map, this._getRecordSource = getRecordSource;
        }
        var _proto2 = RecordResolverCache.prototype;
        return _proto2.readFromCacheOrEvaluate = function(recordID, field, variables, evaluate, getDataForResolverFragment) {
          var recordSource = this._getRecordSource(), record = recordSource.get(recordID);
          null == record && invariant(!1);
          var storageKey = getStorageKey(field, variables), linkedID = RelayModernRecord.getLinkedRecordID(record, storageKey), linkedRecord = null == linkedID ? null : recordSource.get(linkedID);
          if (null == linkedRecord || this._isInvalid(linkedRecord, getDataForResolverFragment)) {
            var _linkedID;
            linkedID = null !== (_linkedID = linkedID) && void 0 !== _linkedID ? _linkedID : generateClientID(recordID, storageKey), 
            linkedRecord = RelayModernRecord.create(linkedID, "__RELAY_RESOLVER__");
            var evaluationResult = evaluate();
            shallowFreeze(evaluationResult.resolverResult), RelayModernRecord.setValue(linkedRecord, RELAY_RESOLVER_VALUE_KEY, evaluationResult.resolverResult), 
            RelayModernRecord.setValue(linkedRecord, RELAY_RESOLVER_SNAPSHOT_KEY, evaluationResult.snapshot), 
            RelayModernRecord.setValue(linkedRecord, RELAY_RESOLVER_ERROR_KEY, evaluationResult.error), 
            recordSource.set(linkedID, linkedRecord);
            var currentRecord = recordSource.get(recordID);
            null == currentRecord && invariant(!1);
            var nextRecord = RelayModernRecord.clone(currentRecord);
            if (RelayModernRecord.setLinkedRecordID(nextRecord, storageKey, linkedID), recordSource.set(recordID, nextRecord), 
            null != field.fragment) {
              var _evaluationResult$sna, fragmentStorageKey = getStorageKey(field.fragment, variables), resolverID = generateClientID(recordID, fragmentStorageKey);
              addDependencyEdge(this._resolverIDToRecordIDs, resolverID, linkedID), addDependencyEdge(this._recordIDToResolverIDs, recordID, resolverID);
              var seenRecordIds = null === (_evaluationResult$sna = evaluationResult.snapshot) || void 0 === _evaluationResult$sna ? void 0 : _evaluationResult$sna.seenRecords;
              if (null != seenRecordIds) {
                var _step, _iterator = (0, _createForOfIteratorHelper2.default)(seenRecordIds);
                try {
                  for (_iterator.s(); !(_step = _iterator.n()).done; ) {
                    var seenRecordID = _step.value;
                    addDependencyEdge(this._recordIDToResolverIDs, seenRecordID, resolverID);
                  }
                } catch (err) {
                  _iterator.e(err);
                } finally {
                  _iterator.f();
                }
              }
            }
          }
          var answer = RelayModernRecord.getValue(linkedRecord, RELAY_RESOLVER_VALUE_KEY), snapshot = RelayModernRecord.getValue(linkedRecord, RELAY_RESOLVER_SNAPSHOT_KEY);
          return [ answer, linkedID, RelayModernRecord.getValue(linkedRecord, RELAY_RESOLVER_ERROR_KEY), snapshot, void 0, void 0 ];
        }, _proto2.invalidateDataIDs = function(updatedDataIDs) {
          for (var recordSource = this._getRecordSource(), visited = new Set, recordsToVisit = Array.from(updatedDataIDs); recordsToVisit.length; ) {
            var recordID = recordsToVisit.pop();
            updatedDataIDs.add(recordID);
            var _step2, _iterator2 = (0, _createForOfIteratorHelper2.default)(null !== (_this$_recordIDToReso = this._recordIDToResolverIDs.get(recordID)) && void 0 !== _this$_recordIDToReso ? _this$_recordIDToReso : emptySet);
            try {
              for (_iterator2.s(); !(_step2 = _iterator2.n()).done; ) {
                var _this$_recordIDToReso, fragment = _step2.value;
                if (!visited.has(fragment)) {
                  var _step3, _iterator3 = (0, _createForOfIteratorHelper2.default)(null !== (_this$_resolverIDToRe = this._resolverIDToRecordIDs.get(fragment)) && void 0 !== _this$_resolverIDToRe ? _this$_resolverIDToRe : emptySet);
                  try {
                    for (_iterator3.s(); !(_step3 = _iterator3.n()).done; ) {
                      var _this$_resolverIDToRe, anotherRecordID = _step3.value;
                      this._markInvalidatedResolverRecord(anotherRecordID, recordSource, updatedDataIDs), 
                      visited.has(anotherRecordID) || recordsToVisit.push(anotherRecordID);
                    }
                  } catch (err) {
                    _iterator3.e(err);
                  } finally {
                    _iterator3.f();
                  }
                }
              }
            } catch (err) {
              _iterator2.e(err);
            } finally {
              _iterator2.f();
            }
          }
        }, _proto2._markInvalidatedResolverRecord = function(dataID, recordSource, updatedDataIDs) {
          var record = recordSource.get(dataID);
          if (record) {
            var nextRecord = RelayModernRecord.clone(record);
            RelayModernRecord.setValue(nextRecord, RELAY_RESOLVER_INVALIDATION_KEY, !0), recordSource.set(dataID, nextRecord);
          }
        }, _proto2._isInvalid = function(record, getDataForResolverFragment) {
          if (!RelayModernRecord.getValue(record, RELAY_RESOLVER_INVALIDATION_KEY)) return !1;
          var snapshot = RelayModernRecord.getValue(record, RELAY_RESOLVER_SNAPSHOT_KEY), originalInputs = null == snapshot ? void 0 : snapshot.data, readerSelector = null == snapshot ? void 0 : snapshot.selector;
          if (null == originalInputs || null == readerSelector) return !0;
          var latestValues = getDataForResolverFragment(readerSelector).data;
          if (recycleNodesInto(originalInputs, latestValues) !== originalInputs) return !0;
          if (RelayFeatureFlags.MARK_RESOLVER_VALUES_AS_CLEAN_AFTER_FRAGMENT_REREAD) {
            var nextRecord = RelayModernRecord.clone(record);
            RelayModernRecord.setValue(nextRecord, RELAY_RESOLVER_INVALIDATION_KEY, !1), this._getRecordSource().set(RelayModernRecord.getDataID(record), nextRecord);
          }
          return !1;
        }, _proto2.ensureClientRecord = function(id, typename) {
          invariant(!1);
        }, _proto2.notifyUpdatedSubscribers = function(updatedDataIDs) {
          invariant(!1);
        }, RecordResolverCache;
      }();
      module.exports = {
        NoopResolverCache,
        RecordResolverCache
      };
    },
    6278: (module, __unused_webpack_exports, __webpack_require__) => {
      "use strict";
      var getFragment = __webpack_require__(3892).getFragment, eventShouldThrow = __webpack_require__(8746).eventShouldThrow, getSelector = __webpack_require__(7134).getSelector, invariant = __webpack_require__(1235), contextStack = [];
      var RESOLVER_FRAGMENT_ERRORED_SENTINEL = {};
      module.exports = {
        readFragment: function(fragmentInput, fragmentKey) {
          if (!contextStack.length) throw new Error("readFragment should be called only from within a Relay Resolver function.");
          var context = contextStack[contextStack.length - 1], fragmentNode = getFragment(fragmentInput), fragmentSelector = getSelector(fragmentNode, fragmentKey);
          null == fragmentSelector && invariant(!1), "SingularReaderSelector" !== fragmentSelector.kind && invariant(!1);
          var _context$getDataForRe = context.getDataForResolverFragment(fragmentSelector, fragmentKey), data = _context$getDataForRe.data, isMissingData = _context$getDataForRe.isMissingData, errorResponseFields = _context$getDataForRe.errorResponseFields;
          if (isMissingData || null != errorResponseFields && errorResponseFields.some(eventShouldThrow)) throw RESOLVER_FRAGMENT_ERRORED_SENTINEL;
          return data;
        },
        withResolverContext: function(context, cb) {
          contextStack.push(context);
          try {
            return cb();
          } finally {
            contextStack.pop();
          }
        },
        RESOLVER_FRAGMENT_ERRORED_SENTINEL
      };
    },
    2620: module => {
      "use strict";
      module.exports = {
        generateTypeID: function(typeName) {
          return "client:__type:" + typeName;
        },
        isTypeID: function(id) {
          return 0 === id.indexOf("client:__type:");
        },
        TYPE_SCHEMA_TYPE: "__TypeSchema"
      };
    },
    4127: (module, __unused_webpack_exports, __webpack_require__) => {
      "use strict";
      var VIEWER_ID = (0, __webpack_require__(2621).generateClientID)(__webpack_require__(6195).ROOT_ID, "viewer");
      module.exports = {
        VIEWER_ID,
        VIEWER_TYPE: "Viewer"
      };
    },
    1647: (module, __unused_webpack_exports, __webpack_require__) => {
      "use strict";
      var LINKED_FIELD = __webpack_require__(351).LINKED_FIELD, getHandleStorageKey = __webpack_require__(6195).getHandleStorageKey, areEqual = __webpack_require__(1345), invariant = __webpack_require__(1235);
      module.exports = function(handleField, selections, variables) {
        var sourceField = selections.find((function(source) {
          return source.kind === LINKED_FIELD && source.name === handleField.name && source.alias === handleField.alias && areEqual(source.args, handleField.args);
        }));
        sourceField && sourceField.kind === LINKED_FIELD || invariant(!1);
        var handleKey = getHandleStorageKey(handleField, variables);
        return {
          kind: "LinkedField",
          alias: sourceField.alias,
          name: handleKey,
          storageKey: handleKey,
          args: null,
          concreteType: sourceField.concreteType,
          plural: sourceField.plural,
          selections: sourceField.selections
        };
      };
    },
    8187: (module, __unused_webpack_exports, __webpack_require__) => {
      "use strict";
      var SCALAR_FIELD = __webpack_require__(351).SCALAR_FIELD, getHandleStorageKey = __webpack_require__(6195).getHandleStorageKey, areEqual = __webpack_require__(1345), invariant = __webpack_require__(1235);
      module.exports = function(handleField, selections, variables) {
        var sourceField = selections.find((function(source) {
          return source.kind === SCALAR_FIELD && source.name === handleField.name && source.alias === handleField.alias && areEqual(source.args, handleField.args);
        }));
        sourceField && sourceField.kind === SCALAR_FIELD || invariant(!1);
        var handleKey = getHandleStorageKey(handleField, variables);
        return {
          kind: "ScalarField",
          alias: sourceField.alias,
          name: handleKey,
          storageKey: handleKey,
          args: null
        };
      };
    },
    3529: (module, __unused_webpack_exports, __webpack_require__) => {
      "use strict";
      var RelayModernFragmentSpecResolver = __webpack_require__(9850);
      __webpack_require__(3349);
      module.exports = function(context, containerName, fragments, props, rootIsQueryRenderer, callback) {
        return new RelayModernFragmentSpecResolver(context, fragments, props, callback, rootIsQueryRenderer);
      };
    },
    1123: (module, __unused_webpack_exports, __webpack_require__) => {
      "use strict";
      var relayContext, firstReact, invariant = __webpack_require__(1235);
      module.exports = function(react) {
        return relayContext || (relayContext = react.createContext(null), firstReact = react), 
        react !== firstReact && invariant(!1), relayContext;
      };
    },
    206: (module, __unused_webpack_exports, __webpack_require__) => {
      "use strict";
      var _require = __webpack_require__(4127), VIEWER_ID = _require.VIEWER_ID, VIEWER_TYPE = _require.VIEWER_TYPE;
      module.exports = function(fieldValue, typeName) {
        return typeName === VIEWER_TYPE && null == fieldValue.id ? VIEWER_ID : fieldValue.id;
      };
    },
    7087: module => {
      "use strict";
      module.exports = function(event) {
        0;
      };
    },
    4500: module => {
      "use strict";
      var ITERATOR_KEY = Symbol.iterator;
      module.exports = function(seenRecords, updatedRecordIDs) {
        for (var iterator = seenRecords[ITERATOR_KEY](), next = iterator.next(); !next.done; ) {
          var key = next.value;
          if (updatedRecordIDs.has(key)) return !0;
          next = iterator.next();
        }
        return !1;
      };
    },
    8726: (module, __unused_webpack_exports, __webpack_require__) => {
      "use strict";
      var ROOT_ID = __webpack_require__(6195).ROOT_ID, VIEWER_ID = __webpack_require__(4127).VIEWER_ID, ITERATOR_KEY = Symbol.iterator;
      module.exports = function(seenRecords, updatedRecordIDs) {
        for (var iterator = seenRecords[ITERATOR_KEY](), next = iterator.next(); !next.done; ) {
          var key = next.value;
          if (updatedRecordIDs.has(key) && key !== ROOT_ID && key !== VIEWER_ID) return !0;
          next = iterator.next();
        }
        return !1;
      };
    },
    7212: module => {
      "use strict";
      module.exports = function(environment) {
        return Boolean(environment && environment["@@RelayModernEnvironment"]);
      };
    },
    2593: (module, __unused_webpack_exports, __webpack_require__) => {
      "use strict";
      var _createForOfIteratorHelper2 = (0, __webpack_require__(1440).default)(__webpack_require__(2460)), recycleNodesInto = __webpack_require__(7237), RELAY_LIVE_RESOLVER = __webpack_require__(351).RELAY_LIVE_RESOLVER, RelayFeatureFlags = __webpack_require__(4309), shallowFreeze = __webpack_require__(405), _require2 = __webpack_require__(2621), generateClientID = _require2.generateClientID, generateClientObjectClientID = _require2.generateClientObjectClientID, RelayModernRecord = __webpack_require__(5188), createNormalizationSelector = __webpack_require__(7134).createNormalizationSelector, RelayRecordSource = __webpack_require__(6886), normalize = __webpack_require__(3467).normalize, _require5 = __webpack_require__(6195), RELAY_RESOLVER_ERROR_KEY = _require5.RELAY_RESOLVER_ERROR_KEY, RELAY_RESOLVER_INVALIDATION_KEY = _require5.RELAY_RESOLVER_INVALIDATION_KEY, RELAY_RESOLVER_OUTPUT_TYPE_RECORD_IDS = _require5.RELAY_RESOLVER_OUTPUT_TYPE_RECORD_IDS, RELAY_RESOLVER_SNAPSHOT_KEY = _require5.RELAY_RESOLVER_SNAPSHOT_KEY, RELAY_RESOLVER_VALUE_KEY = _require5.RELAY_RESOLVER_VALUE_KEY, getStorageKey = _require5.getStorageKey, getOutputTypeRecordIDs = __webpack_require__(1332), isLiveStateValue = __webpack_require__(7172), isSuspenseSentinel = __webpack_require__(7678).isSuspenseSentinel, invariant = __webpack_require__(1235), RELAY_RESOLVER_LIVE_STATE_SUBSCRIPTION_KEY = (__webpack_require__(3349), 
      "__resolverLiveStateSubscription"), RELAY_RESOLVER_RECORD_TYPENAME = "__RELAY_RESOLVER__";
      function addDependencyEdge(edges, from, to) {
        var set = edges.get(from);
        set || (set = new Set, edges.set(from, set)), set.add(to);
      }
      var LiveResolverCache = function() {
        function LiveResolverCache(getRecordSource, store) {
          this._resolverIDToRecordIDs = new Map, this._recordIDToResolverIDs = new Map, this._getRecordSource = getRecordSource, 
          this._store = store, this._handlingBatch = !1, this._liveResolverBatchRecordSource = null;
        }
        var _proto = LiveResolverCache.prototype;
        return _proto.readFromCacheOrEvaluate = function(recordID, field, variables, evaluate, getDataForResolverFragment) {
          var updatedDataIDs, recordSource = this._getRecordSource(), record = expectRecord(recordSource, recordID), storageKey = getStorageKey(field, variables), linkedID = RelayModernRecord.getLinkedRecordID(record, storageKey), linkedRecord = null == linkedID ? null : recordSource.get(linkedID);
          if (null == linkedRecord || this._isInvalid(linkedRecord, getDataForResolverFragment)) {
            var _linkedID;
            null != linkedRecord && maybeUnsubscribeFromLiveState(linkedRecord), linkedID = null !== (_linkedID = linkedID) && void 0 !== _linkedID ? _linkedID : generateClientID(recordID, storageKey), 
            linkedRecord = RelayModernRecord.create(linkedID, RELAY_RESOLVER_RECORD_TYPENAME);
            var evaluationResult = evaluate();
            if (RelayModernRecord.setValue(linkedRecord, RELAY_RESOLVER_SNAPSHOT_KEY, evaluationResult.snapshot), 
            RelayModernRecord.setValue(linkedRecord, RELAY_RESOLVER_ERROR_KEY, evaluationResult.error), 
            field.kind === RELAY_LIVE_RESOLVER) if (null != evaluationResult.resolverResult) {
              0, null != evaluationResult.error && invariant(!1);
              var liveState = evaluationResult.resolverResult;
              updatedDataIDs = this._setLiveStateValue(linkedRecord, linkedID, liveState, field, variables);
            } else ; else updatedDataIDs = this._setResolverValue(linkedRecord, evaluationResult.resolverResult, field, variables);
            recordSource.set(linkedID, linkedRecord);
            var currentRecord = expectRecord(recordSource, recordID), nextRecord = RelayModernRecord.clone(currentRecord);
            if (RelayModernRecord.setLinkedRecordID(nextRecord, storageKey, linkedID), recordSource.set(recordID, nextRecord), 
            null != field.fragment) {
              var _evaluationResult$sna2, fragmentStorageKey = getStorageKey(field.fragment, variables), resolverID = generateClientID(recordID, fragmentStorageKey);
              addDependencyEdge(this._resolverIDToRecordIDs, resolverID, linkedID), addDependencyEdge(this._recordIDToResolverIDs, recordID, resolverID);
              var seenRecordIds = null === (_evaluationResult$sna2 = evaluationResult.snapshot) || void 0 === _evaluationResult$sna2 ? void 0 : _evaluationResult$sna2.seenRecords;
              if (null != seenRecordIds) {
                var _step, _iterator = (0, _createForOfIteratorHelper2.default)(seenRecordIds);
                try {
                  for (_iterator.s(); !(_step = _iterator.n()).done; ) {
                    var seenRecordID = _step.value;
                    addDependencyEdge(this._recordIDToResolverIDs, seenRecordID, resolverID);
                  }
                } catch (err) {
                  _iterator.e(err);
                } finally {
                  _iterator.f();
                }
              }
            }
          } else if (field.kind === RELAY_LIVE_RESOLVER && RelayModernRecord.getValue(linkedRecord, "__resolverLiveStateDirty")) {
            var _linkedID2;
            linkedID = null !== (_linkedID2 = linkedID) && void 0 !== _linkedID2 ? _linkedID2 : generateClientID(recordID, storageKey), 
            linkedRecord = RelayModernRecord.clone(linkedRecord);
            var _liveState = RelayModernRecord.getValue(linkedRecord, "__resolverLiveStateValue");
            isLiveStateValue(_liveState) || invariant(!1), updatedDataIDs = this._setLiveResolverValue(linkedRecord, _liveState, field, variables), 
            RelayModernRecord.setValue(linkedRecord, "__resolverLiveStateDirty", !1), recordSource.set(linkedID, linkedRecord);
          }
          var _linkedID3, answer = this._getResolverValue(linkedRecord), snapshot = RelayModernRecord.getValue(linkedRecord, RELAY_RESOLVER_SNAPSHOT_KEY), error = RelayModernRecord.getValue(linkedRecord, RELAY_RESOLVER_ERROR_KEY), suspenseID = null;
          isSuspenseSentinel(answer) && (suspenseID = null !== (_linkedID3 = linkedID) && void 0 !== _linkedID3 ? _linkedID3 : generateClientID(recordID, storageKey));
          return [ answer, linkedID, error, snapshot, suspenseID, updatedDataIDs ];
        }, _proto.getLiveResolverPromise = function(liveStateID) {
          var liveStateRecord = this._getRecordSource().get(liveStateID);
          null == liveStateRecord && invariant(!1);
          var liveState = RelayModernRecord.getValue(liveStateRecord, "__resolverLiveStateValue");
          return new Promise((function(resolve) {
            var unsubscribe = liveState.subscribe((function() {
              unsubscribe(), resolve();
            }));
          }));
        }, _proto._setLiveStateValue = function(linkedRecord, linkedID, liveState, field, variables) {
          var handler = this._makeLiveStateHandler(linkedID), unsubscribe = liveState.subscribe(handler);
          RelayModernRecord.setValue(linkedRecord, "__resolverLiveStateValue", liveState);
          var updatedDataIDs = this._setLiveResolverValue(linkedRecord, liveState, field, variables);
          return RelayModernRecord.setValue(linkedRecord, "__resolverLiveStateDirty", !1), 
          RelayModernRecord.setValue(linkedRecord, RELAY_RESOLVER_LIVE_STATE_SUBSCRIPTION_KEY, unsubscribe), 
          updatedDataIDs;
        }, _proto._makeLiveStateHandler = function(linkedID) {
          var _this = this;
          return function() {
            var currentRecord = _this._getRecordSource().get(linkedID);
            if (currentRecord && RelayModernRecord.hasValue(currentRecord, "__resolverLiveStateValue")) {
              var nextRecord = RelayModernRecord.clone(currentRecord);
              RelayModernRecord.setValue(nextRecord, "__resolverLiveStateDirty", !0), _this._setLiveResolverUpdate(linkedID, nextRecord);
            }
          };
        }, _proto._setLiveResolverUpdate = function(linkedId, record) {
          if (this._handlingBatch) null == this._liveResolverBatchRecordSource && (this._liveResolverBatchRecordSource = RelayRecordSource.create()), 
          this._liveResolverBatchRecordSource.set(linkedId, record); else {
            var nextSource = RelayRecordSource.create();
            nextSource.set(linkedId, record), this._store.publish(nextSource), this._store.notify();
          }
        }, _proto.batchLiveStateUpdates = function(callback) {
          this._handlingBatch && invariant(!1), this._handlingBatch = !0;
          try {
            callback();
          } finally {
            null != this._liveResolverBatchRecordSource && (this._store.publish(this._liveResolverBatchRecordSource), 
            this._store.notify()), this._liveResolverBatchRecordSource = null, this._handlingBatch = !1;
          }
        }, _proto._setLiveResolverValue = function(resolverRecord, liveValue, field, variables) {
          var value = null, resolverError = null;
          try {
            value = liveValue.read();
          } catch (e) {
            resolverError = e;
          }
          return RelayModernRecord.setValue(resolverRecord, RELAY_RESOLVER_ERROR_KEY, resolverError), 
          this._setResolverValue(resolverRecord, value, field, variables);
        }, _proto._setResolverValue = function(resolverRecord, value, field, variables) {
          var normalizationInfo = field.normalizationInfo, updatedDataIDs = null;
          if (null == value || null == normalizationInfo || isSuspenseSentinel(value)) shallowFreeze(value), 
          RelayModernRecord.setValue(resolverRecord, RELAY_RESOLVER_VALUE_KEY, value); else {
            var resolverValue, prevOutputTypeRecordIDs = getOutputTypeRecordIDs(resolverRecord), nextOutputTypeRecordIDs = new Set, currentSource = this._getRecordSource();
            if (normalizationInfo.plural) {
              Array.isArray(value) || invariant(!1), resolverValue = [];
              for (var nextSource = RelayRecordSource.create(), ii = 0; ii < value.length; ii++) {
                var currentValue = value[ii];
                if (null != currentValue) {
                  "object" != typeof currentValue && invariant(!1);
                  var _step2, typename = getConcreteTypename(normalizationInfo, currentValue), outputTypeDataID = generateClientObjectClientID(typename, RelayModernRecord.getDataID(resolverRecord), ii), source = this._normalizeOutputTypeValue(outputTypeDataID, currentValue, variables, normalizationInfo, [ field.path, String(ii) ], typename), _iterator2 = (0, 
                  _createForOfIteratorHelper2.default)(source.getRecordIDs());
                  try {
                    for (_iterator2.s(); !(_step2 = _iterator2.n()).done; ) {
                      var recordID = _step2.value;
                      nextSource.set(recordID, expectRecord(source, recordID)), nextOutputTypeRecordIDs.add(recordID);
                    }
                  } catch (err) {
                    _iterator2.e(err);
                  } finally {
                    _iterator2.f();
                  }
                  resolverValue.push(outputTypeDataID);
                }
              }
              updatedDataIDs = updateCurrentSource(currentSource, nextSource, prevOutputTypeRecordIDs);
            } else {
              "object" != typeof value && invariant(!1);
              var _step3, _typename = getConcreteTypename(normalizationInfo, value), _outputTypeDataID = generateClientObjectClientID(_typename, RelayModernRecord.getDataID(resolverRecord)), _nextSource = this._normalizeOutputTypeValue(_outputTypeDataID, value, variables, normalizationInfo, [ field.path ], _typename), _iterator3 = (0, 
              _createForOfIteratorHelper2.default)(_nextSource.getRecordIDs());
              try {
                for (_iterator3.s(); !(_step3 = _iterator3.n()).done; ) {
                  var _recordID = _step3.value;
                  nextOutputTypeRecordIDs.add(_recordID);
                }
              } catch (err) {
                _iterator3.e(err);
              } finally {
                _iterator3.f();
              }
              resolverValue = _outputTypeDataID, updatedDataIDs = updateCurrentSource(currentSource, _nextSource, prevOutputTypeRecordIDs);
            }
            RelayModernRecord.setValue(resolverRecord, RELAY_RESOLVER_OUTPUT_TYPE_RECORD_IDS, nextOutputTypeRecordIDs), 
            shallowFreeze(resolverValue), RelayModernRecord.setValue(resolverRecord, RELAY_RESOLVER_VALUE_KEY, resolverValue);
          }
          return updatedDataIDs;
        }, _proto.notifyUpdatedSubscribers = function(updatedDataIDs) {
          this._store.__notifyUpdatedSubscribers(updatedDataIDs);
        }, _proto._getResolverValue = function(resolverRecord) {
          return RelayModernRecord.getValue(resolverRecord, RELAY_RESOLVER_VALUE_KEY);
        }, _proto.invalidateDataIDs = function(updatedDataIDs) {
          for (var recordSource = this._getRecordSource(), visited = new Set, recordsToVisit = Array.from(updatedDataIDs); recordsToVisit.length; ) {
            var recordID = recordsToVisit.pop();
            RelayFeatureFlags.AVOID_CYCLES_IN_RESOLVER_NOTIFICATION && visited.add(recordID), 
            updatedDataIDs.add(recordID);
            var fragmentSet = this._recordIDToResolverIDs.get(recordID);
            if (null != fragmentSet) {
              var _step4, _iterator4 = (0, _createForOfIteratorHelper2.default)(fragmentSet);
              try {
                for (_iterator4.s(); !(_step4 = _iterator4.n()).done; ) {
                  var fragment = _step4.value;
                  if (!visited.has(fragment)) {
                    RelayFeatureFlags.AVOID_CYCLES_IN_RESOLVER_NOTIFICATION && visited.add(fragment);
                    var recordSet = this._resolverIDToRecordIDs.get(fragment);
                    if (null == recordSet) continue;
                    var _step5, _iterator5 = (0, _createForOfIteratorHelper2.default)(recordSet);
                    try {
                      for (_iterator5.s(); !(_step5 = _iterator5.n()).done; ) {
                        var anotherRecordID = _step5.value;
                        markInvalidatedResolverRecord(anotherRecordID, recordSource), visited.has(anotherRecordID) || (RelayFeatureFlags.AVOID_CYCLES_IN_RESOLVER_NOTIFICATION && visited.add(anotherRecordID), 
                        recordsToVisit.push(anotherRecordID));
                      }
                    } catch (err) {
                      _iterator5.e(err);
                    } finally {
                      _iterator5.f();
                    }
                  }
                }
              } catch (err) {
                _iterator4.e(err);
              } finally {
                _iterator4.f();
              }
            }
          }
        }, _proto._isInvalid = function(record, getDataForResolverFragment) {
          if (!RelayModernRecord.getValue(record, RELAY_RESOLVER_INVALIDATION_KEY)) return !1;
          var snapshot = RelayModernRecord.getValue(record, RELAY_RESOLVER_SNAPSHOT_KEY), originalInputs = null == snapshot ? void 0 : snapshot.data, readerSelector = null == snapshot ? void 0 : snapshot.selector;
          if (null == originalInputs || null == readerSelector) return !0;
          var latestValues = getDataForResolverFragment(readerSelector).data;
          if (recycleNodesInto(originalInputs, latestValues) !== originalInputs) return !0;
          if (RelayFeatureFlags.MARK_RESOLVER_VALUES_AS_CLEAN_AFTER_FRAGMENT_REREAD) {
            var nextRecord = RelayModernRecord.clone(record);
            RelayModernRecord.setValue(nextRecord, RELAY_RESOLVER_INVALIDATION_KEY, !1), this._getRecordSource().set(RelayModernRecord.getDataID(record), nextRecord);
          }
          return !1;
        }, _proto._normalizeOutputTypeValue = function(outputTypeDataID, value, variables, normalizationInfo, fieldPath, typename) {
          var source = RelayRecordSource.create();
          switch (normalizationInfo.kind) {
           case "OutputType":
            var record = RelayModernRecord.create(outputTypeDataID, typename);
            source.set(outputTypeDataID, record);
            var selector = createNormalizationSelector(normalizationInfo.normalizationNode, outputTypeDataID, variables), normalizationOptions = this._store.__getNormalizationOptions(fieldPath);
            return normalize(source, selector, value, normalizationOptions).source;

           case "WeakModel":
            var _record = RelayModernRecord.create(outputTypeDataID, typename);
            return RelayModernRecord.setValue(_record, "__relay_model_instance", value), source.set(outputTypeDataID, _record), 
            source;

           default:
            normalizationInfo.kind, invariant(!1);
          }
        }, _proto.ensureClientRecord = function(id, typeName) {
          var key = generateClientObjectClientID(typeName, id), recordSource = this._getRecordSource();
          if (!recordSource.has(key)) {
            var newRecord = RelayModernRecord.create(key, typeName);
            RelayModernRecord.setValue(newRecord, "id", id), recordSource.set(key, newRecord);
          }
          return key;
        }, _proto.unsubscribeFromLiveResolverRecords = function(invalidatedDataIDs) {
          return function(recordSource, invalidatedDataIDs) {
            if (0 === invalidatedDataIDs.size) return;
            var _step10, _iterator10 = (0, _createForOfIteratorHelper2.default)(invalidatedDataIDs);
            try {
              for (_iterator10.s(); !(_step10 = _iterator10.n()).done; ) {
                var dataID = _step10.value, record = recordSource.get(dataID);
                null != record && isResolverRecord(record) && maybeUnsubscribeFromLiveState(record);
              }
            } catch (err) {
              _iterator10.e(err);
            } finally {
              _iterator10.f();
            }
          }(this._getRecordSource(), invalidatedDataIDs);
        }, _proto.invalidateResolverRecords = function(invalidatedDataIDs) {
          if (0 !== invalidatedDataIDs.size) {
            var _step6, _iterator6 = (0, _createForOfIteratorHelper2.default)(invalidatedDataIDs);
            try {
              for (_iterator6.s(); !(_step6 = _iterator6.n()).done; ) {
                var dataID = _step6.value, record = this._getRecordSource().get(dataID);
                null != record && isResolverRecord(record) && this._getRecordSource().delete(dataID);
              }
            } catch (err) {
              _iterator6.e(err);
            } finally {
              _iterator6.f();
            }
          }
        }, LiveResolverCache;
      }();
      function updateCurrentSource(currentSource, nextSource, prevOutputTypeRecordIDs) {
        var updatedDataIDs = new Set;
        if (null != prevOutputTypeRecordIDs) {
          var _step7, _iterator7 = (0, _createForOfIteratorHelper2.default)(prevOutputTypeRecordIDs);
          try {
            for (_iterator7.s(); !(_step7 = _iterator7.n()).done; ) {
              var recordID = _step7.value;
              nextSource.has(recordID) || (updatedDataIDs.add(recordID), currentSource.remove(recordID));
            }
          } catch (err) {
            _iterator7.e(err);
          } finally {
            _iterator7.f();
          }
        }
        var _step8, _iterator8 = (0, _createForOfIteratorHelper2.default)(nextSource.getRecordIDs());
        try {
          for (_iterator8.s(); !(_step8 = _iterator8.n()).done; ) {
            var _recordID2 = _step8.value, nextRecord = expectRecord(nextSource, _recordID2);
            if (currentSource.has(_recordID2)) {
              var currentRecord = expectRecord(currentSource, _recordID2), updatedRecord = RelayModernRecord.update(currentRecord, nextRecord);
              updatedRecord !== currentRecord && (updatedDataIDs.add(_recordID2), currentSource.set(_recordID2, updatedRecord), 
              markInvalidatedLinkedResolverRecords(currentRecord, currentSource));
            } else currentSource.set(_recordID2, nextRecord);
          }
        } catch (err) {
          _iterator8.e(err);
        } finally {
          _iterator8.f();
        }
        return updatedDataIDs;
      }
      function markInvalidatedResolverRecord(dataID, recordSource) {
        var record = recordSource.get(dataID);
        if (record) {
          var nextRecord = RelayModernRecord.clone(record);
          RelayModernRecord.setValue(nextRecord, RELAY_RESOLVER_INVALIDATION_KEY, !0), recordSource.set(dataID, nextRecord);
        }
      }
      function markInvalidatedLinkedResolverRecords(record, recordSource) {
        var _step9, currentLinkedDataIDs = function(record) {
          var linkedRecordIDs = new Set;
          return RelayModernRecord.getFields(record).forEach((function(field) {
            if (RelayModernRecord.hasLinkedRecordID(record, field)) {
              var linkedRecordID = RelayModernRecord.getLinkedRecordID(record, field);
              null != linkedRecordID && linkedRecordIDs.add(linkedRecordID);
            } else if (RelayModernRecord.hasLinkedRecordIDs(record, field)) {
              var _RelayModernRecord$ge;
              null === (_RelayModernRecord$ge = RelayModernRecord.getLinkedRecordIDs(record, field)) || void 0 === _RelayModernRecord$ge || _RelayModernRecord$ge.forEach((function(linkedRecordID) {
                null != linkedRecordID && linkedRecordIDs.add(linkedRecordID);
              }));
            }
          })), linkedRecordIDs;
        }(record), _iterator9 = (0, _createForOfIteratorHelper2.default)(currentLinkedDataIDs);
        try {
          for (_iterator9.s(); !(_step9 = _iterator9.n()).done; ) {
            var recordID = _step9.value, _record2 = recordSource.get(recordID);
            null != _record2 && isResolverRecord(_record2) && markInvalidatedResolverRecord(recordID, recordSource);
          }
        } catch (err) {
          _iterator9.e(err);
        } finally {
          _iterator9.f();
        }
      }
      function isResolverRecord(record) {
        return RelayModernRecord.getType(record) === RELAY_RESOLVER_RECORD_TYPENAME;
      }
      function maybeUnsubscribeFromLiveState(linkedRecord) {
        var previousUnsubscribe = RelayModernRecord.getValue(linkedRecord, RELAY_RESOLVER_LIVE_STATE_SUBSCRIPTION_KEY);
        null != previousUnsubscribe && previousUnsubscribe();
      }
      function expectRecord(source, recordID) {
        var record = source.get(recordID);
        return null == record && invariant(!1), record;
      }
      function getConcreteTypename(normalizationInfo, currentValue) {
        var _normalizationInfo$co, typename = null !== (_normalizationInfo$co = normalizationInfo.concreteType) && void 0 !== _normalizationInfo$co ? _normalizationInfo$co : currentValue.__typename;
        return null == typename && invariant(!1), typename;
      }
      module.exports = {
        LiveResolverCache,
        getUpdatedDataIDs: function(updatedRecords) {
          return updatedRecords;
        },
        RELAY_RESOLVER_LIVE_STATE_SUBSCRIPTION_KEY
      };
    },
    7678: module => {
      "use strict";
      var LIVE_RESOLVER_SUSPENSE_SENTINEL = Object.freeze({
        __LIVE_RESOLVER_SUSPENSE_SENTINEL: !0
      });
      module.exports = {
        isSuspenseSentinel: function(value) {
          return value === LIVE_RESOLVER_SUSPENSE_SENTINEL;
        },
        suspenseSentinel: function() {
          return LIVE_RESOLVER_SUSPENSE_SENTINEL;
        }
      };
    },
    1332: (module, __unused_webpack_exports, __webpack_require__) => {
      "use strict";
      var RelayModernRecord = __webpack_require__(5188), RELAY_RESOLVER_OUTPUT_TYPE_RECORD_IDS = __webpack_require__(6195).RELAY_RESOLVER_OUTPUT_TYPE_RECORD_IDS, invariant = __webpack_require__(1235);
      module.exports = function(record) {
        var maybeOutputTypeRecordIDs = RelayModernRecord.getValue(record, RELAY_RESOLVER_OUTPUT_TYPE_RECORD_IDS);
        return null == maybeOutputTypeRecordIDs ? null : (maybeOutputTypeRecordIDs instanceof Set || invariant(!1), 
        maybeOutputTypeRecordIDs);
      };
    },
    7172: module => {
      "use strict";
      module.exports = function(v) {
        return null != v && "object" == typeof v && "function" == typeof v.read && "function" == typeof v.subscribe;
      };
    },
    4938: (module, __unused_webpack_exports, __webpack_require__) => {
      "use strict";
      var readFragment = __webpack_require__(6278).readFragment, invariant = __webpack_require__(1235);
      module.exports = function(fragment, _resolverFn, fieldName, isRequiredField) {
        var resolverFn = _resolverFn;
        return function(fragmentKey, args) {
          var data = readFragment(fragment, fragmentKey);
          if (null == fieldName) return resolverFn(data, args);
          if (null == data) {
            if (!0 !== isRequiredField) return resolverFn(null, args);
            invariant(!1);
          }
          if (fieldName in data) return !0 === isRequiredField && null == data[fieldName] && invariant(!1), 
          resolverFn(data[fieldName], args);
          invariant(!1);
        };
      };
    },
    2772: (module, __unused_webpack_exports, __webpack_require__) => {
      "use strict";
      var _interopRequireDefault = __webpack_require__(1440).default, _objectSpread2 = _interopRequireDefault(__webpack_require__(2977)), _RelayModernRecord = _interopRequireDefault(__webpack_require__(5188)), _RelayRecordSource = _interopRequireDefault(__webpack_require__(6886)), _RelayResponseNormalizer = _interopRequireDefault(__webpack_require__(3467));
      module.exports = function(response, selector, typeName, options) {
        var _response$extensions, data = response.data, errors = response.errors, source = _RelayRecordSource.default.create(), record = _RelayModernRecord.default.create(selector.dataID, typeName);
        source.set(selector.dataID, record);
        var relayPayload = _RelayResponseNormalizer.default.normalize(source, selector, data, options, errors);
        return (0, _objectSpread2.default)((0, _objectSpread2.default)({}, relayPayload), {}, {
          isFinal: !0 === (null === (_response$extensions = response.extensions) || void 0 === _response$extensions ? void 0 : _response$extensions.is_final)
        });
      };
    },
    1467: (module, __unused_webpack_exports, __webpack_require__) => {
      "use strict";
      var _asyncToGenerator = __webpack_require__(9325).default, Observable = __webpack_require__(219), getFragment = __webpack_require__(3892).getFragment, getPendingOperationsForFragment = __webpack_require__(966), handlePotentialSnapshotErrors = __webpack_require__(8746).handlePotentialSnapshotErrors, getSelector = __webpack_require__(7134).getSelector, invariant = __webpack_require__(1235);
      function _waitForFragmentData() {
        return (_waitForFragmentData = _asyncToGenerator((function*(environment, fragment, fragmentRef) {
          var subscription;
          try {
            var _subscription, data = yield new Promise((function(resolve, reject) {
              subscription = observeFragment(environment, fragment, fragmentRef).subscribe({
                next: function(val) {
                  "ok" === val.state ? resolve(val.value) : "error" === val.state && reject(val.error);
                }
              });
            }));
            return null === (_subscription = subscription) || void 0 === _subscription || _subscription.unsubscribe(), 
            data;
          } catch (e) {
            var _subscription2;
            throw null === (_subscription2 = subscription) || void 0 === _subscription2 || _subscription2.unsubscribe(), 
            e;
          }
        }))).apply(this, arguments);
      }
      function observeFragment(environment, fragment, fragmentRef) {
        var _fragmentNode$metadat, fragmentNode = getFragment(fragment), fragmentSelector = getSelector(fragmentNode, fragmentRef);
        switch (null != (null === (_fragmentNode$metadat = fragmentNode.metadata) || void 0 === _fragmentNode$metadat ? void 0 : _fragmentNode$metadat.hasClientEdges) && invariant(!1), 
        null == fragmentSelector && invariant(!1), fragmentSelector.kind) {
         case "SingularReaderSelector":
          return function(environment, fragmentNode, fragmentSelector) {
            var snapshot = environment.lookup(fragmentSelector);
            return Observable.create((function(sink) {
              sink.next(snapshotToFragmentState(environment, fragmentNode, fragmentSelector.owner, snapshot));
              var subscription = environment.subscribe(snapshot, (function(nextSnapshot) {
                sink.next(snapshotToFragmentState(environment, fragmentNode, fragmentSelector.owner, nextSnapshot));
              }));
              return function() {
                return subscription.dispose();
              };
            }));
          }(environment, fragment, fragmentSelector);

         case "PluralReaderSelector":
          invariant(!1);
        }
        invariant(!1);
      }
      function snapshotToFragmentState(environment, fragmentNode, owner, snapshot) {
        var missingLiveResolverFields = null != snapshot.missingLiveResolverFields && snapshot.missingLiveResolverFields.length > 0, missingClientEdges = null != snapshot.missingClientEdges && snapshot.missingClientEdges.length > 0;
        if (missingLiveResolverFields || missingClientEdges) return {
          state: "loading"
        };
        if (snapshot.isMissingData && null != getPendingOperationsForFragment(environment, fragmentNode, owner)) return {
          state: "loading"
        };
        try {
          handlePotentialSnapshotErrors(environment, snapshot.errorResponseFields);
        } catch (error) {
          return {
            error,
            state: "error"
          };
        }
        return null == snapshot.data && invariant(!1), {
          state: "ok",
          value: snapshot.data
        };
      }
      module.exports = {
        observeFragment,
        waitForFragmentData: function(_x, _x2, _x3) {
          return _waitForFragmentData.apply(this, arguments);
        }
      };
    },
    9595: (module, __unused_webpack_exports, __webpack_require__) => {
      "use strict";
      var getInlineDataFragment = __webpack_require__(3892).getInlineDataFragment, FRAGMENTS_KEY = __webpack_require__(6195).FRAGMENTS_KEY, invariant = __webpack_require__(1235);
      module.exports = function(fragment, fragmentRef) {
        var _fragmentRef$FRAGMENT, inlineDataFragment = getInlineDataFragment(fragment);
        if (null == fragmentRef) return fragmentRef;
        "object" != typeof fragmentRef && invariant(!1);
        var inlineData = null === (_fragmentRef$FRAGMENT = fragmentRef[FRAGMENTS_KEY]) || void 0 === _fragmentRef$FRAGMENT ? void 0 : _fragmentRef$FRAGMENT[inlineDataFragment.name];
        return null == inlineData && invariant(!1), inlineData;
      };
    },
    3243: (module, __unused_webpack_exports, __webpack_require__) => {
      "use strict";
      var _asyncToGenerator = __webpack_require__(9325).default, observeFragment = __webpack_require__(1467).observeFragment;
      function _waitForFragmentData() {
        return (_waitForFragmentData = _asyncToGenerator((function*(environment, fragment, fragmentRef) {
          var subscription;
          try {
            var _subscription, data = yield new Promise((function(resolve, reject) {
              subscription = observeFragment(environment, fragment, fragmentRef).subscribe({
                next: function(val) {
                  "ok" === val.state ? resolve(val.value) : "error" === val.state && reject(val.error);
                }
              });
            }));
            return null === (_subscription = subscription) || void 0 === _subscription || _subscription.unsubscribe(), 
            data;
          } catch (e) {
            var _subscription2;
            throw null === (_subscription2 = subscription) || void 0 === _subscription2 || _subscription2.unsubscribe(), 
            e;
          }
        }))).apply(this, arguments);
      }
      module.exports = {
        waitForFragmentData: function(_x, _x2, _x3) {
          return _waitForFragmentData.apply(this, arguments);
        }
      };
    },
    3059: (module, __unused_webpack_exports, __webpack_require__) => {
      "use strict";
      var RelayDeclarativeMutationConfig = __webpack_require__(4725), getRequest = __webpack_require__(3892).getRequest, createOperationDescriptor = __webpack_require__(7133).createOperationDescriptor, createReaderSelector = __webpack_require__(7134).createReaderSelector;
      __webpack_require__(3349);
      module.exports = function(environment, config) {
        var subscription = getRequest(config.subscription);
        if ("subscription" !== subscription.params.operationKind) throw new Error("requestSubscription: Must use Subscription operation");
        var configs = config.configs, onCompleted = config.onCompleted, onError = config.onError, onNext = config.onNext, variables = config.variables, cacheConfig = config.cacheConfig, operation = createOperationDescriptor(subscription, variables, cacheConfig), updater = (configs ? RelayDeclarativeMutationConfig.convert(configs, subscription, null, config.updater) : config).updater;
        return {
          dispose: environment.executeSubscription({
            operation,
            updater
          }).subscribe({
            next: function(responses) {
              if (null != onNext) {
                var nextID, _responses$, _responses$$extension, _responses$extensions, selector = operation.fragment;
                if (Array.isArray(responses)) nextID = null === (_responses$ = responses[0]) || void 0 === _responses$ || null === (_responses$$extension = _responses$.extensions) || void 0 === _responses$$extension ? void 0 : _responses$$extension.__relay_subscription_root_id; else nextID = null === (_responses$extensions = responses.extensions) || void 0 === _responses$extensions ? void 0 : _responses$extensions.__relay_subscription_root_id;
                "string" == typeof nextID && (selector = createReaderSelector(selector.node, nextID, selector.variables, selector.owner));
                var data = environment.lookup(selector).data;
                onNext(data);
              }
            },
            error: onError,
            complete: onCompleted
          }).unsubscribe
        };
      };
    },
    351: module => {
      "use strict";
      module.exports = {
        ACTOR_CHANGE: "ActorChange",
        CATCH_FIELD: "CatchField",
        CONDITION: "Condition",
        CLIENT_COMPONENT: "ClientComponent",
        CLIENT_EDGE_TO_SERVER_OBJECT: "ClientEdgeToServerObject",
        CLIENT_EDGE_TO_CLIENT_OBJECT: "ClientEdgeToClientObject",
        CLIENT_EXTENSION: "ClientExtension",
        DEFER: "Defer",
        CONNECTION: "Connection",
        FRAGMENT: "Fragment",
        FRAGMENT_SPREAD: "FragmentSpread",
        INLINE_DATA_FRAGMENT_SPREAD: "InlineDataFragmentSpread",
        INLINE_DATA_FRAGMENT: "InlineDataFragment",
        INLINE_FRAGMENT: "InlineFragment",
        LINKED_FIELD: "LinkedField",
        LINKED_HANDLE: "LinkedHandle",
        LITERAL: "Literal",
        LIST_VALUE: "ListValue",
        LOCAL_ARGUMENT: "LocalArgument",
        MODULE_IMPORT: "ModuleImport",
        ALIASED_FRAGMENT_SPREAD: "AliasedFragmentSpread",
        ALIASED_INLINE_FRAGMENT_SPREAD: "AliasedInlineFragmentSpread",
        RELAY_RESOLVER: "RelayResolver",
        RELAY_LIVE_RESOLVER: "RelayLiveResolver",
        REQUIRED_FIELD: "RequiredField",
        OBJECT_VALUE: "ObjectValue",
        OPERATION: "Operation",
        REQUEST: "Request",
        ROOT_ARGUMENT: "RootArgument",
        SCALAR_FIELD: "ScalarField",
        SCALAR_HANDLE: "ScalarHandle",
        SPLIT_OPERATION: "SplitOperation",
        STREAM: "Stream",
        TYPE_DISCRIMINATOR: "TypeDiscriminator",
        UPDATABLE_QUERY: "UpdatableQuery",
        VARIABLE: "Variable"
      };
    },
    1692: module => {
      "use strict";
      module.exports = {
        DEFAULT_HANDLE_KEY: ""
      };
    },
    5729: module => {
      "use strict";
      function createError(type, name, messageFormat) {
        for (var _len = arguments.length, messageParams = new Array(_len > 3 ? _len - 3 : 0), _key = 3; _key < _len; _key++) messageParams[_key - 3] = arguments[_key];
        var index = 0, message = messageFormat.replace(/%s/g, (function() {
          return String(messageParams[index++]);
        })), err = new Error(message), error = Object.assign(err, {
          name,
          messageFormat,
          messageParams,
          type,
          taalOpcodes: [ 2, 2 ]
        });
        if (void 0 === error.stack) try {
          throw error;
        } catch (_unused) {}
        return error;
      }
      module.exports = {
        create: function(name, messageFormat) {
          for (var _len2 = arguments.length, messageParams = new Array(_len2 > 2 ? _len2 - 2 : 0), _key2 = 2; _key2 < _len2; _key2++) messageParams[_key2 - 2] = arguments[_key2];
          return createError.apply(void 0, [ "error", name, messageFormat ].concat(messageParams));
        },
        createWarning: function(name, messageFormat) {
          for (var _len3 = arguments.length, messageParams = new Array(_len3 > 2 ? _len3 - 2 : 0), _key3 = 2; _key3 < _len3; _key3++) messageParams[_key3 - 2] = arguments[_key3];
          return createError.apply(void 0, [ "warn", name, messageFormat ].concat(messageParams));
        }
      };
    },
    4309: module => {
      "use strict";
      module.exports = {
        ENABLE_VARIABLE_CONNECTION_KEY: !1,
        ENABLE_RELAY_RESOLVERS: !1,
        ENABLE_GETFRAGMENTIDENTIFIER_OPTIMIZATION: !1,
        ENABLE_FRIENDLY_QUERY_NAME_GQL_URL: !1,
        ENABLE_LOAD_QUERY_REQUEST_DEDUPING: !0,
        ENABLE_DO_NOT_WRAP_LIVE_QUERY: !1,
        ENABLE_NOTIFY_SUBSCRIPTION: !1,
        BATCH_ASYNC_MODULE_UPDATES_FN: null,
        ENABLE_CONTAINERS_SUBSCRIBE_ON_COMMIT: !1,
        MAX_DATA_ID_LENGTH: null,
        STRING_INTERN_LEVEL: 0,
        LOG_MISSING_RECORDS_IN_PROD: !1,
        ENABLE_LOOSE_SUBSCRIPTION_ATTRIBUTION: !1,
        ENABLE_OPERATION_TRACKER_OPTIMISTIC_UPDATES: !1,
        ENABLE_RELAY_OPERATION_TRACKER_SUSPENSE: !1,
        PROCESS_OPTIMISTIC_UPDATE_BEFORE_SUBSCRIPTION: !1,
        MARK_RESOLVER_VALUES_AS_CLEAN_AFTER_FRAGMENT_REREAD: !1,
        ENABLE_CYLE_DETECTION_IN_VARIABLES: !1,
        ENABLE_ACTIVITY_COMPATIBILITY: !1,
        AVOID_CYCLES_IN_RESOLVER_NOTIFICATION: !1
      };
    },
    2982: module => {
      "use strict";
      var profileHandlersByName = {}, defaultProfiler = {
        stop: function() {}
      }, RelayProfiler = {
        profile: function(name, state) {
          var handlers = profileHandlersByName[name];
          if (handlers && handlers.length > 0) {
            for (var stopHandlers = [], ii = handlers.length - 1; ii >= 0; ii--) {
              var stopHandler = handlers[ii](name, state);
              stopHandlers.unshift(stopHandler);
            }
            return {
              stop: function(error) {
                stopHandlers.forEach((function(stopHandler) {
                  return stopHandler(error);
                }));
              }
            };
          }
          return defaultProfiler;
        },
        attachProfileHandler: function(name, handler) {
          profileHandlersByName.hasOwnProperty(name) || (profileHandlersByName[name] = []), 
          profileHandlersByName[name].push(handler);
        },
        detachProfileHandler: function(name, handler) {
          var array, element, index;
          profileHandlersByName.hasOwnProperty(name) && (array = profileHandlersByName[name], 
          element = handler, -1 !== (index = array.indexOf(element)) && array.splice(index, 1));
        }
      };
      module.exports = RelayProfiler;
    },
    1283: (module, __unused_webpack_exports, __webpack_require__) => {
      "use strict";
      var _interopRequireDefault = __webpack_require__(1440).default, _createForOfIteratorHelper2 = _interopRequireDefault(__webpack_require__(2460)), _defineProperty2 = _interopRequireDefault(__webpack_require__(5217)), RelayObservable = __webpack_require__(219), invariant = __webpack_require__(1235), RelayReplaySubject = function() {
        function RelayReplaySubject() {
          var _this = this;
          (0, _defineProperty2.default)(this, "_complete", !1), (0, _defineProperty2.default)(this, "_events", []), 
          (0, _defineProperty2.default)(this, "_sinks", new Set), (0, _defineProperty2.default)(this, "_subscription", []), 
          this._observable = RelayObservable.create((function(sink) {
            _this._sinks.add(sink);
            for (var events = _this._events, i = 0; i < events.length && !sink.closed; i++) {
              var event = events[i];
              switch (event.kind) {
               case "complete":
                sink.complete();
                break;

               case "error":
                sink.error(event.error);
                break;

               case "next":
                sink.next(event.data);
                break;

               default:
                event.kind, invariant(!1);
              }
            }
            return function() {
              _this._sinks.delete(sink);
            };
          }));
        }
        var _proto = RelayReplaySubject.prototype;
        return _proto.complete = function() {
          !0 !== this._complete && (this._complete = !0, this._events.push({
            kind: "complete"
          }), this._sinks.forEach((function(sink) {
            return sink.complete();
          })));
        }, _proto.error = function(_error) {
          !0 !== this._complete && (this._complete = !0, this._events.push({
            kind: "error",
            error: _error
          }), this._sinks.forEach((function(sink) {
            return sink.error(_error);
          })));
        }, _proto.next = function(data) {
          !0 !== this._complete && (this._events.push({
            kind: "next",
            data
          }), this._sinks.forEach((function(sink) {
            return sink.next(data);
          })));
        }, _proto.subscribe = function(observer) {
          var subscription = this._observable.subscribe(observer);
          return this._subscription.push(subscription), subscription;
        }, _proto.unsubscribe = function() {
          var _step, _iterator = (0, _createForOfIteratorHelper2.default)(this._subscription);
          try {
            for (_iterator.s(); !(_step = _iterator.n()).done; ) {
              _step.value.unsubscribe();
            }
          } catch (err) {
            _iterator.e(err);
          } finally {
            _iterator.f();
          }
          this._subscription = [];
        }, _proto.getObserverCount = function() {
          return this._sinks.size;
        }, RelayReplaySubject;
      }();
      module.exports = RelayReplaySubject;
    },
    1561: module => {
      "use strict";
      var internTable = new Map, nextIndex = 1, digits = function() {
        for (var digits = new Set, i = 0; i < 10; ++i) digits.add(i.toString());
        return digits;
      }(), INTERN_PREFIX = "\t", ESCAPE_PREFIX = "\v";
      module.exports = {
        intern: function(str, limit) {
          if (null == limit || str.length < limit) return function(str) {
            return str[0] === INTERN_PREFIX && digits.has(str[1]) || str[0] === ESCAPE_PREFIX ? ESCAPE_PREFIX + str : str;
          }(str);
          var internedString = internTable.get(str);
          return null != internedString || (internedString = INTERN_PREFIX + nextIndex++, 
          internTable.set(str, internedString)), internedString;
        }
      };
    },
    3606: (module, __unused_webpack_exports, __webpack_require__) => {
      "use strict";
      var _objectSpread2 = (0, __webpack_require__(1440).default)(__webpack_require__(2977)), _require = __webpack_require__(6195), getModuleComponentKey = _require.getModuleComponentKey, getModuleOperationKey = _require.getModuleOperationKey;
      module.exports = function(name, operation, component, response) {
        var data = (0, _objectSpread2.default)({}, response);
        return data[getModuleComponentKey(name)] = component, data[getModuleOperationKey(name)] = operation, 
        data;
      };
    },
    7700: module => {
      "use strict";
      module.exports = function deepFreeze(object) {
        return null != (value = object) && (Array.isArray(value) || "object" == typeof value && value.constructor === Object) ? (Object.freeze(object), 
        Object.getOwnPropertyNames(object).forEach((function(name) {
          var property = object[name];
          property && "object" == typeof property && !Object.isFrozen(property) && deepFreeze(property);
        })), object) : object;
        var value;
      };
    },
    5174: module => {
      "use strict";
      var id = 1e5;
      module.exports = function() {
        return id++;
      };
    },
    7883: (module, __unused_webpack_exports, __webpack_require__) => {
      "use strict";
      var _require = __webpack_require__(7134), getDataIDsFromFragment = _require.getDataIDsFromFragment, getSelector = _require.getSelector, getVariablesFromFragment = _require.getVariablesFromFragment, isEmptyObject = __webpack_require__(5142), RelayFeatureFlags = __webpack_require__(4309), stableCopy = __webpack_require__(6163).stableCopy, intern = __webpack_require__(1561).intern;
      module.exports = function(fragmentNode, fragmentRef) {
        var selector = getSelector(fragmentNode, fragmentRef), fragmentOwnerIdentifier = null == selector ? "null" : "SingularReaderSelector" === selector.kind ? selector.owner.identifier : "[" + selector.selectors.map((function(sel) {
          return sel.owner.identifier;
        })).join(",") + "]", fragmentVariables = getVariablesFromFragment(fragmentNode, fragmentRef), dataIDs = getDataIDsFromFragment(fragmentNode, fragmentRef);
        if (RelayFeatureFlags.ENABLE_GETFRAGMENTIDENTIFIER_OPTIMIZATION) {
          var ids = void 0 === dataIDs ? "missing" : null == dataIDs ? "null" : Array.isArray(dataIDs) ? "[" + dataIDs.join(",") + "]" : dataIDs;
          return ids = RelayFeatureFlags.STRING_INTERN_LEVEL <= 1 ? ids : intern(ids, RelayFeatureFlags.MAX_DATA_ID_LENGTH), 
          fragmentOwnerIdentifier + "/" + fragmentNode.name + "/" + (null == fragmentVariables || isEmptyObject(fragmentVariables) ? "{}" : JSON.stringify(stableCopy(fragmentVariables))) + "/" + ids;
        }
        var _JSON$stringify, _ids = null !== (_JSON$stringify = JSON.stringify(dataIDs)) && void 0 !== _JSON$stringify ? _JSON$stringify : "missing";
        return _ids = RelayFeatureFlags.STRING_INTERN_LEVEL <= 1 ? _ids : intern(_ids, RelayFeatureFlags.MAX_DATA_ID_LENGTH), 
        fragmentOwnerIdentifier + "/" + fragmentNode.name + "/" + JSON.stringify(stableCopy(fragmentVariables)) + "/" + _ids;
      };
    },
    7782: (module, __unused_webpack_exports, __webpack_require__) => {
      "use strict";
      var _require = __webpack_require__(351), REQUEST = _require.REQUEST;
      _require.SPLIT_OPERATION;
      module.exports = function(node) {
        return node.kind === REQUEST ? node.operation : node;
      };
    },
    9961: (module, __unused_webpack_exports, __webpack_require__) => {
      "use strict";
      var getRefetchMetadata = __webpack_require__(140), invariant = __webpack_require__(1235);
      module.exports = function(fragmentNode, componentDisplayName) {
        var _fragmentNode$metadat, _fragmentNode$metadat2, _getRefetchMetadata = getRefetchMetadata(fragmentNode, componentDisplayName), paginationRequest = _getRefetchMetadata.refetchableRequest, refetchMetadata = _getRefetchMetadata.refetchMetadata, paginationMetadata = refetchMetadata.connection;
        null == paginationMetadata && invariant(!1);
        var connectionPathInFragmentData = paginationMetadata.path, connectionMetadata = (null !== (_fragmentNode$metadat = null === (_fragmentNode$metadat2 = fragmentNode.metadata) || void 0 === _fragmentNode$metadat2 ? void 0 : _fragmentNode$metadat2.connection) && void 0 !== _fragmentNode$metadat ? _fragmentNode$metadat : [])[0];
        null == connectionMetadata && invariant(!1);
        var identifierInfo = refetchMetadata.identifierInfo;
        return null != (null == identifierInfo ? void 0 : identifierInfo.identifierField) && "string" != typeof identifierInfo.identifierField && invariant(!1), 
        {
          connectionPathInFragmentData,
          identifierField: null == identifierInfo ? void 0 : identifierInfo.identifierField,
          paginationRequest,
          paginationMetadata,
          stream: !0 === connectionMetadata.stream
        };
      };
    },
    2458: (module, __unused_webpack_exports, __webpack_require__) => {
      "use strict";
      var _interopRequireDefault = __webpack_require__(1440).default, _defineProperty2 = _interopRequireDefault(__webpack_require__(5217)), _objectSpread4 = _interopRequireDefault(__webpack_require__(2977)), invariant = __webpack_require__(1235);
      __webpack_require__(3349);
      module.exports = function(direction, count, cursor, baseVariables, extraVariables, paginationMetadata) {
        var _objectSpread3, backwardMetadata = paginationMetadata.backward, forwardMetadata = paginationMetadata.forward;
        if ("backward" === direction) {
          var _objectSpread2;
          (null == backwardMetadata || null == backwardMetadata.count || null == backwardMetadata.cursor) && invariant(!1);
          var _paginationVariables = (0, _objectSpread4.default)((0, _objectSpread4.default)((0, 
          _objectSpread4.default)({}, baseVariables), extraVariables), {}, (_objectSpread2 = {}, 
          (0, _defineProperty2.default)(_objectSpread2, backwardMetadata.cursor, cursor), 
          (0, _defineProperty2.default)(_objectSpread2, backwardMetadata.count, count), _objectSpread2));
          return forwardMetadata && forwardMetadata.cursor && (_paginationVariables[forwardMetadata.cursor] = null), 
          forwardMetadata && forwardMetadata.count && (_paginationVariables[forwardMetadata.count] = null), 
          _paginationVariables;
        }
        (null == forwardMetadata || null == forwardMetadata.count || null == forwardMetadata.cursor) && invariant(!1);
        var paginationVariables = (0, _objectSpread4.default)((0, _objectSpread4.default)((0, 
        _objectSpread4.default)({}, baseVariables), extraVariables), {}, (_objectSpread3 = {}, 
        (0, _defineProperty2.default)(_objectSpread3, forwardMetadata.cursor, cursor), (0, 
        _defineProperty2.default)(_objectSpread3, forwardMetadata.count, count), _objectSpread3));
        return backwardMetadata && backwardMetadata.cursor && (paginationVariables[backwardMetadata.cursor] = null), 
        backwardMetadata && backwardMetadata.count && (paginationVariables[backwardMetadata.count] = null), 
        paginationVariables;
      };
    },
    966: (module, __unused_webpack_exports, __webpack_require__) => {
      "use strict";
      var getPromiseForActiveRequest = __webpack_require__(1918).getPromiseForActiveRequest;
      module.exports = function(environment, fragmentNode, fragmentOwner) {
        var _pendingOperations$ma, _pendingOperations, pendingOperations = [], promise = getPromiseForActiveRequest(environment, fragmentOwner);
        if (null != promise) pendingOperations = [ fragmentOwner ]; else {
          var _result$pendingOperat, _result$promise, result = environment.getOperationTracker().getPendingOperationsAffectingOwner(fragmentOwner);
          pendingOperations = null !== (_result$pendingOperat = null == result ? void 0 : result.pendingOperations) && void 0 !== _result$pendingOperat ? _result$pendingOperat : [], 
          promise = null !== (_result$promise = null == result ? void 0 : result.promise) && void 0 !== _result$promise ? _result$promise : null;
        }
        if (!promise) return null;
        var pendingOperationName = null !== (_pendingOperations$ma = null === (_pendingOperations = pendingOperations) || void 0 === _pendingOperations ? void 0 : _pendingOperations.map((function(op) {
          return op.node.params.name;
        })).join(",")) && void 0 !== _pendingOperations$ma ? _pendingOperations$ma : null;
        null != pendingOperationName && 0 !== pendingOperationName.length || (pendingOperationName = "Unknown pending operation");
        var fragmentName = fragmentNode.name, promiseDisplayName = pendingOperationName === fragmentName ? "Relay(".concat(pendingOperationName, ")") : "Relay(".concat(pendingOperationName, ":").concat(fragmentName, ")");
        return promise.displayName = promiseDisplayName, environment.__log({
          name: "pendingoperation.found",
          fragment: fragmentNode,
          fragmentOwner,
          pendingOperations
        }), {
          promise,
          pendingOperations
        };
      };
    },
    140: (module, __unused_webpack_exports, __webpack_require__) => {
      "use strict";
      var invariant = __webpack_require__(1235);
      module.exports = function(fragmentNode, componentDisplayName) {
        var _fragmentNode$metadat, _fragmentNode$metadat2;
        !0 === (null === (_fragmentNode$metadat = fragmentNode.metadata) || void 0 === _fragmentNode$metadat ? void 0 : _fragmentNode$metadat.plural) && invariant(!1);
        var refetchMetadata = null === (_fragmentNode$metadat2 = fragmentNode.metadata) || void 0 === _fragmentNode$metadat2 ? void 0 : _fragmentNode$metadat2.refetch;
        null == refetchMetadata && invariant(!1);
        var refetchableRequest = refetchMetadata.operation.default ? refetchMetadata.operation.default : refetchMetadata.operation, fragmentRefPathInResponse = refetchMetadata.fragmentPathInResult;
        "string" == typeof refetchableRequest && invariant(!1);
        var identifierInfo = refetchMetadata.identifierInfo;
        return null != identifierInfo && (null != identifierInfo.identifierField && "string" != typeof identifierInfo.identifierField && invariant(!1), 
        null != identifierInfo.identifierQueryVariableName && "string" != typeof identifierInfo.identifierQueryVariableName && invariant(!1)), 
        {
          fragmentRefPathInResponse,
          identifierInfo,
          refetchableRequest,
          refetchMetadata
        };
      };
    },
    4505: (module, __unused_webpack_exports, __webpack_require__) => {
      "use strict";
      var DEFAULT_HANDLE_KEY = __webpack_require__(1692).DEFAULT_HANDLE_KEY, invariant = __webpack_require__(1235);
      module.exports = function(handleName, key, fieldName) {
        return key && key !== DEFAULT_HANDLE_KEY ? "__".concat(key, "_").concat(handleName) : (null == fieldName && invariant(!1), 
        "__".concat(fieldName, "_").concat(handleName));
      };
    },
    5269: (module, __unused_webpack_exports, __webpack_require__) => {
      "use strict";
      var stableCopy = __webpack_require__(6163).stableCopy, invariant = __webpack_require__(1235);
      module.exports = function(parameters, variables) {
        var requestID = null != parameters.cacheID ? parameters.cacheID : parameters.id;
        return null == requestID && invariant(!1), requestID + JSON.stringify(stableCopy(variables));
      };
    },
    7065: (module, __unused_webpack_exports, __webpack_require__) => {
      "use strict";
      var _createForOfIteratorHelper2 = (0, __webpack_require__(1440).default)(__webpack_require__(2460)), invariant = __webpack_require__(1235);
      module.exports = function(data, path) {
        var _step, result = data, _iterator = (0, _createForOfIteratorHelper2.default)(path);
        try {
          for (_iterator.s(); !(_step = _iterator.n()).done; ) {
            var key = _step.value;
            if (null == result) return null;
            "number" == typeof key ? (Array.isArray(result) || invariant(!1), result = result[key]) : (("object" != typeof result || Array.isArray(result)) && invariant(!1), 
            result = result[key]);
          }
        } catch (err) {
          _iterator.e(err);
        } finally {
          _iterator.f();
        }
        return result;
      };
    },
    8746: (module, __unused_webpack_exports, __webpack_require__) => {
      "use strict";
      var _createForOfIteratorHelper2 = (0, __webpack_require__(1440).default)(__webpack_require__(2460)), invariant = __webpack_require__(1235);
      function eventShouldThrow(event) {
        switch (event.kind) {
         case "relay_resolver.error":
         case "relay_field_payload.error":
          return event.shouldThrow && !event.handled;

         case "missing_expected_data.throw":
         case "missing_required_field.throw":
          return !event.handled;

         case "missing_required_field.log":
         case "missing_expected_data.log":
          return !1;

         default:
          throw event.kind, new Error("Relay: Unexpected event kind");
        }
      }
      module.exports = {
        handlePotentialSnapshotErrors: function(environment, errorResponseFields) {
          null != errorResponseFields && function(environment, errorResponseFields) {
            var _step, _iterator = (0, _createForOfIteratorHelper2.default)(errorResponseFields);
            try {
              for (_iterator.s(); !(_step = _iterator.n()).done; ) {
                var fieldError = _step.value;
                environment.relayFieldLogger(fieldError);
              }
            } catch (err) {
              _iterator.e(err);
            } finally {
              _iterator.f();
            }
            var _step2, _iterator2 = (0, _createForOfIteratorHelper2.default)(errorResponseFields);
            try {
              for (_iterator2.s(); !(_step2 = _iterator2.n()).done; ) {
                var _fieldError = _step2.value;
                if (eventShouldThrow(_fieldError)) switch (_fieldError.kind) {
                 case "relay_resolver.error":
                  throw new Error("Relay: Resolver error at path '".concat(_fieldError.fieldPath, "' in '").concat(_fieldError.owner, "'."));

                 case "relay_field_payload.error":
                  throw new Error("Relay: Unexpected response payload - this object includes an errors property in which you can access the underlying errors");

                 case "missing_expected_data.throw":
                  throw new Error("Relay: Missing expected data at path '".concat(_fieldError.fieldPath, "' in '").concat(_fieldError.owner, "'."));

                 case "missing_required_field.throw":
                  throw new Error("Relay: Missing @required value at path '".concat(_fieldError.fieldPath, "' in '").concat(_fieldError.owner, "'."));

                 case "missing_required_field.log":
                 case "missing_expected_data.log":
                  break;

                 default:
                  _fieldError.kind, invariant(!1);
                }
              }
            } catch (err) {
              _iterator2.e(err);
            } finally {
              _iterator2.f();
            }
          }(environment, errorResponseFields);
        },
        eventShouldThrow
      };
    },
    5142: module => {
      "use strict";
      var hasOwnProperty = Object.prototype.hasOwnProperty;
      module.exports = function(obj) {
        for (var _key in obj) if (hasOwnProperty.call(obj, _key)) return !1;
        return !0;
      };
    },
    1965: module => {
      "use strict";
      module.exports = function(p) {
        return null != p && "object" == typeof p && "function" == typeof p.then;
      };
    },
    3275: module => {
      "use strict";
      module.exports = function(valueA, valueB) {
        return valueA === valueB && (null === valueA || "object" != typeof valueA);
      };
    },
    7237: module => {
      "use strict";
      function recycleNodesIntoImpl(prevData, nextData, canMutate) {
        if (prevData === nextData || "object" != typeof prevData || !prevData || prevData.constructor !== Object && !Array.isArray(prevData) || "object" != typeof nextData || !nextData || nextData.constructor !== Object && !Array.isArray(nextData)) return nextData;
        var canRecycle = !1, prevArray = Array.isArray(prevData) ? prevData : null, nextArray = Array.isArray(nextData) ? nextData : null;
        if (prevArray && nextArray) {
          var canMutateNext = canMutate && !Object.isFrozen(nextArray);
          canRecycle = nextArray.reduce((function(wasEqual, nextItem, ii) {
            var nextValue = recycleNodesIntoImpl(prevArray[ii], nextItem, canMutateNext);
            return nextValue !== nextArray[ii] && canMutateNext && (nextArray[ii] = nextValue), 
            wasEqual && nextValue === prevArray[ii];
          }), !0) && prevArray.length === nextArray.length;
        } else if (!prevArray && !nextArray) {
          var prevObject = prevData, nextObject = nextData, prevKeys = Object.keys(prevObject), nextKeys = Object.keys(nextObject), _canMutateNext = canMutate && !Object.isFrozen(nextObject);
          canRecycle = nextKeys.reduce((function(wasEqual, key) {
            var nextValue = recycleNodesIntoImpl(prevObject[key], nextObject[key], _canMutateNext);
            return nextValue !== nextObject[key] && _canMutateNext && (nextObject[key] = nextValue), 
            wasEqual && nextValue === prevObject[key];
          }), !0) && prevKeys.length === nextKeys.length;
        }
        return canRecycle ? prevData : nextData;
      }
      module.exports = function(prevData, nextData) {
        return recycleNodesIntoImpl(prevData, nextData, !0);
      };
    },
    7550: (module, __unused_webpack_exports, __webpack_require__) => {
      "use strict";
      module.exports = function(environment) {
        var _global = void 0 !== __webpack_require__.g ? __webpack_require__.g : "undefined" != typeof window ? window : void 0, devToolsHook = _global && _global.__RELAY_DEVTOOLS_HOOK__;
        devToolsHook && devToolsHook.registerEnvironment(environment);
      };
    },
    2779: module => {
      "use strict";
      var resolvedPromise = Promise.resolve();
      function throwNext(error) {
        setTimeout((function() {
          throw error;
        }), 0);
      }
      module.exports = function(callback) {
        resolvedPromise.then(callback).catch(throwNext);
      };
    },
    405: module => {
      "use strict";
      module.exports = function(value) {
        "object" != typeof value || null == value || !Array.isArray(value) && value.constructor !== Object || Object.freeze(value);
      };
    },
    6163: module => {
      "use strict";
      module.exports = {
        stableCopy: function stableCopy(value) {
          if (!value || "object" != typeof value) return value;
          if (Array.isArray(value)) return value.map(stableCopy);
          for (var keys = Object.keys(value).sort(), stable = {}, i = 0; i < keys.length; i++) stable[keys[i]] = stableCopy(value[keys[i]]);
          return stable;
        },
        hasCycle: function hasCycle(value) {
          var parents = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : new Set;
          if (!value || "object" != typeof value) return !1;
          if (parents.has(value)) return !0;
          var newParents = new Set(parents);
          return newParents.add(value), (Array.isArray(value) ? value : Object.values(value)).some((function(v) {
            return hasCycle(v, newParents);
          }));
        }
      };
    },
    8569: (module, __unused_webpack_exports, __webpack_require__) => {
      "use strict";
      __webpack_require__(1345), __webpack_require__(3349);
      var debugCache = "function" == typeof WeakMap ? new WeakMap : new Map;
      function withProvidedVariables(userSuppliedVariables, providedVariables) {
        if (null != providedVariables) {
          var operationVariables = {};
          return Object.assign(operationVariables, userSuppliedVariables), Object.keys(providedVariables).forEach((function(varName) {
            var providerFunction = providedVariables[varName].get, providerResult = providerFunction();
            if (debugCache.has(providerFunction)) {
              var cachedResult = debugCache.get(providerFunction);
              0, operationVariables[varName] = cachedResult;
            } else debugCache.set(providerFunction, providerResult), operationVariables[varName] = providerResult;
          })), operationVariables;
        }
        return userSuppliedVariables;
      }
      withProvidedVariables.tests_only_resetDebugCache = void 0, module.exports = withProvidedVariables;
    },
    6531: module => {
      "use strict";
      var _window, _window$performance, isPerformanceNowAvailable = "undefined" != typeof window && "function" == typeof (null === (_window = window) || void 0 === _window || null === (_window$performance = _window.performance) || void 0 === _window$performance ? void 0 : _window$performance.now);
      function currentTimestamp() {
        return isPerformanceNowAvailable ? window.performance.now() : Date.now();
      }
      module.exports = function(cb) {
        var startTime = currentTimestamp(), result = cb();
        return [ startTime, currentTimestamp() - startTime, result ];
      };
    },
    7269: (__unused_webpack_module, exports) => {
      "use strict";
      function f(a, b) {
        var c = a.length;
        a.push(b);
        a: for (;0 < c; ) {
          var d = c - 1 >>> 1, e = a[d];
          if (!(0 < g(e, b))) break a;
          a[d] = b, a[c] = e, c = d;
        }
      }
      function h(a) {
        return 0 === a.length ? null : a[0];
      }
      function k(a) {
        if (0 === a.length) return null;
        var b = a[0], c = a.pop();
        if (c !== b) {
          a[0] = c;
          a: for (var d = 0, e = a.length, w = e >>> 1; d < w; ) {
            var m = 2 * (d + 1) - 1, C = a[m], n = m + 1, x = a[n];
            if (0 > g(C, c)) n < e && 0 > g(x, C) ? (a[d] = x, a[n] = c, d = n) : (a[d] = C, 
            a[m] = c, d = m); else {
              if (!(n < e && 0 > g(x, c))) break a;
              a[d] = x, a[n] = c, d = n;
            }
          }
        }
        return b;
      }
      function g(a, b) {
        var c = a.sortIndex - b.sortIndex;
        return 0 !== c ? c : a.id - b.id;
      }
      if ("object" == typeof performance && "function" == typeof performance.now) {
        var l = performance;
        exports.unstable_now = function() {
          return l.now();
        };
      } else {
        var p = Date, q = p.now();
        exports.unstable_now = function() {
          return p.now() - q;
        };
      }
      var r = [], t = [], u = 1, v = null, y = 3, z = !1, A = !1, B = !1, D = "function" == typeof setTimeout ? setTimeout : null, E = "function" == typeof clearTimeout ? clearTimeout : null, F = "undefined" != typeof setImmediate ? setImmediate : null;
      function G(a) {
        for (var b = h(t); null !== b; ) {
          if (null === b.callback) k(t); else {
            if (!(b.startTime <= a)) break;
            k(t), b.sortIndex = b.expirationTime, f(r, b);
          }
          b = h(t);
        }
      }
      function H(a) {
        if (B = !1, G(a), !A) if (null !== h(r)) A = !0, I(J); else {
          var b = h(t);
          null !== b && K(H, b.startTime - a);
        }
      }
      function J(a, b) {
        A = !1, B && (B = !1, E(L), L = -1), z = !0;
        var c = y;
        try {
          for (G(b), v = h(r); null !== v && (!(v.expirationTime > b) || a && !M()); ) {
            var d = v.callback;
            if ("function" == typeof d) {
              v.callback = null, y = v.priorityLevel;
              var e = d(v.expirationTime <= b);
              b = exports.unstable_now(), "function" == typeof e ? v.callback = e : v === h(r) && k(r), 
              G(b);
            } else k(r);
            v = h(r);
          }
          if (null !== v) var w = !0; else {
            var m = h(t);
            null !== m && K(H, m.startTime - b), w = !1;
          }
          return w;
        } finally {
          v = null, y = c, z = !1;
        }
      }
      "undefined" != typeof navigator && void 0 !== navigator.scheduling && void 0 !== navigator.scheduling.isInputPending && navigator.scheduling.isInputPending.bind(navigator.scheduling);
      var S, N = !1, O = null, L = -1, P = 5, Q = -1;
      function M() {
        return !(exports.unstable_now() - Q < P);
      }
      function R() {
        if (null !== O) {
          var a = exports.unstable_now();
          Q = a;
          var b = !0;
          try {
            b = O(!0, a);
          } finally {
            b ? S() : (N = !1, O = null);
          }
        } else N = !1;
      }
      if ("function" == typeof F) S = function() {
        F(R);
      }; else if ("undefined" != typeof MessageChannel) {
        var T = new MessageChannel, U = T.port2;
        T.port1.onmessage = R, S = function() {
          U.postMessage(null);
        };
      } else S = function() {
        D(R, 0);
      };
      function I(a) {
        O = a, N || (N = !0, S());
      }
      function K(a, b) {
        L = D((function() {
          a(exports.unstable_now());
        }), b);
      }
      exports.unstable_IdlePriority = 5, exports.unstable_ImmediatePriority = 1, exports.unstable_LowPriority = 4, 
      exports.unstable_NormalPriority = 3, exports.unstable_Profiling = null, exports.unstable_UserBlockingPriority = 2, 
      exports.unstable_cancelCallback = function(a) {
        a.callback = null;
      }, exports.unstable_continueExecution = function() {
        A || z || (A = !0, I(J));
      }, exports.unstable_forceFrameRate = function(a) {
        0 > a || 125 < a ? console.error("forceFrameRate takes a positive int between 0 and 125, forcing frame rates higher than 125 fps is not supported") : P = 0 < a ? Math.floor(1e3 / a) : 5;
      }, exports.unstable_getCurrentPriorityLevel = function() {
        return y;
      }, exports.unstable_getFirstCallbackNode = function() {
        return h(r);
      }, exports.unstable_next = function(a) {
        switch (y) {
         case 1:
         case 2:
         case 3:
          var b = 3;
          break;

         default:
          b = y;
        }
        var c = y;
        y = b;
        try {
          return a();
        } finally {
          y = c;
        }
      }, exports.unstable_pauseExecution = function() {}, exports.unstable_requestPaint = function() {}, 
      exports.unstable_runWithPriority = function(a, b) {
        switch (a) {
         case 1:
         case 2:
         case 3:
         case 4:
         case 5:
          break;

         default:
          a = 3;
        }
        var c = y;
        y = a;
        try {
          return b();
        } finally {
          y = c;
        }
      }, exports.unstable_scheduleCallback = function(a, b, c) {
        var d = exports.unstable_now();
        switch ("object" == typeof c && null !== c ? c = "number" == typeof (c = c.delay) && 0 < c ? d + c : d : c = d, 
        a) {
         case 1:
          var e = -1;
          break;

         case 2:
          e = 250;
          break;

         case 5:
          e = 1073741823;
          break;

         case 4:
          e = 1e4;
          break;

         default:
          e = 5e3;
        }
        return a = {
          id: u++,
          callback: b,
          priorityLevel: a,
          startTime: c,
          expirationTime: e = c + e,
          sortIndex: -1
        }, c > d ? (a.sortIndex = c, f(t, a), null === h(r) && a === h(t) && (B ? (E(L), 
        L = -1) : B = !0, K(H, c - d))) : (a.sortIndex = e, f(r, a), A || z || (A = !0, 
        I(J))), a;
      }, exports.unstable_shouldYield = M, exports.unstable_wrapCallback = function(a) {
        var b = y;
        return function() {
          var c = y;
          y = b;
          try {
            return a.apply(this, arguments);
          } finally {
            y = c;
          }
        };
      };
    },
    895: (module, __unused_webpack_exports, __webpack_require__) => {
      "use strict";
      module.exports = __webpack_require__(7269);
    },
    3382: module => {
      module.exports = function(r, a) {
        (null == a || a > r.length) && (a = r.length);
        for (var e = 0, n = Array(a); e < a; e++) n[e] = r[e];
        return n;
      }, module.exports.__esModule = !0, module.exports.default = module.exports;
    },
    1976: (module, __unused_webpack_exports, __webpack_require__) => {
      var arrayLikeToArray = __webpack_require__(3382);
      module.exports = function(r) {
        if (Array.isArray(r)) return arrayLikeToArray(r);
      }, module.exports.__esModule = !0, module.exports.default = module.exports;
    },
    1795: module => {
      module.exports = function(e) {
        if (void 0 === e) throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
        return e;
      }, module.exports.__esModule = !0, module.exports.default = module.exports;
    },
    8220: (module, __unused_webpack_exports, __webpack_require__) => {
      var unsupportedIterableToArray = __webpack_require__(3328);
      module.exports = function(r, e) {
        var t = "undefined" != typeof Symbol && r[Symbol.iterator] || r["@@iterator"];
        if (!t) {
          if (Array.isArray(r) || (t = unsupportedIterableToArray(r)) || e && r && "number" == typeof r.length) {
            t && (r = t);
            var _n = 0, F = function() {};
            return {
              s: F,
              n: function() {
                return _n >= r.length ? {
                  done: !0
                } : {
                  done: !1,
                  value: r[_n++]
                };
              },
              e: function(r) {
                throw r;
              },
              f: F
            };
          }
          throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
        }
        var o, a = !0, u = !1;
        return {
          s: function() {
            t = t.call(r);
          },
          n: function() {
            var r = t.next();
            return a = r.done, r;
          },
          e: function(r) {
            u = !0, o = r;
          },
          f: function() {
            try {
              a || null == t.return || t.return();
            } finally {
              if (u) throw o;
            }
          }
        };
      }, module.exports.__esModule = !0, module.exports.default = module.exports;
    },
    1329: (module, __unused_webpack_exports, __webpack_require__) => {
      var toPropertyKey = __webpack_require__(7284);
      module.exports = function(e, r, t) {
        return (r = toPropertyKey(r)) in e ? Object.defineProperty(e, r, {
          value: t,
          enumerable: !0,
          configurable: !0,
          writable: !0
        }) : e[r] = t, e;
      }, module.exports.__esModule = !0, module.exports.default = module.exports;
    },
    6750: module => {
      function _extends() {
        return module.exports = _extends = Object.assign ? Object.assign.bind() : function(n) {
          for (var e = 1; e < arguments.length; e++) {
            var t = arguments[e];
            for (var r in t) ({}).hasOwnProperty.call(t, r) && (n[r] = t[r]);
          }
          return n;
        }, module.exports.__esModule = !0, module.exports.default = module.exports, _extends.apply(null, arguments);
      }
      module.exports = _extends, module.exports.__esModule = !0, module.exports.default = module.exports;
    },
    8474: (module, __unused_webpack_exports, __webpack_require__) => {
      var setPrototypeOf = __webpack_require__(3959);
      module.exports = function(t, o) {
        t.prototype = Object.create(o.prototype), t.prototype.constructor = t, setPrototypeOf(t, o);
      }, module.exports.__esModule = !0, module.exports.default = module.exports;
    },
    3404: module => {
      module.exports = function(e) {
        return e && e.__esModule ? e : {
          default: e
        };
      }, module.exports.__esModule = !0, module.exports.default = module.exports;
    },
    6440: module => {
      module.exports = function(r) {
        if ("undefined" != typeof Symbol && null != r[Symbol.iterator] || null != r["@@iterator"]) return Array.from(r);
      }, module.exports.__esModule = !0, module.exports.default = module.exports;
    },
    1054: module => {
      module.exports = function() {
        throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
      }, module.exports.__esModule = !0, module.exports.default = module.exports;
    },
    9004: (module, __unused_webpack_exports, __webpack_require__) => {
      var defineProperty = __webpack_require__(1329);
      function ownKeys(e, r) {
        var t = Object.keys(e);
        if (Object.getOwnPropertySymbols) {
          var o = Object.getOwnPropertySymbols(e);
          r && (o = o.filter((function(r) {
            return Object.getOwnPropertyDescriptor(e, r).enumerable;
          }))), t.push.apply(t, o);
        }
        return t;
      }
      module.exports = function(e) {
        for (var r = 1; r < arguments.length; r++) {
          var t = null != arguments[r] ? arguments[r] : {};
          r % 2 ? ownKeys(Object(t), !0).forEach((function(r) {
            defineProperty(e, r, t[r]);
          })) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach((function(r) {
            Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r));
          }));
        }
        return e;
      }, module.exports.__esModule = !0, module.exports.default = module.exports;
    },
    6783: module => {
      module.exports = function(r, e) {
        if (null == r) return {};
        var t = {};
        for (var n in r) if ({}.hasOwnProperty.call(r, n)) {
          if (e.includes(n)) continue;
          t[n] = r[n];
        }
        return t;
      }, module.exports.__esModule = !0, module.exports.default = module.exports;
    },
    3959: module => {
      function _setPrototypeOf(t, e) {
        return module.exports = _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function(t, e) {
          return t.__proto__ = e, t;
        }, module.exports.__esModule = !0, module.exports.default = module.exports, _setPrototypeOf(t, e);
      }
      module.exports = _setPrototypeOf, module.exports.__esModule = !0, module.exports.default = module.exports;
    },
    6616: (module, __unused_webpack_exports, __webpack_require__) => {
      var arrayWithoutHoles = __webpack_require__(1976), iterableToArray = __webpack_require__(6440), unsupportedIterableToArray = __webpack_require__(3328), nonIterableSpread = __webpack_require__(1054);
      module.exports = function(r) {
        return arrayWithoutHoles(r) || iterableToArray(r) || unsupportedIterableToArray(r) || nonIterableSpread();
      }, module.exports.__esModule = !0, module.exports.default = module.exports;
    },
    4494: (module, __unused_webpack_exports, __webpack_require__) => {
      var _typeof = __webpack_require__(4331).default;
      module.exports = function(t, r) {
        if ("object" != _typeof(t) || !t) return t;
        var e = t[Symbol.toPrimitive];
        if (void 0 !== e) {
          var i = e.call(t, r || "default");
          if ("object" != _typeof(i)) return i;
          throw new TypeError("@@toPrimitive must return a primitive value.");
        }
        return ("string" === r ? String : Number)(t);
      }, module.exports.__esModule = !0, module.exports.default = module.exports;
    },
    7284: (module, __unused_webpack_exports, __webpack_require__) => {
      var _typeof = __webpack_require__(4331).default, toPrimitive = __webpack_require__(4494);
      module.exports = function(t) {
        var i = toPrimitive(t, "string");
        return "symbol" == _typeof(i) ? i : i + "";
      }, module.exports.__esModule = !0, module.exports.default = module.exports;
    },
    4331: module => {
      function _typeof(o) {
        return module.exports = _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(o) {
          return typeof o;
        } : function(o) {
          return o && "function" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? "symbol" : typeof o;
        }, module.exports.__esModule = !0, module.exports.default = module.exports, _typeof(o);
      }
      module.exports = _typeof, module.exports.__esModule = !0, module.exports.default = module.exports;
    },
    3328: (module, __unused_webpack_exports, __webpack_require__) => {
      var arrayLikeToArray = __webpack_require__(3382);
      module.exports = function(r, a) {
        if (r) {
          if ("string" == typeof r) return arrayLikeToArray(r, a);
          var t = {}.toString.call(r).slice(8, -1);
          return "Object" === t && r.constructor && (t = r.constructor.name), "Map" === t || "Set" === t ? Array.from(r) : "Arguments" === t || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t) ? arrayLikeToArray(r, a) : void 0;
        }
      }, module.exports.__esModule = !0, module.exports.default = module.exports;
    },
    5924: module => {
      module.exports = function(r, a) {
        (null == a || a > r.length) && (a = r.length);
        for (var e = 0, n = Array(a); e < a; e++) n[e] = r[e];
        return n;
      }, module.exports.__esModule = !0, module.exports.default = module.exports;
    },
    261: (module, __unused_webpack_exports, __webpack_require__) => {
      var arrayLikeToArray = __webpack_require__(5924);
      module.exports = function(r) {
        if (Array.isArray(r)) return arrayLikeToArray(r);
      }, module.exports.__esModule = !0, module.exports.default = module.exports;
    },
    9325: module => {
      function asyncGeneratorStep(n, t, e, r, o, a, c) {
        try {
          var i = n[a](c), u = i.value;
        } catch (n) {
          return void e(n);
        }
        i.done ? t(u) : Promise.resolve(u).then(r, o);
      }
      module.exports = function(n) {
        return function() {
          var t = this, e = arguments;
          return new Promise((function(r, o) {
            var a = n.apply(t, e);
            function _next(n) {
              asyncGeneratorStep(a, r, o, _next, _throw, "next", n);
            }
            function _throw(n) {
              asyncGeneratorStep(a, r, o, _next, _throw, "throw", n);
            }
            _next(void 0);
          }));
        };
      }, module.exports.__esModule = !0, module.exports.default = module.exports;
    },
    2460: (module, __unused_webpack_exports, __webpack_require__) => {
      var unsupportedIterableToArray = __webpack_require__(1303);
      module.exports = function(r, e) {
        var t = "undefined" != typeof Symbol && r[Symbol.iterator] || r["@@iterator"];
        if (!t) {
          if (Array.isArray(r) || (t = unsupportedIterableToArray(r)) || e && r && "number" == typeof r.length) {
            t && (r = t);
            var _n = 0, F = function() {};
            return {
              s: F,
              n: function() {
                return _n >= r.length ? {
                  done: !0
                } : {
                  done: !1,
                  value: r[_n++]
                };
              },
              e: function(r) {
                throw r;
              },
              f: F
            };
          }
          throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
        }
        var o, a = !0, u = !1;
        return {
          s: function() {
            t = t.call(r);
          },
          n: function() {
            var r = t.next();
            return a = r.done, r;
          },
          e: function(r) {
            u = !0, o = r;
          },
          f: function() {
            try {
              a || null == t.return || t.return();
            } finally {
              if (u) throw o;
            }
          }
        };
      }, module.exports.__esModule = !0, module.exports.default = module.exports;
    },
    5217: (module, __unused_webpack_exports, __webpack_require__) => {
      var toPropertyKey = __webpack_require__(5148);
      module.exports = function(e, r, t) {
        return (r = toPropertyKey(r)) in e ? Object.defineProperty(e, r, {
          value: t,
          enumerable: !0,
          configurable: !0,
          writable: !0
        }) : e[r] = t, e;
      }, module.exports.__esModule = !0, module.exports.default = module.exports;
    },
    1440: module => {
      module.exports = function(e) {
        return e && e.__esModule ? e : {
          default: e
        };
      }, module.exports.__esModule = !0, module.exports.default = module.exports;
    },
    4972: module => {
      module.exports = function(r) {
        if ("undefined" != typeof Symbol && null != r[Symbol.iterator] || null != r["@@iterator"]) return Array.from(r);
      }, module.exports.__esModule = !0, module.exports.default = module.exports;
    },
    9436: module => {
      module.exports = function() {
        throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
      }, module.exports.__esModule = !0, module.exports.default = module.exports;
    },
    2977: (module, __unused_webpack_exports, __webpack_require__) => {
      var defineProperty = __webpack_require__(5217);
      function ownKeys(e, r) {
        var t = Object.keys(e);
        if (Object.getOwnPropertySymbols) {
          var o = Object.getOwnPropertySymbols(e);
          r && (o = o.filter((function(r) {
            return Object.getOwnPropertyDescriptor(e, r).enumerable;
          }))), t.push.apply(t, o);
        }
        return t;
      }
      module.exports = function(e) {
        for (var r = 1; r < arguments.length; r++) {
          var t = null != arguments[r] ? arguments[r] : {};
          r % 2 ? ownKeys(Object(t), !0).forEach((function(r) {
            defineProperty(e, r, t[r]);
          })) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach((function(r) {
            Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r));
          }));
        }
        return e;
      }, module.exports.__esModule = !0, module.exports.default = module.exports;
    },
    8141: module => {
      module.exports = function(r, e) {
        if (null == r) return {};
        var t = {};
        for (var n in r) if ({}.hasOwnProperty.call(r, n)) {
          if (e.includes(n)) continue;
          t[n] = r[n];
        }
        return t;
      }, module.exports.__esModule = !0, module.exports.default = module.exports;
    },
    3451: (module, __unused_webpack_exports, __webpack_require__) => {
      var arrayWithoutHoles = __webpack_require__(261), iterableToArray = __webpack_require__(4972), unsupportedIterableToArray = __webpack_require__(1303), nonIterableSpread = __webpack_require__(9436);
      module.exports = function(r) {
        return arrayWithoutHoles(r) || iterableToArray(r) || unsupportedIterableToArray(r) || nonIterableSpread();
      }, module.exports.__esModule = !0, module.exports.default = module.exports;
    },
    8229: (module, __unused_webpack_exports, __webpack_require__) => {
      var _typeof = __webpack_require__(1590).default;
      module.exports = function(t, r) {
        if ("object" != _typeof(t) || !t) return t;
        var e = t[Symbol.toPrimitive];
        if (void 0 !== e) {
          var i = e.call(t, r || "default");
          if ("object" != _typeof(i)) return i;
          throw new TypeError("@@toPrimitive must return a primitive value.");
        }
        return ("string" === r ? String : Number)(t);
      }, module.exports.__esModule = !0, module.exports.default = module.exports;
    },
    5148: (module, __unused_webpack_exports, __webpack_require__) => {
      var _typeof = __webpack_require__(1590).default, toPrimitive = __webpack_require__(8229);
      module.exports = function(t) {
        var i = toPrimitive(t, "string");
        return "symbol" == _typeof(i) ? i : i + "";
      }, module.exports.__esModule = !0, module.exports.default = module.exports;
    },
    1590: module => {
      function _typeof(o) {
        return module.exports = _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(o) {
          return typeof o;
        } : function(o) {
          return o && "function" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? "symbol" : typeof o;
        }, module.exports.__esModule = !0, module.exports.default = module.exports, _typeof(o);
      }
      module.exports = _typeof, module.exports.__esModule = !0, module.exports.default = module.exports;
    },
    1303: (module, __unused_webpack_exports, __webpack_require__) => {
      var arrayLikeToArray = __webpack_require__(5924);
      module.exports = function(r, a) {
        if (r) {
          if ("string" == typeof r) return arrayLikeToArray(r, a);
          var t = {}.toString.call(r).slice(8, -1);
          return "Object" === t && r.constructor && (t = r.constructor.name), "Map" === t || "Set" === t ? Array.from(r) : "Arguments" === t || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t) ? arrayLikeToArray(r, a) : void 0;
        }
      }, module.exports.__esModule = !0, module.exports.default = module.exports;
    }
  }, __webpack_module_cache__ = {};
  function __webpack_require__(moduleId) {
    var cachedModule = __webpack_module_cache__[moduleId];
    if (void 0 !== cachedModule) return cachedModule.exports;
    var module = __webpack_module_cache__[moduleId] = {
      exports: {}
    };
    return __webpack_modules__[moduleId](module, module.exports, __webpack_require__), 
    module.exports;
  }
  __webpack_require__.n = module => {
    var getter = module && module.__esModule ? () => module.default : () => module;
    return __webpack_require__.d(getter, {
      a: getter
    }), getter;
  }, __webpack_require__.d = (exports, definition) => {
    for (var key in definition) __webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key) && Object.defineProperty(exports, key, {
      enumerable: !0,
      get: definition[key]
    });
  }, __webpack_require__.g = function() {
    if ("object" == typeof globalThis) return globalThis;
    try {
      return this || new Function("return this")();
    } catch (e) {
      if ("object" == typeof window) return window;
    }
  }(), __webpack_require__.o = (obj, prop) => Object.prototype.hasOwnProperty.call(obj, prop), 
  (() => {
    "use strict";
    var react_relay = __webpack_require__(9050);
    class BrowserLogger {
      static info(...data) {
        false;
      }
      static error(...data) {
        false;
      }
    }
    !function(obj, key, value) {
      (key = function(arg) {
        var key = function(input, hint) {
          if ("object" != typeof input || null === input) return input;
          var prim = input[Symbol.toPrimitive];
          if (void 0 !== prim) {
            var res = prim.call(input, hint || "default");
            if ("object" != typeof res) return res;
            throw new TypeError("@@toPrimitive must return a primitive value.");
          }
          return ("string" === hint ? String : Number)(input);
        }(arg, "string");
        return "symbol" == typeof key ? key : String(key);
      }(key)) in obj ? Object.defineProperty(obj, key, {
        value,
        enumerable: !0,
        configurable: !0,
        writable: !0
      }) : obj[key] = value;
    }(BrowserLogger, "context", "Content");
    class MessageHandler {
      static handleMessage(sender, data) {
        throw new TypeError("Unimplemented");
      }
      static getKey() {
        throw new TypeError("Unimplemented");
      }
      static send(data) {
        const request = {
          key: this.getKey(),
          data
        };
        return new Promise(((resolve, reject) => chrome.runtime.sendMessage(request, (response => {
          null != response && resolve(response), reject();
        }))));
      }
    }
    class ShowPopupMessageHandler extends MessageHandler {
      static getKey() {
        return "pull_request_import";
      }
      static handleMessage(sender, data) {
        const w = data.browserWindow, x = w.x + w.width / 2 - 320, y = w.y + w.height / 2 - 120;
        let opts = {
          url: data.url,
          width: 640,
          height: 240,
          left: Math.round(x),
          top: Math.round(y),
          type: "popup"
        };
        return chrome.windows.create(opts), Promise.resolve(!0);
      }
    }
    class ShowContextMenusMessageHandler extends MessageHandler {
      static getKey() {
        return "show_context_menus";
      }
      static handleMessage(sender, data) {
        return chrome.contextMenus.removeAll(), chrome.contextMenus.create({
          title: "Open on InternalFB.com",
          contexts: [ "page" ],
          documentUrlPatterns: [ "https://github.com/*" ],
          id: "facehub-root-context-menu"
        }), data.menus.map((item => {
          chrome.contextMenus.create({
            title: item.label,
            contexts: [ "page" ],
            documentUrlPatterns: [ "https://github.com/*" ],
            parentId: "facehub-root-context-menu",
            id: item.uri
          });
        })), chrome.contextMenus.onClicked.addListener((item => chrome.tabs.create({
          url: item.menuItemId
        }))), Promise.resolve(!0);
      }
    }
    class SetPageHandlerVisibilityMessageHandler extends MessageHandler {
      static getKey() {
        return "page_action";
      }
      static handleMessage(sender, data) {
        return data ? chrome.action.enable(sender.tab.id) : chrome.action.disable(sender.tab.id), 
        Promise.resolve(!0);
      }
    }
    class ExtensionStorage {
      static get(key) {
        return new Promise(((resolve, reject) => chrome.storage.local.get(key, (items => {
          chrome.runtime.lastError && reject(chrome.runtime.lastError), resolve(items[key]);
        }))));
      }
      static set(key, value) {
        let values = {};
        values[key] = value, chrome.storage.local.set(values);
      }
    }
    function nullthrows(value) {
      if (null != value) return value;
      throw new TypeError("Got unexpected null or undefined");
    }
    function genGraphQL(fbid, variables) {
      return async function() {
        var _memoCSRF3;
        const now = Date.now() / 1e3;
        if (null === _memoCSRF || null == _memoTime || _memoTime <= now) {
          var _memoCSRF$expire, _memoCSRF2;
          _memoCSRF = await async function() {
            const item = await ExtensionStorage.get(CSRF_LOCALSTORAGE_KEY), now = Date.now() / 1e3 + 60;
            if (null != item && item.expire >= now) return item;
            const response = await fetch(CSRF_URL);
            if (200 !== response.status) return BrowserLogger.error("Failed GraphQL fetch. Status Code: " + response.status), 
            null;
            const text = await response.text();
            if (null == text) return BrowserLogger.error("Failed to get CSRF token"), null;
            const token = JSON.parse(text.slice(9));
            return ExtensionStorage.set(CSRF_LOCALSTORAGE_KEY, token), token;
          }(), _memoTime = null !== (_memoCSRF$expire = null === (_memoCSRF2 = _memoCSRF) || void 0 === _memoCSRF2 ? void 0 : _memoCSRF2.expire) && void 0 !== _memoCSRF$expire ? _memoCSRF$expire : now + 7200;
        }
        return null === (_memoCSRF3 = _memoCSRF) || void 0 === _memoCSRF3 ? void 0 : _memoCSRF3.token;
      }().then((csrf => {
        const data = {
          doc_id: fbid,
          fb_dtsg: nullthrows(csrf),
          variables: variables ? JSON.stringify(variables) : ""
        }, body = Object.keys(data).map((key => encodeURIComponent(key) + "=" + encodeURIComponent(data[key]))).join("&");
        return fetch("https://www.internalfb.com/intern/api/graphql", {
          method: "POST",
          body,
          headers: {
            "Content-Type": "application/x-www-form-urlencoded"
          }
        });
      })).then((result => result.json())).then((json => json.error ? (BrowserLogger.error("Failed GraphQL fetch. Status Code: " + json.error), 
      null) : null == json ? void 0 : json.data));
    }
    const CSRF_LOCALSTORAGE_KEY = "facehub:csrf", CSRF_URL = "https://www.internalfb.com/intern/api/dtsg/internal";
    let _memoCSRF = null, _memoTime = null;
    class GraphQLRequestMessage extends MessageHandler {
      static getKey() {
        return "graphql";
      }
      static handleMessage(sender, data) {
        return genGraphQL(nullthrows(data.operation.id), data.variables);
      }
    }
    const HANDLERS = [ ShowPopupMessageHandler, ShowContextMenusMessageHandler, SetPageHandlerVisibilityMessageHandler, GraphQLRequestMessage ], ExtensionMessages = {
      initializeAsBackgroundScript() {
        chrome.runtime.onMessage.addListener(((request, sender, sendResponse) => {
          BrowserLogger.info("[ExtensionMessages] RX: ", request);
          const key = request.key;
          for (const handler of HANDLERS) if (key === handler.getKey()) return handler.handleMessage(sender, request.data).then((response => {
            const payload = {
              ...request,
              data: response
            };
            sendResponse(payload);
          })).catch((err => (BrowserLogger.error("[ExtensionMessages] message handler threw an error: " + err), 
          Promise.resolve(sendResponse({
            ...request,
            data: null
          }))))), !0;
          return BrowserLogger.error(`[ExtensionMessages] message for '${key}' did not match any handlers! Returning null`), 
          sendResponse({
            ...request,
            data: null
          }), !0;
        }));
      },
      sendMessage(message, handler) {
        BrowserLogger.info("[ExtensionMessages] TX: ", message), chrome.runtime.sendMessage(message, handler);
      }
    };
    var relay_runtime = __webpack_require__(402);
    const RelayEnvironment = new relay_runtime.Environment({
      network: relay_runtime.Network.create((function(operation, variables) {
        return GraphQLRequestMessage.send({
          operation,
          variables
        }).then(nullthrows);
      })),
      store: new relay_runtime.Store(new relay_runtime.RecordSource)
    });
    var _FalcoLoggerMutation, react = __webpack_require__(7130), react_dom = __webpack_require__(1618);
    const chromeManifest = chrome.runtime.getManifest();
    class FalcoLogger {
      static logRaw(data) {
        var _data$type, _data$version, _data$manifest_versio, _data$minimum_chrome_, _data$user_agent;
        null == data.stack && (data.stack = (new Error).stack.toString().replace("Error", "").trim()), 
        null !== (_data$type = data.type) && void 0 !== _data$type || (data.type = "INFO"), 
        null !== (_data$version = data.version) && void 0 !== _data$version || (data.version = chromeManifest.version), 
        null !== (_data$manifest_versio = data.manifest_version) && void 0 !== _data$manifest_versio || (data.manifest_version = chromeManifest.manifest_version), 
        null !== (_data$minimum_chrome_ = data.minimum_chrome_version) && void 0 !== _data$minimum_chrome_ || (data.minimum_chrome_version = chromeManifest.minimum_chrome_version), 
        null !== (_data$user_agent = data.user_agent) && void 0 !== _data$user_agent || (data.user_agent = navigator.userAgent);
        const operation = (void 0 !== _FalcoLoggerMutation || (_FalcoLoggerMutation = __webpack_require__(1058)).hash && "caebdfc9d32a7fe2eda9bef5932cd5c4" !== _FalcoLoggerMutation.hash && console.error("The definition of 'FalcoLoggerMutation' appears to have changed. Run `relay-compiler` to update the generated files to receive the expected data."), 
        _FalcoLoggerMutation);
        GraphQLRequestMessage.send({
          operation: operation.params,
          variables: {
            input: {
              payload: data
            }
          }
        });
      }
      static logPageView(url) {
        this.logRaw({
          js_class: "FalcoLogger",
          scope: "vitals",
          action: "page_view",
          url
        });
      }
      static logError(js_class, scope, action, url, error) {
        this.logRaw({
          js_class,
          stack: error.stack,
          scope,
          action,
          url,
          message: error.message,
          type: "ERROR"
        });
      }
    }
    function _objectWithoutPropertiesLoose(source, excluded) {
      if (null == source) return {};
      var key, i, target = {}, sourceKeys = Object.keys(source);
      for (i = 0; i < sourceKeys.length; i++) key = sourceKeys[i], excluded.indexOf(key) >= 0 || (target[key] = source[key]);
      return target;
    }
    function objectWithoutProperties_objectWithoutProperties(source, excluded) {
      if (null == source) return {};
      var key, i, target = _objectWithoutPropertiesLoose(source, excluded);
      if (Object.getOwnPropertySymbols) {
        var sourceSymbolKeys = Object.getOwnPropertySymbols(source);
        for (i = 0; i < sourceSymbolKeys.length; i++) key = sourceSymbolKeys[i], excluded.indexOf(key) >= 0 || Object.prototype.propertyIsEnumerable.call(source, key) && (target[key] = source[key]);
      }
      return target;
    }
    function extends_extends() {
      return extends_extends = Object.assign || function(target) {
        for (var i = 1; i < arguments.length; i++) {
          var source = arguments[i];
          for (var key in source) Object.prototype.hasOwnProperty.call(source, key) && (target[key] = source[key]);
        }
        return target;
      }, extends_extends.apply(this, arguments);
    }
    function _typeof(obj) {
      return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(obj) {
        return typeof obj;
      } : function(obj) {
        return obj && "function" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj;
      }, _typeof(obj);
    }
    function isPlainObject(item) {
      return item && "object" === _typeof(item) && item.constructor === Object;
    }
    function deepmerge(target, source) {
      var options = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : {
        clone: !0
      }, output = options.clone ? extends_extends({}, target) : target;
      return isPlainObject(target) && isPlainObject(source) && Object.keys(source).forEach((function(key) {
        "__proto__" !== key && (isPlainObject(source[key]) && key in target ? output[key] = deepmerge(target[key], source[key], options) : output[key] = source[key]);
      })), output;
    }
    var keys = [ "xs", "sm", "md", "lg", "xl" ];
    function defineProperty_defineProperty(obj, key, value) {
      return key in obj ? Object.defineProperty(obj, key, {
        value,
        enumerable: !0,
        configurable: !0,
        writable: !0
      }) : obj[key] = value, obj;
    }
    function createMixins(breakpoints, spacing, mixins) {
      var _toolbar;
      return extends_extends({
        gutters: function() {
          var styles = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {};
          return console.warn([ "Material-UI: theme.mixins.gutters() is deprecated.", "You can use the source of the mixin directly:", "\n      paddingLeft: theme.spacing(2),\n      paddingRight: theme.spacing(2),\n      [theme.breakpoints.up('sm')]: {\n        paddingLeft: theme.spacing(3),\n        paddingRight: theme.spacing(3),\n      },\n      " ].join("\n")), 
          extends_extends({
            paddingLeft: spacing(2),
            paddingRight: spacing(2)
          }, styles, defineProperty_defineProperty({}, breakpoints.up("sm"), extends_extends({
            paddingLeft: spacing(3),
            paddingRight: spacing(3)
          }, styles[breakpoints.up("sm")])));
        },
        toolbar: (_toolbar = {
          minHeight: 56
        }, defineProperty_defineProperty(_toolbar, "".concat(breakpoints.up("xs"), " and (orientation: landscape)"), {
          minHeight: 48
        }), defineProperty_defineProperty(_toolbar, breakpoints.up("sm"), {
          minHeight: 64
        }), _toolbar)
      }, mixins);
    }
    function formatMuiErrorMessage(code) {
      for (var url = "https://material-ui.com/production-error/?code=" + code, i = 1; i < arguments.length; i += 1) url += "&args[]=" + encodeURIComponent(arguments[i]);
      return "Minified Material-UI error #" + code + "; visit " + url + " for the full message.";
    }
    const colors_common = {
      black: "#000",
      white: "#fff"
    };
    const colors_grey = {
      50: "#fafafa",
      100: "#f5f5f5",
      200: "#eeeeee",
      300: "#e0e0e0",
      400: "#bdbdbd",
      500: "#9e9e9e",
      600: "#757575",
      700: "#616161",
      800: "#424242",
      900: "#212121",
      A100: "#d5d5d5",
      A200: "#aaaaaa",
      A400: "#303030",
      A700: "#616161"
    };
    const colors_indigo = {
      50: "#e8eaf6",
      100: "#c5cae9",
      200: "#9fa8da",
      300: "#7986cb",
      400: "#5c6bc0",
      500: "#3f51b5",
      600: "#3949ab",
      700: "#303f9f",
      800: "#283593",
      900: "#1a237e",
      A100: "#8c9eff",
      A200: "#536dfe",
      A400: "#3d5afe",
      A700: "#304ffe"
    };
    const colors_pink = {
      50: "#fce4ec",
      100: "#f8bbd0",
      200: "#f48fb1",
      300: "#f06292",
      400: "#ec407a",
      500: "#e91e63",
      600: "#d81b60",
      700: "#c2185b",
      800: "#ad1457",
      900: "#880e4f",
      A100: "#ff80ab",
      A200: "#ff4081",
      A400: "#f50057",
      A700: "#c51162"
    };
    const colors_red = {
      50: "#ffebee",
      100: "#ffcdd2",
      200: "#ef9a9a",
      300: "#e57373",
      400: "#ef5350",
      500: "#f44336",
      600: "#e53935",
      700: "#d32f2f",
      800: "#c62828",
      900: "#b71c1c",
      A100: "#ff8a80",
      A200: "#ff5252",
      A400: "#ff1744",
      A700: "#d50000"
    };
    const colors_orange = {
      50: "#fff3e0",
      100: "#ffe0b2",
      200: "#ffcc80",
      300: "#ffb74d",
      400: "#ffa726",
      500: "#ff9800",
      600: "#fb8c00",
      700: "#f57c00",
      800: "#ef6c00",
      900: "#e65100",
      A100: "#ffd180",
      A200: "#ffab40",
      A400: "#ff9100",
      A700: "#ff6d00"
    };
    const colors_blue = {
      50: "#e3f2fd",
      100: "#bbdefb",
      200: "#90caf9",
      300: "#64b5f6",
      400: "#42a5f5",
      500: "#2196f3",
      600: "#1e88e5",
      700: "#1976d2",
      800: "#1565c0",
      900: "#0d47a1",
      A100: "#82b1ff",
      A200: "#448aff",
      A400: "#2979ff",
      A700: "#2962ff"
    };
    const colors_green = {
      50: "#e8f5e9",
      100: "#c8e6c9",
      200: "#a5d6a7",
      300: "#81c784",
      400: "#66bb6a",
      500: "#4caf50",
      600: "#43a047",
      700: "#388e3c",
      800: "#2e7d32",
      900: "#1b5e20",
      A100: "#b9f6ca",
      A200: "#69f0ae",
      A400: "#00e676",
      A700: "#00c853"
    };
    function clamp(value) {
      var min = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : 0, max = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : 1;
      return Math.min(Math.max(min, value), max);
    }
    function decomposeColor(color) {
      if (color.type) return color;
      if ("#" === color.charAt(0)) return decomposeColor(function(color) {
        color = color.substr(1);
        var re = new RegExp(".{1,".concat(color.length >= 6 ? 2 : 1, "}"), "g"), colors = color.match(re);
        return colors && 1 === colors[0].length && (colors = colors.map((function(n) {
          return n + n;
        }))), colors ? "rgb".concat(4 === colors.length ? "a" : "", "(").concat(colors.map((function(n, index) {
          return index < 3 ? parseInt(n, 16) : Math.round(parseInt(n, 16) / 255 * 1e3) / 1e3;
        })).join(", "), ")") : "";
      }(color));
      var marker = color.indexOf("("), type = color.substring(0, marker);
      if (-1 === [ "rgb", "rgba", "hsl", "hsla" ].indexOf(type)) throw new Error(formatMuiErrorMessage(3, color));
      var values = color.substring(marker + 1, color.length - 1).split(",");
      return {
        type,
        values: values = values.map((function(value) {
          return parseFloat(value);
        }))
      };
    }
    function recomposeColor(color) {
      var type = color.type, values = color.values;
      return -1 !== type.indexOf("rgb") ? values = values.map((function(n, i) {
        return i < 3 ? parseInt(n, 10) : n;
      })) : -1 !== type.indexOf("hsl") && (values[1] = "".concat(values[1], "%"), values[2] = "".concat(values[2], "%")), 
      "".concat(type, "(").concat(values.join(", "), ")");
    }
    function getLuminance(color) {
      var rgb = "hsl" === (color = decomposeColor(color)).type ? decomposeColor(function(color) {
        var values = (color = decomposeColor(color)).values, h = values[0], s = values[1] / 100, l = values[2] / 100, a = s * Math.min(l, 1 - l), f = function(n) {
          var k = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : (n + h / 30) % 12;
          return l - a * Math.max(Math.min(k - 3, 9 - k, 1), -1);
        }, type = "rgb", rgb = [ Math.round(255 * f(0)), Math.round(255 * f(8)), Math.round(255 * f(4)) ];
        return "hsla" === color.type && (type += "a", rgb.push(values[3])), recomposeColor({
          type,
          values: rgb
        });
      }(color)).values : color.values;
      return rgb = rgb.map((function(val) {
        return (val /= 255) <= .03928 ? val / 12.92 : Math.pow((val + .055) / 1.055, 2.4);
      })), Number((.2126 * rgb[0] + .7152 * rgb[1] + .0722 * rgb[2]).toFixed(3));
    }
    function alpha(color, value) {
      return color = decomposeColor(color), value = clamp(value), "rgb" !== color.type && "hsl" !== color.type || (color.type += "a"), 
      color.values[3] = value, recomposeColor(color);
    }
    function darken(color, coefficient) {
      if (color = decomposeColor(color), coefficient = clamp(coefficient), -1 !== color.type.indexOf("hsl")) color.values[2] *= 1 - coefficient; else if (-1 !== color.type.indexOf("rgb")) for (var i = 0; i < 3; i += 1) color.values[i] *= 1 - coefficient;
      return recomposeColor(color);
    }
    function lighten(color, coefficient) {
      if (color = decomposeColor(color), coefficient = clamp(coefficient), -1 !== color.type.indexOf("hsl")) color.values[2] += (100 - color.values[2]) * coefficient; else if (-1 !== color.type.indexOf("rgb")) for (var i = 0; i < 3; i += 1) color.values[i] += (255 - color.values[i]) * coefficient;
      return recomposeColor(color);
    }
    var light = {
      text: {
        primary: "rgba(0, 0, 0, 0.87)",
        secondary: "rgba(0, 0, 0, 0.54)",
        disabled: "rgba(0, 0, 0, 0.38)",
        hint: "rgba(0, 0, 0, 0.38)"
      },
      divider: "rgba(0, 0, 0, 0.12)",
      background: {
        paper: colors_common.white,
        default: colors_grey[50]
      },
      action: {
        active: "rgba(0, 0, 0, 0.54)",
        hover: "rgba(0, 0, 0, 0.04)",
        hoverOpacity: .04,
        selected: "rgba(0, 0, 0, 0.08)",
        selectedOpacity: .08,
        disabled: "rgba(0, 0, 0, 0.26)",
        disabledBackground: "rgba(0, 0, 0, 0.12)",
        disabledOpacity: .38,
        focus: "rgba(0, 0, 0, 0.12)",
        focusOpacity: .12,
        activatedOpacity: .12
      }
    }, dark = {
      text: {
        primary: colors_common.white,
        secondary: "rgba(255, 255, 255, 0.7)",
        disabled: "rgba(255, 255, 255, 0.5)",
        hint: "rgba(255, 255, 255, 0.5)",
        icon: "rgba(255, 255, 255, 0.5)"
      },
      divider: "rgba(255, 255, 255, 0.12)",
      background: {
        paper: colors_grey[800],
        default: "#303030"
      },
      action: {
        active: colors_common.white,
        hover: "rgba(255, 255, 255, 0.08)",
        hoverOpacity: .08,
        selected: "rgba(255, 255, 255, 0.16)",
        selectedOpacity: .16,
        disabled: "rgba(255, 255, 255, 0.3)",
        disabledBackground: "rgba(255, 255, 255, 0.12)",
        disabledOpacity: .38,
        focus: "rgba(255, 255, 255, 0.12)",
        focusOpacity: .12,
        activatedOpacity: .24
      }
    };
    function addLightOrDark(intent, direction, shade, tonalOffset) {
      var tonalOffsetLight = tonalOffset.light || tonalOffset, tonalOffsetDark = tonalOffset.dark || 1.5 * tonalOffset;
      intent[direction] || (intent.hasOwnProperty(shade) ? intent[direction] = intent[shade] : "light" === direction ? intent.light = lighten(intent.main, tonalOffsetLight) : "dark" === direction && (intent.dark = darken(intent.main, tonalOffsetDark)));
    }
    function createPalette(palette) {
      var _palette$primary = palette.primary, primary = void 0 === _palette$primary ? {
        light: colors_indigo[300],
        main: colors_indigo[500],
        dark: colors_indigo[700]
      } : _palette$primary, _palette$secondary = palette.secondary, secondary = void 0 === _palette$secondary ? {
        light: colors_pink.A200,
        main: colors_pink.A400,
        dark: colors_pink.A700
      } : _palette$secondary, _palette$error = palette.error, error = void 0 === _palette$error ? {
        light: colors_red[300],
        main: colors_red[500],
        dark: colors_red[700]
      } : _palette$error, _palette$warning = palette.warning, warning = void 0 === _palette$warning ? {
        light: colors_orange[300],
        main: colors_orange[500],
        dark: colors_orange[700]
      } : _palette$warning, _palette$info = palette.info, info = void 0 === _palette$info ? {
        light: colors_blue[300],
        main: colors_blue[500],
        dark: colors_blue[700]
      } : _palette$info, _palette$success = palette.success, success = void 0 === _palette$success ? {
        light: colors_green[300],
        main: colors_green[500],
        dark: colors_green[700]
      } : _palette$success, _palette$type = palette.type, type = void 0 === _palette$type ? "light" : _palette$type, _palette$contrastThre = palette.contrastThreshold, contrastThreshold = void 0 === _palette$contrastThre ? 3 : _palette$contrastThre, _palette$tonalOffset = palette.tonalOffset, tonalOffset = void 0 === _palette$tonalOffset ? .2 : _palette$tonalOffset, other = objectWithoutProperties_objectWithoutProperties(palette, [ "primary", "secondary", "error", "warning", "info", "success", "type", "contrastThreshold", "tonalOffset" ]);
      function getContrastText(background) {
        var contrastText = function(foreground, background) {
          var lumA = getLuminance(foreground), lumB = getLuminance(background);
          return (Math.max(lumA, lumB) + .05) / (Math.min(lumA, lumB) + .05);
        }(background, dark.text.primary) >= contrastThreshold ? dark.text.primary : light.text.primary;
        return contrastText;
      }
      var augmentColor = function(color) {
        var mainShade = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : 500, lightShade = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : 300, darkShade = arguments.length > 3 && void 0 !== arguments[3] ? arguments[3] : 700;
        if (!(color = extends_extends({}, color)).main && color[mainShade] && (color.main = color[mainShade]), 
        !color.main) throw new Error(formatMuiErrorMessage(4, mainShade));
        if ("string" != typeof color.main) throw new Error(formatMuiErrorMessage(5, JSON.stringify(color.main)));
        return addLightOrDark(color, "light", lightShade, tonalOffset), addLightOrDark(color, "dark", darkShade, tonalOffset), 
        color.contrastText || (color.contrastText = getContrastText(color.main)), color;
      }, types = {
        dark,
        light
      };
      return deepmerge(extends_extends({
        common: colors_common,
        type,
        primary: augmentColor(primary),
        secondary: augmentColor(secondary, "A400", "A200", "A700"),
        error: augmentColor(error),
        warning: augmentColor(warning),
        info: augmentColor(info),
        success: augmentColor(success),
        grey: colors_grey,
        contrastThreshold,
        getContrastText,
        augmentColor,
        tonalOffset
      }, types[type]), other);
    }
    function round(value) {
      return Math.round(1e5 * value) / 1e5;
    }
    function roundWithDeprecationWarning(value) {
      return round(value);
    }
    var caseAllCaps = {
      textTransform: "uppercase"
    }, defaultFontFamily = '"Roboto", "Helvetica", "Arial", sans-serif';
    function createTypography(palette, typography) {
      var _ref = "function" == typeof typography ? typography(palette) : typography, _ref$fontFamily = _ref.fontFamily, fontFamily = void 0 === _ref$fontFamily ? defaultFontFamily : _ref$fontFamily, _ref$fontSize = _ref.fontSize, fontSize = void 0 === _ref$fontSize ? 14 : _ref$fontSize, _ref$fontWeightLight = _ref.fontWeightLight, fontWeightLight = void 0 === _ref$fontWeightLight ? 300 : _ref$fontWeightLight, _ref$fontWeightRegula = _ref.fontWeightRegular, fontWeightRegular = void 0 === _ref$fontWeightRegula ? 400 : _ref$fontWeightRegula, _ref$fontWeightMedium = _ref.fontWeightMedium, fontWeightMedium = void 0 === _ref$fontWeightMedium ? 500 : _ref$fontWeightMedium, _ref$fontWeightBold = _ref.fontWeightBold, fontWeightBold = void 0 === _ref$fontWeightBold ? 700 : _ref$fontWeightBold, _ref$htmlFontSize = _ref.htmlFontSize, htmlFontSize = void 0 === _ref$htmlFontSize ? 16 : _ref$htmlFontSize, allVariants = _ref.allVariants, pxToRem2 = _ref.pxToRem, other = objectWithoutProperties_objectWithoutProperties(_ref, [ "fontFamily", "fontSize", "fontWeightLight", "fontWeightRegular", "fontWeightMedium", "fontWeightBold", "htmlFontSize", "allVariants", "pxToRem" ]);
      var coef = fontSize / 14, pxToRem = pxToRem2 || function(size) {
        return "".concat(size / htmlFontSize * coef, "rem");
      }, buildVariant = function(fontWeight, size, lineHeight, letterSpacing, casing) {
        return extends_extends({
          fontFamily,
          fontWeight,
          fontSize: pxToRem(size),
          lineHeight
        }, fontFamily === defaultFontFamily ? {
          letterSpacing: "".concat(round(letterSpacing / size), "em")
        } : {}, casing, allVariants);
      }, variants = {
        h1: buildVariant(fontWeightLight, 96, 1.167, -1.5),
        h2: buildVariant(fontWeightLight, 60, 1.2, -.5),
        h3: buildVariant(fontWeightRegular, 48, 1.167, 0),
        h4: buildVariant(fontWeightRegular, 34, 1.235, .25),
        h5: buildVariant(fontWeightRegular, 24, 1.334, 0),
        h6: buildVariant(fontWeightMedium, 20, 1.6, .15),
        subtitle1: buildVariant(fontWeightRegular, 16, 1.75, .15),
        subtitle2: buildVariant(fontWeightMedium, 14, 1.57, .1),
        body1: buildVariant(fontWeightRegular, 16, 1.5, .15),
        body2: buildVariant(fontWeightRegular, 14, 1.43, .15),
        button: buildVariant(fontWeightMedium, 14, 1.75, .4, caseAllCaps),
        caption: buildVariant(fontWeightRegular, 12, 1.66, .4),
        overline: buildVariant(fontWeightRegular, 12, 2.66, 1, caseAllCaps)
      };
      return deepmerge(extends_extends({
        htmlFontSize,
        pxToRem,
        round: roundWithDeprecationWarning,
        fontFamily,
        fontSize,
        fontWeightLight,
        fontWeightRegular,
        fontWeightMedium,
        fontWeightBold
      }, variants), other, {
        clone: !1
      });
    }
    function createShadow() {
      return [ "".concat(arguments.length <= 0 ? void 0 : arguments[0], "px ").concat(arguments.length <= 1 ? void 0 : arguments[1], "px ").concat(arguments.length <= 2 ? void 0 : arguments[2], "px ").concat(arguments.length <= 3 ? void 0 : arguments[3], "px rgba(0,0,0,").concat(.2, ")"), "".concat(arguments.length <= 4 ? void 0 : arguments[4], "px ").concat(arguments.length <= 5 ? void 0 : arguments[5], "px ").concat(arguments.length <= 6 ? void 0 : arguments[6], "px ").concat(arguments.length <= 7 ? void 0 : arguments[7], "px rgba(0,0,0,").concat(.14, ")"), "".concat(arguments.length <= 8 ? void 0 : arguments[8], "px ").concat(arguments.length <= 9 ? void 0 : arguments[9], "px ").concat(arguments.length <= 10 ? void 0 : arguments[10], "px ").concat(arguments.length <= 11 ? void 0 : arguments[11], "px rgba(0,0,0,").concat(.12, ")") ].join(",");
    }
    const styles_shadows = [ "none", createShadow(0, 2, 1, -1, 0, 1, 1, 0, 0, 1, 3, 0), createShadow(0, 3, 1, -2, 0, 2, 2, 0, 0, 1, 5, 0), createShadow(0, 3, 3, -2, 0, 3, 4, 0, 0, 1, 8, 0), createShadow(0, 2, 4, -1, 0, 4, 5, 0, 0, 1, 10, 0), createShadow(0, 3, 5, -1, 0, 5, 8, 0, 0, 1, 14, 0), createShadow(0, 3, 5, -1, 0, 6, 10, 0, 0, 1, 18, 0), createShadow(0, 4, 5, -2, 0, 7, 10, 1, 0, 2, 16, 1), createShadow(0, 5, 5, -3, 0, 8, 10, 1, 0, 3, 14, 2), createShadow(0, 5, 6, -3, 0, 9, 12, 1, 0, 3, 16, 2), createShadow(0, 6, 6, -3, 0, 10, 14, 1, 0, 4, 18, 3), createShadow(0, 6, 7, -4, 0, 11, 15, 1, 0, 4, 20, 3), createShadow(0, 7, 8, -4, 0, 12, 17, 2, 0, 5, 22, 4), createShadow(0, 7, 8, -4, 0, 13, 19, 2, 0, 5, 24, 4), createShadow(0, 7, 9, -4, 0, 14, 21, 2, 0, 5, 26, 4), createShadow(0, 8, 9, -5, 0, 15, 22, 2, 0, 6, 28, 5), createShadow(0, 8, 10, -5, 0, 16, 24, 2, 0, 6, 30, 5), createShadow(0, 8, 11, -5, 0, 17, 26, 2, 0, 6, 32, 5), createShadow(0, 9, 11, -5, 0, 18, 28, 2, 0, 7, 34, 6), createShadow(0, 9, 12, -6, 0, 19, 29, 2, 0, 7, 36, 6), createShadow(0, 10, 13, -6, 0, 20, 31, 3, 0, 8, 38, 7), createShadow(0, 10, 13, -6, 0, 21, 33, 3, 0, 8, 40, 7), createShadow(0, 10, 14, -6, 0, 22, 35, 3, 0, 8, 42, 7), createShadow(0, 11, 14, -7, 0, 23, 36, 3, 0, 9, 44, 8), createShadow(0, 11, 15, -7, 0, 24, 38, 3, 0, 9, 46, 8) ];
    const styles_shape = {
      borderRadius: 4
    };
    function _arrayLikeToArray(arr, len) {
      (null == len || len > arr.length) && (len = arr.length);
      for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i];
      return arr2;
    }
    function _unsupportedIterableToArray(o, minLen) {
      if (o) {
        if ("string" == typeof o) return _arrayLikeToArray(o, minLen);
        var n = Object.prototype.toString.call(o).slice(8, -1);
        return "Object" === n && o.constructor && (n = o.constructor.name), "Map" === n || "Set" === n ? Array.from(o) : "Arguments" === n || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n) ? _arrayLikeToArray(o, minLen) : void 0;
      }
    }
    function _slicedToArray(arr, i) {
      return function(arr) {
        if (Array.isArray(arr)) return arr;
      }(arr) || function(arr, i) {
        var _i = null == arr ? null : "undefined" != typeof Symbol && arr[Symbol.iterator] || arr["@@iterator"];
        if (null != _i) {
          var _s, _e, _arr = [], _n = !0, _d = !1;
          try {
            for (_i = _i.call(arr); !(_n = (_s = _i.next()).done) && (_arr.push(_s.value), !i || _arr.length !== i); _n = !0) ;
          } catch (err) {
            _d = !0, _e = err;
          } finally {
            try {
              _n || null == _i.return || _i.return();
            } finally {
              if (_d) throw _e;
            }
          }
          return _arr;
        }
      }(arr, i) || _unsupportedIterableToArray(arr, i) || function() {
        throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
      }();
    }
    __webpack_require__(9862);
    var values = {
      xs: 0,
      sm: 600,
      md: 960,
      lg: 1280,
      xl: 1920
    }, defaultBreakpoints = {
      keys: [ "xs", "sm", "md", "lg", "xl" ],
      up: function(key) {
        return "@media (min-width:".concat(values[key], "px)");
      }
    };
    const esm_merge = function(acc, item) {
      return item ? deepmerge(acc, item, {
        clone: !1
      }) : acc;
    };
    var properties = {
      m: "margin",
      p: "padding"
    }, directions = {
      t: "Top",
      r: "Right",
      b: "Bottom",
      l: "Left",
      x: [ "Left", "Right" ],
      y: [ "Top", "Bottom" ]
    }, aliases = {
      marginX: "mx",
      marginY: "my",
      paddingX: "px",
      paddingY: "py"
    }, getCssProperties = function(fn) {
      var cache = {};
      return function(arg) {
        return void 0 === cache[arg] && (cache[arg] = fn(arg)), cache[arg];
      };
    }((function(prop) {
      if (prop.length > 2) {
        if (!aliases[prop]) return [ prop ];
        prop = aliases[prop];
      }
      var _prop$split2 = _slicedToArray(prop.split(""), 2), a = _prop$split2[0], b = _prop$split2[1], property = properties[a], direction = directions[b] || "";
      return Array.isArray(direction) ? direction.map((function(dir) {
        return property + dir;
      })) : [ property + direction ];
    })), spacingKeys = [ "m", "mt", "mr", "mb", "ml", "mx", "my", "p", "pt", "pr", "pb", "pl", "px", "py", "margin", "marginTop", "marginRight", "marginBottom", "marginLeft", "marginX", "marginY", "padding", "paddingTop", "paddingRight", "paddingBottom", "paddingLeft", "paddingX", "paddingY" ];
    function createUnarySpacing(theme) {
      var themeSpacing = theme.spacing || 8;
      return "number" == typeof themeSpacing ? function(abs) {
        return themeSpacing * abs;
      } : Array.isArray(themeSpacing) ? function(abs) {
        return themeSpacing[abs];
      } : "function" == typeof themeSpacing ? themeSpacing : function() {};
    }
    function getStyleFromPropValue(cssProperties, transformer) {
      return function(propValue) {
        return cssProperties.reduce((function(acc, cssProperty) {
          return acc[cssProperty] = function(transformer, propValue) {
            if ("string" == typeof propValue || null == propValue) return propValue;
            var transformed = transformer(Math.abs(propValue));
            return propValue >= 0 ? transformed : "number" == typeof transformed ? -transformed : "-".concat(transformed);
          }(transformer, propValue), acc;
        }), {});
      };
    }
    function spacing(props) {
      var transformer = createUnarySpacing(props.theme);
      return Object.keys(props).map((function(prop) {
        if (-1 === spacingKeys.indexOf(prop)) return null;
        var styleFromPropValue = getStyleFromPropValue(getCssProperties(prop), transformer), propValue = props[prop];
        return function(props, propValue, styleFromPropValue) {
          if (Array.isArray(propValue)) {
            var themeBreakpoints = props.theme.breakpoints || defaultBreakpoints;
            return propValue.reduce((function(acc, item, index) {
              return acc[themeBreakpoints.up(themeBreakpoints.keys[index])] = styleFromPropValue(propValue[index]), 
              acc;
            }), {});
          }
          if ("object" === _typeof(propValue)) {
            var _themeBreakpoints = props.theme.breakpoints || defaultBreakpoints;
            return Object.keys(propValue).reduce((function(acc, breakpoint) {
              return acc[_themeBreakpoints.up(breakpoint)] = styleFromPropValue(propValue[breakpoint]), 
              acc;
            }), {});
          }
          return styleFromPropValue(propValue);
        }(props, propValue, styleFromPropValue);
      })).reduce(esm_merge, {});
    }
    spacing.propTypes = {}, spacing.filterProps = spacingKeys;
    var easing = {
      easeInOut: "cubic-bezier(0.4, 0, 0.2, 1)",
      easeOut: "cubic-bezier(0.0, 0, 0.2, 1)",
      easeIn: "cubic-bezier(0.4, 0, 1, 1)",
      sharp: "cubic-bezier(0.4, 0, 0.6, 1)"
    }, duration = {
      shortest: 150,
      shorter: 200,
      short: 250,
      standard: 300,
      complex: 375,
      enteringScreen: 225,
      leavingScreen: 195
    };
    function formatMs(milliseconds) {
      return "".concat(Math.round(milliseconds), "ms");
    }
    const transitions = {
      easing,
      duration,
      create: function() {
        var props = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : [ "all" ], options = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {}, _options$duration = options.duration, durationOption = void 0 === _options$duration ? duration.standard : _options$duration, _options$easing = options.easing, easingOption = void 0 === _options$easing ? easing.easeInOut : _options$easing, _options$delay = options.delay, delay = void 0 === _options$delay ? 0 : _options$delay;
        objectWithoutProperties_objectWithoutProperties(options, [ "duration", "easing", "delay" ]);
        return (Array.isArray(props) ? props : [ props ]).map((function(animatedProp) {
          return "".concat(animatedProp, " ").concat("string" == typeof durationOption ? durationOption : formatMs(durationOption), " ").concat(easingOption, " ").concat("string" == typeof delay ? delay : formatMs(delay));
        })).join(",");
      },
      getAutoHeightDuration: function(height) {
        if (!height) return 0;
        var constant = height / 36;
        return Math.round(10 * (4 + 15 * Math.pow(constant, .25) + constant / 5));
      }
    };
    const styles_zIndex = {
      mobileStepper: 1e3,
      speedDial: 1050,
      appBar: 1100,
      drawer: 1200,
      modal: 1300,
      snackbar: 1400,
      tooltip: 1500
    };
    function createTheme() {
      for (var options = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {}, _options$breakpoints = options.breakpoints, breakpointsInput = void 0 === _options$breakpoints ? {} : _options$breakpoints, _options$mixins = options.mixins, mixinsInput = void 0 === _options$mixins ? {} : _options$mixins, _options$palette = options.palette, paletteInput = void 0 === _options$palette ? {} : _options$palette, spacingInput = options.spacing, _options$typography = options.typography, typographyInput = void 0 === _options$typography ? {} : _options$typography, other = objectWithoutProperties_objectWithoutProperties(options, [ "breakpoints", "mixins", "palette", "spacing", "typography" ]), palette = createPalette(paletteInput), breakpoints = function(breakpoints) {
        var _breakpoints$values = breakpoints.values, values = void 0 === _breakpoints$values ? {
          xs: 0,
          sm: 600,
          md: 960,
          lg: 1280,
          xl: 1920
        } : _breakpoints$values, _breakpoints$unit = breakpoints.unit, unit = void 0 === _breakpoints$unit ? "px" : _breakpoints$unit, _breakpoints$step = breakpoints.step, step = void 0 === _breakpoints$step ? 5 : _breakpoints$step, other = objectWithoutProperties_objectWithoutProperties(breakpoints, [ "values", "unit", "step" ]);
        function up(key) {
          var value = "number" == typeof values[key] ? values[key] : key;
          return "@media (min-width:".concat(value).concat(unit, ")");
        }
        function between(start, end) {
          var endIndex = keys.indexOf(end);
          return endIndex === keys.length - 1 ? up(start) : "@media (min-width:".concat("number" == typeof values[start] ? values[start] : start).concat(unit, ") and ") + "(max-width:".concat((-1 !== endIndex && "number" == typeof values[keys[endIndex + 1]] ? values[keys[endIndex + 1]] : end) - step / 100).concat(unit, ")");
        }
        return extends_extends({
          keys,
          values,
          up,
          down: function(key) {
            var endIndex = keys.indexOf(key) + 1, upperbound = values[keys[endIndex]];
            return endIndex === keys.length ? up("xs") : "@media (max-width:".concat(("number" == typeof upperbound && endIndex > 0 ? upperbound : key) - step / 100).concat(unit, ")");
          },
          between,
          only: function(key) {
            return between(key, key);
          },
          width: function(key) {
            return values[key];
          }
        }, other);
      }(breakpointsInput), spacing = function() {
        var spacingInput = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : 8;
        if (spacingInput.mui) return spacingInput;
        var transform = createUnarySpacing({
          spacing: spacingInput
        }), spacing = function() {
          for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) args[_key] = arguments[_key];
          return 0 === args.length ? transform(1) : 1 === args.length ? transform(args[0]) : args.map((function(argument) {
            if ("string" == typeof argument) return argument;
            var output = transform(argument);
            return "number" == typeof output ? "".concat(output, "px") : output;
          })).join(" ");
        };
        return Object.defineProperty(spacing, "unit", {
          get: function() {
            return spacingInput;
          }
        }), spacing.mui = !0, spacing;
      }(spacingInput), muiTheme = deepmerge({
        breakpoints,
        direction: "ltr",
        mixins: createMixins(breakpoints, spacing, mixinsInput),
        overrides: {},
        palette,
        props: {},
        shadows: styles_shadows,
        typography: createTypography(palette, typographyInput),
        spacing,
        shape: styles_shape,
        transitions,
        zIndex: styles_zIndex
      }, other), _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) args[_key - 1] = arguments[_key];
      return muiTheme = args.reduce((function(acc, argument) {
        return deepmerge(acc, argument);
      }), muiTheme);
    }
    const styles_createTheme = createTheme;
    const useTheme_ThemeContext = react.createContext(null);
    function useTheme() {
      return react.useContext(useTheme_ThemeContext);
    }
    const nested = "function" == typeof Symbol && Symbol.for ? Symbol.for("mui.nested") : "__THEME_NESTED__";
    const ThemeProvider_ThemeProvider = function(props) {
      var children = props.children, localTheme = props.theme, outerTheme = useTheme(), theme = react.useMemo((function() {
        var output = null === outerTheme ? localTheme : function(outerTheme, localTheme) {
          return "function" == typeof localTheme ? localTheme(outerTheme) : extends_extends({}, outerTheme, localTheme);
        }(outerTheme, localTheme);
        return null != output && (output[nested] = null !== outerTheme), output;
      }), [ localTheme, outerTheme ]);
      return react.createElement(useTheme_ThemeContext.Provider, {
        value: theme
      }, children);
    }, theme = function() {
      return createTheme.apply(void 0, arguments);
    }({
      palette: {
        primary: {
          main: "rgb(27, 116, 228)"
        },
        secondary: {
          main: "#8b9dc3"
        }
      },
      typography: {
        fontSize: "14px"
      },
      props: {
        MuiButtonBase: {
          disableRipple: !0
        },
        MuiTabs: {
          orientation: "vertical"
        }
      },
      overrides: {
        MuiTab: {
          root: {
            textTransform: "none",
            "&$selected": {
              borderRadius: "4px",
              borderLeft: "5px solid rgb(27, 116, 228)",
              border: "1px solid #E2E8F0"
            }
          }
        },
        MuiTabs: {
          indicator: {
            display: "none"
          }
        }
      }
    }), MaterialTheme_react = props => {
      const {children} = props;
      return react.createElement(ThemeProvider_ThemeProvider, {
        theme
      }, children);
    }, observers = {}, DOMEnhancer_append = ({selector, dedupeKey, htmlWrapper, component, url, jsClass, insertBefore}) => {
      let newChild = htmlWrapper;
      null == newChild && (newChild = document.createElement("div"));
      const container = document.querySelector(selector);
      if (null == container) return FalcoLogger.logRaw({
        js_class: jsClass,
        scope: "dom",
        action: "append",
        dom_selector: selector,
        message: "Wrapping container does not exist",
        type: "ERROR",
        url
      }), !1;
      const dedupeClassname = `facehub-${dedupeKey.replace(" ", "-")}`;
      return null == container.querySelector(`.${dedupeClassname}`) && (-1 === newChild.className.indexOf(dedupeClassname) && (newChild.className += ` ${dedupeClassname}`), 
      null != insertBefore ? container.insertBefore(newChild, insertBefore) : container.appendChild(newChild), 
      react_dom.createRoot(newChild).render(react.createElement(react_relay.RelayEnvironmentProvider, {
        environment: RelayEnvironment
      }, react.createElement(MaterialTheme_react, null, component))), FalcoLogger.logRaw({
        js_class: jsClass,
        scope: "dom",
        action: "append",
        dom_selector: selector,
        url
      }), !0);
    }, DOMEnhancer_watch = ({selector, url, jsClass, onChange}) => {
      if (null != observers[selector]) return;
      const node = document.querySelector(selector), observerOptions = {
        childList: !0,
        subtree: !0
      };
      if (null == node) return void FalcoLogger.logRaw({
        js_class: jsClass,
        scope: "dom",
        action: "wait",
        dom_selector: selector,
        message: "Could not find target element while watching",
        type: "ERROR",
        url
      });
      observers[selector] = new MutationObserver(onChange), observers[selector].disconnect(), 
      onChange(), observers[selector].observe(node, observerOptions);
    }, DOMEnhancer_clearWatches = () => {
      for (const key in observers) observers[key].disconnect(), delete observers[key];
    }, DOMEnhancer_remove = ({selector, url, jsClass}) => {
      const selected = Array.from(document.querySelectorAll(selector));
      selected.map((element => element.style.display = "none"));
      const removedAnyElements = selected.length > 0;
      return removedAnyElements ? FalcoLogger.logRaw({
        js_class: jsClass,
        scope: "dom",
        action: "remove",
        dom_selector: selector,
        url
      }) : FalcoLogger.logRaw({
        js_class: jsClass,
        scope: "dom",
        action: "remove",
        dom_selector: selector,
        message: "Could not find any elements to remove",
        url
      }), removedAnyElements;
    }, features_SettingsPageComponent = ({src}) => {
      const [isLoading, setIsLoading] = (0, react.useState)(!0);
      return react.createElement(react.Fragment, null, isLoading && react.createElement("div", null, " Loading ... "), react.createElement("iframe", {
        src,
        width: "100%",
        height: "600px",
        padding: "10px",
        frameBorder: "0",
        onLoad: () => setIsLoading(!1)
      }));
    };
    var _NavHeader_data;
    const META_LOGO_PATH = "M54.8,0H3.2A3.2,3.2,0,0,0,0,3.2V54.8A3.2,3.2,0,0,0,3.2,58H31V35.57H23.45V26.79H31V20.33c0-7.49,4.58-11.57,11.26-11.57A64.2,64.2,0,0,1,49,9.1v7.83h-4.6c-3.64,0-4.35,1.72-4.35,4.26v5.59h8.7l-1.13,8.78H40V58H54.8A3.2,3.2,0,0,0,58,54.8V3.2A3.2,3.2,0,0,0,54.8,0Z";
    function NewNavItem({withNavigation, title, navigationUrl, url, src}) {
      const [isSelectedNavBarItem, setIsSelectedNavBarItem] = (0, react.useState)(!1);
      function showFBSettingsPage() {
        var _document$body;
        DOMEnhancer_remove({
          jsClass: "NewNavItem",
          url,
          selector: "#repo-content-pjax-container > div.container-xl"
        });
        const wrapper = document.createElement("div");
        wrapper.className = "clearfix new-discussion-timeline js-check-all-container container-xl px-3 px-md-4 px-lg-5 mt-4", 
        DOMEnhancer_append({
          jsClass: "NewNavItem",
          url,
          selector: "#repo-content-pjax-container",
          htmlWrapper: wrapper,
          component: react.createElement(features_SettingsPageComponent, {
            src
          }),
          dedupeKey: "inject-content"
        });
        const currentlyActive = document.querySelector(".UnderlineNav-item[aria-current]:not([aria-current=false])");
        null != currentlyActive && (currentlyActive.classList.remove("selected"), currentlyActive.ariaCurrent = "false"), 
        null === (_document$body = document.body) || void 0 === _document$body || _document$body.addEventListener("click", (event => {
          let anchor = event.target.closest("a");
          null != anchor && anchor.setAttribute("data-skip-pjax", "true");
        })), setIsSelectedNavBarItem(!0);
      }
      (0, react.useEffect)((() => {
        "#meta-facehub-settings" === navigationUrl && "#meta-facehub-settings" === document.location.hash && showFBSettingsPage();
      }), []);
      const classNames = [ "js-selected-navigation-item", "UnderlineNav-item", "hx_underlinenav-item", "no-wrap", "js-responsive-underlinenav-item" ];
      return isSelectedNavBarItem && classNames.push("selected"), react.createElement("a", {
        className: classNames.join(" "),
        rel: "noreferrer",
        href: navigationUrl,
        target: withNavigation ? "_blank" : null,
        "aria-current": isSelectedNavBarItem,
        onClick: withNavigation ? null : showFBSettingsPage
      }, react.createElement("svg", {
        className: [ "octicon", "UnderlineNav-octicon" ].join(" "),
        viewBox: "0 0 58 58",
        height: "16",
        width: "16"
      }, react.createElement("path", {
        d: META_LOGO_PATH
      })), react.createElement("span", null, title));
    }
    const insertHeader = props => {
      const listItem = document.createElement("li");
      listItem.classList.add("d-flex"), DOMEnhancer_append({
        jsClass: "NavHeader",
        url: props.url,
        selector: ".UnderlineNav-body",
        dedupeKey: `internal-nav-link-${props.title}`,
        htmlWrapper: listItem,
        component: react.createElement(NewNavItem, props)
      });
    };
    function NoticeHeader({notice}) {
      notice.message;
      return react.createElement("x-banner", {
        "data-dismiss-scheme": "none",
        "data-view-component": "true",
        "data-catalyst": ""
      }, react.createElement("section", {
        id: "notices",
        "aria-label": "Warning",
        "data-view-component": "true",
        className: "js-notice Banner flash Banner--warning flash-warn Banner--full flash-full"
      }, react.createElement("div", {
        "data-view-component": "true",
        className: "Banner-message"
      }, react.createElement("p", {
        className: "Banner-title",
        "data-target": "x-banner.titleText"
      }, notice.message, null != notice.href && react.createElement(react.Fragment, null, " ", react.createElement("a", {
        href: notice.href,
        target: "_blank"
      }, "Learn more"))))));
    }
    const NavHeader_handle = (url, dataKey) => {
      const data = (0, react_relay.readInlineData)((void 0 !== _NavHeader_data || (_NavHeader_data = __webpack_require__(1135)).hash && "785b807d9ec2465e1b95b7bf551aba62" !== _NavHeader_data.hash && console.error("The definition of 'NavHeader_data' appears to have changed. Run `relay-compiler` to update the generated files to receive the expected data."), 
      _NavHeader_data), dataKey), repo = null == data ? void 0 : data.repo, contributor = null == data ? void 0 : data.contributorIndividual, team = null == data ? void 0 : data.team;
      if (null != repo) {
        var _repo$url, _repo$settingsPageIfr2, _repo$settingsPageIfr;
        if (!0 === repo.isManagedByMeta) insertHeader({
          withNavigation: !1,
          title: "Meta Settings",
          navigationUrl: "#meta-facehub-settings",
          url,
          src: null !== (_repo$settingsPageIfr = null == repo ? void 0 : repo.settingsPageIframeUri) && void 0 !== _repo$settingsPageIfr ? _repo$settingsPageIfr : ""
        });
        insertHeader({
          withNavigation: !0,
          title: "Meta Internal",
          navigationUrl: null !== (_repo$url = null == repo ? void 0 : repo.url) && void 0 !== _repo$url ? _repo$url : "",
          url,
          src: null !== (_repo$settingsPageIfr2 = null == repo ? void 0 : repo.settingsPageIframeUri) && void 0 !== _repo$settingsPageIfr2 ? _repo$settingsPageIfr2 : ""
        }), null != repo.githubUiNotices && repo.githubUiNotices.map((notice => function(url, notice) {
          var _notice$startTimestam;
          DOMEnhancer_append({
            jsClass: "NavHeader",
            url,
            selector: "#repository-container-header",
            component: react.createElement(NoticeHeader, {
              notice
            }),
            dedupeKey: `notices-${null !== (_notice$startTimestam = notice.startTimestamp) && void 0 !== _notice$startTimestam ? _notice$startTimestam : "no-start"}`
          });
        }(url, notice)));
      }
      var _contributor$internal, _team$url;
      null != contributor && insertHeader({
        withNavigation: !0,
        title: "Meta Internal",
        navigationUrl: null !== (_contributor$internal = contributor.internalUrl) && void 0 !== _contributor$internal ? _contributor$internal : "",
        url,
        src: ""
      });
      null != team && insertHeader({
        withNavigation: !0,
        title: "Meta Internal",
        navigationUrl: null !== (_team$url = null == team ? void 0 : team.url) && void 0 !== _team$url ? _team$url : "",
        url,
        src: ""
      });
    };
    class Environment {
      static isRefinedGitHubRunning() {
        const htmlElement = document.documentElement;
        return null != htmlElement && htmlElement.classList.contains("refined-github");
      }
    }
    var _PullRequestQuickAccept_payload, _PullRequestQuickAcceptDiffMutation, _PullRequestQuickAccept_data;
    const CHECKBOX_CLASSNAME = "facehub-quick-accept-checkbox";
    function PullRequestQuickAccept(props) {
      var _payload$repo$isDiffT, _payload$repo, _payload$pr, _payload$pr3, _payload$pr4;
      const isRefinedGitHubRunning = Environment.isRefinedGitHubRunning(), [isDisabled, setIsDisabled] = (0, 
      react.useState)(!0), [isChecked, setIsChecked] = (0, react.useState)(!1), payload = (0, 
      react_relay.useFragment)((void 0 !== _PullRequestQuickAccept_payload || (_PullRequestQuickAccept_payload = __webpack_require__(1997)).hash && "4f15840a52b4c59ad7091a65dfe6a4de" !== _PullRequestQuickAccept_payload.hash && console.error("The definition of 'PullRequestQuickAccept_payload' appears to have changed. Run `relay-compiler` to update the generated files to receive the expected data."), 
      _PullRequestQuickAccept_payload), props.payload), isDiffTrainSetup = null !== (_payload$repo$isDiffT = null === (_payload$repo = payload.repo) || void 0 === _payload$repo ? void 0 : _payload$repo.isDiffTrainSetup) && void 0 !== _payload$repo$isDiffT && _payload$repo$isDiffT, hasInternalOnlyChanges = null != (null === (_payload$pr = payload.pr) || void 0 === _payload$pr || null === (_payload$pr = _payload$pr.checkRuns) || void 0 === _payload$pr ? void 0 : _payload$pr.find((checkRun => "Meta Internal-Only Changes Check" === checkRun.name && "NEUTRAL" === checkRun.conclusion))), [commitMutation, isInFlight] = (0, 
      react_relay.useMutation)((void 0 !== _PullRequestQuickAcceptDiffMutation || (_PullRequestQuickAcceptDiffMutation = __webpack_require__(8913)).hash && "817fe8690dd1aad47bdfdfbb211f35d9" !== _PullRequestQuickAcceptDiffMutation.hash && console.error("The definition of 'PullRequestQuickAcceptDiffMutation' appears to have changed. Run `relay-compiler` to update the generated files to receive the expected data."), 
      _PullRequestQuickAcceptDiffMutation));
      return (0, react.useEffect)((() => {
        if (ExtensionStorage.get("facehub-quick-accept-is-checked").then((checked => {
          null != checked && setIsChecked(checked);
        })), !isRefinedGitHubRunning) {
          const approveNode = document.querySelector('input[name="pull_request_review[event]"][value="approve"]'), commentNode = document.querySelector('input[name="pull_request_review[event]"][value="comment"]'), rejectNode = document.querySelector('input[name="pull_request_review[event]"][value="reject"]');
          null !== rejectNode ? null == rejectNode || rejectNode.addEventListener("change", (() => setIsDisabled(!0))) : FalcoLogger.logError("PullRequestQuickAccept", "event_bind", "rejectNode", props.url, new Error("Failed to find rejectNode!")), 
          null !== approveNode ? null == approveNode || approveNode.addEventListener("change", (() => setIsDisabled(!1))) : FalcoLogger.logError("PullRequestQuickAccept", "event_bind", "approveNode", props.url, new Error("Failed to find approveNode!")), 
          null !== commentNode ? null == commentNode || commentNode.addEventListener("change", (() => setIsDisabled(!0))) : FalcoLogger.logError("PullRequestQuickAccept", "event_bind", "commentNode", props.url, new Error("Failed to find commentNode!"));
        }
      }), [ props.url, isRefinedGitHubRunning ]), (0, react.useEffect)((() => {
        const eventHandler = event => {
          let isEffectivelyDisabled = isDisabled;
          if (isRefinedGitHubRunning) {
            const submitterElement = event.submitter;
            "approve" === (null == submitterElement ? void 0 : submitterElement.value) && (isEffectivelyDisabled = !1);
          }
          if (!isEffectivelyDisabled && isChecked && !isInFlight) {
            var _payload$pr2;
            const element = document.getElementById("pull_request_review_body");
            let message = null;
            element instanceof HTMLTextAreaElement && (message = element.value), commitMutation({
              variables: {
                input: {
                  pull_request_id: nullthrows(null === (_payload$pr2 = payload.pr) || void 0 === _payload$pr2 ? void 0 : _payload$pr2.id),
                  message
                }
              }
            });
          }
          ExtensionStorage.set("facehub-quick-accept-is-checked", isChecked);
        };
        return props.form.addEventListener("submit", eventHandler, !1), () => props.form.removeEventListener("submit", eventHandler);
      }), [ payload, isDisabled, isChecked, isInFlight, isRefinedGitHubRunning ]), react.createElement("span", {
        className: [ "mx-3", CHECKBOX_CLASSNAME ].join(" ")
      }, react.createElement("label", {
        className: isDisabled ? "color-text-tertiary" : null
      }, react.createElement("input", {
        type: "checkbox",
        disabled: isDisabled && !isRefinedGitHubRunning,
        checked: isChecked,
        onChange: e => setIsChecked(e.target.checked),
        style: {
          marginRight: "5px"
        }
      }), "Also accept", " ", react.createElement("a", {
        href: null === (_payload$pr3 = payload.pr) || void 0 === _payload$pr3 || null === (_payload$pr3 = _payload$pr3.phabricatorDiff) || void 0 === _payload$pr3 ? void 0 : _payload$pr3.url,
        target: "_blank",
        rel: "noreferrer"
      }, "D", null === (_payload$pr4 = payload.pr) || void 0 === _payload$pr4 || null === (_payload$pr4 = _payload$pr4.phabricatorDiff) || void 0 === _payload$pr4 ? void 0 : _payload$pr4.number), " ", "in Phabricator", isDiffTrainSetup && hasInternalOnlyChanges ? react.createElement("p", null, "(this diff has non-OSS changes that you should review in Phabricator)") : null));
    }
    const features_PullRequestQuickAccept_handle = (url, dataKey) => {
      var _data$pr;
      const data = (0, react_relay.readInlineData)((void 0 !== _PullRequestQuickAccept_data || (_PullRequestQuickAccept_data = __webpack_require__(5810)).hash && "49bf66d0cce26c5be8c784e866a311b1" !== _PullRequestQuickAccept_data.hash && console.error("The definition of 'PullRequestQuickAccept_data' appears to have changed. Run `relay-compiler` to update the generated files to receive the expected data."), 
      _PullRequestQuickAccept_data), dataKey);
      if (null == (null == data || null === (_data$pr = data.pr) || void 0 === _data$pr ? void 0 : _data$pr.phabricatorDiff)) return;
      const formSelector = "#review-changes-modal form", form = document.querySelector(formSelector);
      if (!(form instanceof HTMLFormElement)) return;
      const selector = Environment.isRefinedGitHubRunning() ? formSelector : `${formSelector} div.FormControl-radio-wrap:nth-of-type(2) .FormControl-radio-labelWrap`;
      DOMEnhancer_append({
        jsClass: "PullRequestQuickAccept",
        url,
        selector,
        dedupeKey: "quick-accept-checkbox",
        htmlWrapper: document.createElement("span"),
        component: react.createElement(PullRequestQuickAccept, {
          form,
          payload: data,
          url
        })
      });
    };
    function toVal(mix) {
      var k, y, str = "";
      if ("string" == typeof mix || "number" == typeof mix) str += mix; else if ("object" == typeof mix) if (Array.isArray(mix)) for (k = 0; k < mix.length; k++) mix[k] && (y = toVal(mix[k])) && (str && (str += " "), 
      str += y); else for (k in mix) mix[k] && (str && (str += " "), str += k);
      return str;
    }
    function clsx_m() {
      for (var tmp, x, i = 0, str = ""; i < arguments.length; ) (tmp = arguments[i++]) && (x = toVal(tmp)) && (str && (str += " "), 
      str += x);
      return str;
    }
    var hoist_non_react_statics_cjs = __webpack_require__(2663), hoist_non_react_statics_cjs_default = __webpack_require__.n(hoist_non_react_statics_cjs), module_typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(obj) {
      return typeof obj;
    } : function(obj) {
      return obj && "function" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj;
    };
    const dist_module = "object" === ("undefined" == typeof window ? "undefined" : module_typeof(window)) && "object" === ("undefined" == typeof document ? "undefined" : module_typeof(document)) && 9 === document.nodeType;
    function _defineProperties(target, props) {
      for (var i = 0; i < props.length; i++) {
        var descriptor = props[i];
        descriptor.enumerable = descriptor.enumerable || !1, descriptor.configurable = !0, 
        "value" in descriptor && (descriptor.writable = !0), Object.defineProperty(target, descriptor.key, descriptor);
      }
    }
    function createClass_createClass(Constructor, protoProps, staticProps) {
      return protoProps && _defineProperties(Constructor.prototype, protoProps), staticProps && _defineProperties(Constructor, staticProps), 
      Constructor;
    }
    function _setPrototypeOf(o, p) {
      return _setPrototypeOf = Object.setPrototypeOf || function(o, p) {
        return o.__proto__ = p, o;
      }, _setPrototypeOf(o, p);
    }
    function _inheritsLoose(subClass, superClass) {
      subClass.prototype = Object.create(superClass.prototype), subClass.prototype.constructor = subClass, 
      _setPrototypeOf(subClass, superClass);
    }
    function _assertThisInitialized(self) {
      if (void 0 === self) throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
      return self;
    }
    var plainObjectConstrurctor = {}.constructor;
    function cloneStyle(style) {
      if (null == style || "object" != typeof style) return style;
      if (Array.isArray(style)) return style.map(cloneStyle);
      if (style.constructor !== plainObjectConstrurctor) return style;
      var newStyle = {};
      for (var name in style) newStyle[name] = cloneStyle(style[name]);
      return newStyle;
    }
    function createRule(name, decl, options) {
      void 0 === name && (name = "unnamed");
      var jss = options.jss, declCopy = cloneStyle(decl), rule = jss.plugins.onCreateRule(name, declCopy, options);
      return rule || (name[0], null);
    }
    var join = function(value, by) {
      for (var result = "", i = 0; i < value.length && "!important" !== value[i]; i++) result && (result += by), 
      result += value[i];
      return result;
    }, toCssValue = function(value, ignoreImportant) {
      if (void 0 === ignoreImportant && (ignoreImportant = !1), !Array.isArray(value)) return value;
      var cssValue = "";
      if (Array.isArray(value[0])) for (var i = 0; i < value.length && "!important" !== value[i]; i++) cssValue && (cssValue += ", "), 
      cssValue += join(value[i], " "); else cssValue = join(value, ", ");
      return ignoreImportant || "!important" !== value[value.length - 1] || (cssValue += " !important"), 
      cssValue;
    };
    function indentStr(str, indent) {
      for (var result = "", index = 0; index < indent; index++) result += "  ";
      return result + str;
    }
    function toCss(selector, style, options) {
      void 0 === options && (options = {});
      var result = "";
      if (!style) return result;
      var _options$indent = options.indent, indent = void 0 === _options$indent ? 0 : _options$indent, fallbacks = style.fallbacks;
      if (selector && indent++, fallbacks) if (Array.isArray(fallbacks)) for (var index = 0; index < fallbacks.length; index++) {
        var fallback = fallbacks[index];
        for (var prop in fallback) {
          var value = fallback[prop];
          null != value && (result && (result += "\n"), result += indentStr(prop + ": " + toCssValue(value) + ";", indent));
        }
      } else for (var _prop in fallbacks) {
        var _value = fallbacks[_prop];
        null != _value && (result && (result += "\n"), result += indentStr(_prop + ": " + toCssValue(_value) + ";", indent));
      }
      for (var _prop2 in style) {
        var _value2 = style[_prop2];
        null != _value2 && "fallbacks" !== _prop2 && (result && (result += "\n"), result += indentStr(_prop2 + ": " + toCssValue(_value2) + ";", indent));
      }
      return (result || options.allowEmpty) && selector ? (result && (result = "\n" + result + "\n"), 
      indentStr(selector + " {" + result, --indent) + indentStr("}", indent)) : result;
    }
    var escapeRegex = /([[\].#*$><+~=|^:(),"'`\s])/g, nativeEscape = "undefined" != typeof CSS && CSS.escape, jss_esm_escape = function(str) {
      return nativeEscape ? nativeEscape(str) : str.replace(escapeRegex, "\\$1");
    }, BaseStyleRule = function() {
      function BaseStyleRule(key, style, options) {
        this.type = "style", this.key = void 0, this.isProcessed = !1, this.style = void 0, 
        this.renderer = void 0, this.renderable = void 0, this.options = void 0;
        var sheet = options.sheet, Renderer = options.Renderer;
        this.key = key, this.options = options, this.style = style, sheet ? this.renderer = sheet.renderer : Renderer && (this.renderer = new Renderer);
      }
      return BaseStyleRule.prototype.prop = function(name, value, options) {
        if (void 0 === value) return this.style[name];
        var force = !!options && options.force;
        if (!force && this.style[name] === value) return this;
        var newValue = value;
        options && !1 === options.process || (newValue = this.options.jss.plugins.onChangeValue(value, name, this));
        var isEmpty = null == newValue || !1 === newValue, isDefined = name in this.style;
        if (isEmpty && !isDefined && !force) return this;
        var remove = isEmpty && isDefined;
        if (remove ? delete this.style[name] : this.style[name] = newValue, this.renderable && this.renderer) return remove ? this.renderer.removeProperty(this.renderable, name) : this.renderer.setProperty(this.renderable, name, newValue), 
        this;
        var sheet = this.options.sheet;
        return sheet && sheet.attached, this;
      }, BaseStyleRule;
    }(), StyleRule = function(_BaseStyleRule) {
      function StyleRule(key, style, options) {
        var _this;
        (_this = _BaseStyleRule.call(this, key, style, options) || this).selectorText = void 0, 
        _this.id = void 0, _this.renderable = void 0;
        var selector = options.selector, scoped = options.scoped, sheet = options.sheet, generateId = options.generateId;
        return selector ? _this.selectorText = selector : !1 !== scoped && (_this.id = generateId(_assertThisInitialized(_assertThisInitialized(_this)), sheet), 
        _this.selectorText = "." + jss_esm_escape(_this.id)), _this;
      }
      _inheritsLoose(StyleRule, _BaseStyleRule);
      var _proto2 = StyleRule.prototype;
      return _proto2.applyTo = function(renderable) {
        var renderer = this.renderer;
        if (renderer) {
          var json = this.toJSON();
          for (var prop in json) renderer.setProperty(renderable, prop, json[prop]);
        }
        return this;
      }, _proto2.toJSON = function() {
        var json = {};
        for (var prop in this.style) {
          var value = this.style[prop];
          "object" != typeof value ? json[prop] = value : Array.isArray(value) && (json[prop] = toCssValue(value));
        }
        return json;
      }, _proto2.toString = function(options) {
        var sheet = this.options.sheet, opts = !!sheet && sheet.options.link ? extends_extends({}, options, {
          allowEmpty: !0
        }) : options;
        return toCss(this.selectorText, this.style, opts);
      }, createClass_createClass(StyleRule, [ {
        key: "selector",
        set: function(selector) {
          if (selector !== this.selectorText) {
            this.selectorText = selector;
            var renderer = this.renderer, renderable = this.renderable;
            if (renderable && renderer) renderer.setSelector(renderable, selector) || renderer.replaceRule(renderable, this);
          }
        },
        get: function() {
          return this.selectorText;
        }
      } ]), StyleRule;
    }(BaseStyleRule), pluginStyleRule = {
      onCreateRule: function(name, style, options) {
        return "@" === name[0] || options.parent && "keyframes" === options.parent.type ? null : new StyleRule(name, style, options);
      }
    }, defaultToStringOptions = {
      indent: 1,
      children: !0
    }, atRegExp = /@([\w-]+)/, ConditionalRule = function() {
      function ConditionalRule(key, styles, options) {
        this.type = "conditional", this.at = void 0, this.key = void 0, this.query = void 0, 
        this.rules = void 0, this.options = void 0, this.isProcessed = !1, this.renderable = void 0, 
        this.key = key;
        var atMatch = key.match(atRegExp);
        for (var name in this.at = atMatch ? atMatch[1] : "unknown", this.query = options.name || "@" + this.at, 
        this.options = options, this.rules = new RuleList(extends_extends({}, options, {
          parent: this
        })), styles) this.rules.add(name, styles[name]);
        this.rules.process();
      }
      var _proto = ConditionalRule.prototype;
      return _proto.getRule = function(name) {
        return this.rules.get(name);
      }, _proto.indexOf = function(rule) {
        return this.rules.indexOf(rule);
      }, _proto.addRule = function(name, style, options) {
        var rule = this.rules.add(name, style, options);
        return rule ? (this.options.jss.plugins.onProcessRule(rule), rule) : null;
      }, _proto.toString = function(options) {
        if (void 0 === options && (options = defaultToStringOptions), null == options.indent && (options.indent = defaultToStringOptions.indent), 
        null == options.children && (options.children = defaultToStringOptions.children), 
        !1 === options.children) return this.query + " {}";
        var children = this.rules.toString(options);
        return children ? this.query + " {\n" + children + "\n}" : "";
      }, ConditionalRule;
    }(), keyRegExp = /@media|@supports\s+/, pluginConditionalRule = {
      onCreateRule: function(key, styles, options) {
        return keyRegExp.test(key) ? new ConditionalRule(key, styles, options) : null;
      }
    }, defaultToStringOptions$1 = {
      indent: 1,
      children: !0
    }, nameRegExp = /@keyframes\s+([\w-]+)/, KeyframesRule = function() {
      function KeyframesRule(key, frames, options) {
        this.type = "keyframes", this.at = "@keyframes", this.key = void 0, this.name = void 0, 
        this.id = void 0, this.rules = void 0, this.options = void 0, this.isProcessed = !1, 
        this.renderable = void 0;
        var nameMatch = key.match(nameRegExp);
        nameMatch && nameMatch[1] ? this.name = nameMatch[1] : this.name = "noname", this.key = this.type + "-" + this.name, 
        this.options = options;
        var scoped = options.scoped, sheet = options.sheet, generateId = options.generateId;
        for (var name in this.id = !1 === scoped ? this.name : jss_esm_escape(generateId(this, sheet)), 
        this.rules = new RuleList(extends_extends({}, options, {
          parent: this
        })), frames) this.rules.add(name, frames[name], extends_extends({}, options, {
          parent: this
        }));
        this.rules.process();
      }
      return KeyframesRule.prototype.toString = function(options) {
        if (void 0 === options && (options = defaultToStringOptions$1), null == options.indent && (options.indent = defaultToStringOptions$1.indent), 
        null == options.children && (options.children = defaultToStringOptions$1.children), 
        !1 === options.children) return this.at + " " + this.id + " {}";
        var children = this.rules.toString(options);
        return children && (children = "\n" + children + "\n"), this.at + " " + this.id + " {" + children + "}";
      }, KeyframesRule;
    }(), keyRegExp$1 = /@keyframes\s+/, refRegExp = /\$([\w-]+)/g, findReferencedKeyframe = function(val, keyframes) {
      return "string" == typeof val ? val.replace(refRegExp, (function(match, name) {
        return name in keyframes ? keyframes[name] : match;
      })) : val;
    }, replaceRef = function(style, prop, keyframes) {
      var value = style[prop], refKeyframe = findReferencedKeyframe(value, keyframes);
      refKeyframe !== value && (style[prop] = refKeyframe);
    }, jss_esm_plugin = {
      onCreateRule: function(key, frames, options) {
        return "string" == typeof key && keyRegExp$1.test(key) ? new KeyframesRule(key, frames, options) : null;
      },
      onProcessStyle: function(style, rule, sheet) {
        return "style" === rule.type && sheet ? ("animation-name" in style && replaceRef(style, "animation-name", sheet.keyframes), 
        "animation" in style && replaceRef(style, "animation", sheet.keyframes), style) : style;
      },
      onChangeValue: function(val, prop, rule) {
        var sheet = rule.options.sheet;
        if (!sheet) return val;
        switch (prop) {
         case "animation":
         case "animation-name":
          return findReferencedKeyframe(val, sheet.keyframes);

         default:
          return val;
        }
      }
    }, KeyframeRule = function(_BaseStyleRule) {
      function KeyframeRule() {
        for (var _this, _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) args[_key] = arguments[_key];
        return (_this = _BaseStyleRule.call.apply(_BaseStyleRule, [ this ].concat(args)) || this).renderable = void 0, 
        _this;
      }
      return _inheritsLoose(KeyframeRule, _BaseStyleRule), KeyframeRule.prototype.toString = function(options) {
        var sheet = this.options.sheet, opts = !!sheet && sheet.options.link ? extends_extends({}, options, {
          allowEmpty: !0
        }) : options;
        return toCss(this.key, this.style, opts);
      }, KeyframeRule;
    }(BaseStyleRule), pluginKeyframeRule = {
      onCreateRule: function(key, style, options) {
        return options.parent && "keyframes" === options.parent.type ? new KeyframeRule(key, style, options) : null;
      }
    }, FontFaceRule = function() {
      function FontFaceRule(key, style, options) {
        this.type = "font-face", this.at = "@font-face", this.key = void 0, this.style = void 0, 
        this.options = void 0, this.isProcessed = !1, this.renderable = void 0, this.key = key, 
        this.style = style, this.options = options;
      }
      return FontFaceRule.prototype.toString = function(options) {
        if (Array.isArray(this.style)) {
          for (var str = "", index = 0; index < this.style.length; index++) str += toCss(this.at, this.style[index]), 
          this.style[index + 1] && (str += "\n");
          return str;
        }
        return toCss(this.at, this.style, options);
      }, FontFaceRule;
    }(), keyRegExp$2 = /@font-face/, pluginFontFaceRule = {
      onCreateRule: function(key, style, options) {
        return keyRegExp$2.test(key) ? new FontFaceRule(key, style, options) : null;
      }
    }, ViewportRule = function() {
      function ViewportRule(key, style, options) {
        this.type = "viewport", this.at = "@viewport", this.key = void 0, this.style = void 0, 
        this.options = void 0, this.isProcessed = !1, this.renderable = void 0, this.key = key, 
        this.style = style, this.options = options;
      }
      return ViewportRule.prototype.toString = function(options) {
        return toCss(this.key, this.style, options);
      }, ViewportRule;
    }(), pluginViewportRule = {
      onCreateRule: function(key, style, options) {
        return "@viewport" === key || "@-ms-viewport" === key ? new ViewportRule(key, style, options) : null;
      }
    }, SimpleRule = function() {
      function SimpleRule(key, value, options) {
        this.type = "simple", this.key = void 0, this.value = void 0, this.options = void 0, 
        this.isProcessed = !1, this.renderable = void 0, this.key = key, this.value = value, 
        this.options = options;
      }
      return SimpleRule.prototype.toString = function(options) {
        if (Array.isArray(this.value)) {
          for (var str = "", index = 0; index < this.value.length; index++) str += this.key + " " + this.value[index] + ";", 
          this.value[index + 1] && (str += "\n");
          return str;
        }
        return this.key + " " + this.value + ";";
      }, SimpleRule;
    }(), keysMap = {
      "@charset": !0,
      "@import": !0,
      "@namespace": !0
    }, pluginSimpleRule = {
      onCreateRule: function(key, value, options) {
        return key in keysMap ? new SimpleRule(key, value, options) : null;
      }
    }, plugins = [ pluginStyleRule, pluginConditionalRule, jss_esm_plugin, pluginKeyframeRule, pluginFontFaceRule, pluginViewportRule, pluginSimpleRule ], defaultUpdateOptions = {
      process: !0
    }, forceUpdateOptions = {
      force: !0,
      process: !0
    }, RuleList = function() {
      function RuleList(options) {
        this.map = {}, this.raw = {}, this.index = [], this.counter = 0, this.options = void 0, 
        this.classes = void 0, this.keyframes = void 0, this.options = options, this.classes = options.classes, 
        this.keyframes = options.keyframes;
      }
      var _proto = RuleList.prototype;
      return _proto.add = function(name, decl, ruleOptions) {
        var _this$options = this.options, parent = _this$options.parent, sheet = _this$options.sheet, jss = _this$options.jss, Renderer = _this$options.Renderer, generateId = _this$options.generateId, scoped = _this$options.scoped, options = extends_extends({
          classes: this.classes,
          parent,
          sheet,
          jss,
          Renderer,
          generateId,
          scoped,
          name,
          keyframes: this.keyframes,
          selector: void 0
        }, ruleOptions), key = name;
        name in this.raw && (key = name + "-d" + this.counter++), this.raw[key] = decl, 
        key in this.classes && (options.selector = "." + jss_esm_escape(this.classes[key]));
        var rule = createRule(key, decl, options);
        if (!rule) return null;
        this.register(rule);
        var index = void 0 === options.index ? this.index.length : options.index;
        return this.index.splice(index, 0, rule), rule;
      }, _proto.get = function(name) {
        return this.map[name];
      }, _proto.remove = function(rule) {
        this.unregister(rule), delete this.raw[rule.key], this.index.splice(this.index.indexOf(rule), 1);
      }, _proto.indexOf = function(rule) {
        return this.index.indexOf(rule);
      }, _proto.process = function() {
        var plugins = this.options.jss.plugins;
        this.index.slice(0).forEach(plugins.onProcessRule, plugins);
      }, _proto.register = function(rule) {
        this.map[rule.key] = rule, rule instanceof StyleRule ? (this.map[rule.selector] = rule, 
        rule.id && (this.classes[rule.key] = rule.id)) : rule instanceof KeyframesRule && this.keyframes && (this.keyframes[rule.name] = rule.id);
      }, _proto.unregister = function(rule) {
        delete this.map[rule.key], rule instanceof StyleRule ? (delete this.map[rule.selector], 
        delete this.classes[rule.key]) : rule instanceof KeyframesRule && delete this.keyframes[rule.name];
      }, _proto.update = function() {
        var name, data, options;
        if ("string" == typeof (arguments.length <= 0 ? void 0 : arguments[0]) ? (name = arguments.length <= 0 ? void 0 : arguments[0], 
        data = arguments.length <= 1 ? void 0 : arguments[1], options = arguments.length <= 2 ? void 0 : arguments[2]) : (data = arguments.length <= 0 ? void 0 : arguments[0], 
        options = arguments.length <= 1 ? void 0 : arguments[1], name = null), name) this.updateOne(this.map[name], data, options); else for (var index = 0; index < this.index.length; index++) this.updateOne(this.index[index], data, options);
      }, _proto.updateOne = function(rule, data, options) {
        void 0 === options && (options = defaultUpdateOptions);
        var _this$options2 = this.options, plugins = _this$options2.jss.plugins, sheet = _this$options2.sheet;
        if (rule.rules instanceof RuleList) rule.rules.update(data, options); else {
          var styleRule = rule, style = styleRule.style;
          if (plugins.onUpdate(data, rule, sheet, options), options.process && style && style !== styleRule.style) {
            for (var prop in plugins.onProcessStyle(styleRule.style, styleRule, sheet), styleRule.style) {
              var nextValue = styleRule.style[prop];
              nextValue !== style[prop] && styleRule.prop(prop, nextValue, forceUpdateOptions);
            }
            for (var _prop in style) {
              var _nextValue = styleRule.style[_prop], _prevValue = style[_prop];
              null == _nextValue && _nextValue !== _prevValue && styleRule.prop(_prop, null, forceUpdateOptions);
            }
          }
        }
      }, _proto.toString = function(options) {
        for (var str = "", sheet = this.options.sheet, link = !!sheet && sheet.options.link, index = 0; index < this.index.length; index++) {
          var css = this.index[index].toString(options);
          (css || link) && (str && (str += "\n"), str += css);
        }
        return str;
      }, RuleList;
    }(), StyleSheet = function() {
      function StyleSheet(styles, options) {
        for (var name in this.options = void 0, this.deployed = void 0, this.attached = void 0, 
        this.rules = void 0, this.renderer = void 0, this.classes = void 0, this.keyframes = void 0, 
        this.queue = void 0, this.attached = !1, this.deployed = !1, this.classes = {}, 
        this.keyframes = {}, this.options = extends_extends({}, options, {
          sheet: this,
          parent: this,
          classes: this.classes,
          keyframes: this.keyframes
        }), options.Renderer && (this.renderer = new options.Renderer(this)), this.rules = new RuleList(this.options), 
        styles) this.rules.add(name, styles[name]);
        this.rules.process();
      }
      var _proto = StyleSheet.prototype;
      return _proto.attach = function() {
        return this.attached || (this.renderer && this.renderer.attach(), this.attached = !0, 
        this.deployed || this.deploy()), this;
      }, _proto.detach = function() {
        return this.attached ? (this.renderer && this.renderer.detach(), this.attached = !1, 
        this) : this;
      }, _proto.addRule = function(name, decl, options) {
        var queue = this.queue;
        this.attached && !queue && (this.queue = []);
        var rule = this.rules.add(name, decl, options);
        return rule ? (this.options.jss.plugins.onProcessRule(rule), this.attached ? this.deployed ? (queue ? queue.push(rule) : (this.insertRule(rule), 
        this.queue && (this.queue.forEach(this.insertRule, this), this.queue = void 0)), 
        rule) : rule : (this.deployed = !1, rule)) : null;
      }, _proto.insertRule = function(rule) {
        this.renderer && this.renderer.insertRule(rule);
      }, _proto.addRules = function(styles, options) {
        var added = [];
        for (var name in styles) {
          var rule = this.addRule(name, styles[name], options);
          rule && added.push(rule);
        }
        return added;
      }, _proto.getRule = function(name) {
        return this.rules.get(name);
      }, _proto.deleteRule = function(name) {
        var rule = "object" == typeof name ? name : this.rules.get(name);
        return !(!rule || this.attached && !rule.renderable) && (this.rules.remove(rule), 
        !(this.attached && rule.renderable && this.renderer) || this.renderer.deleteRule(rule.renderable));
      }, _proto.indexOf = function(rule) {
        return this.rules.indexOf(rule);
      }, _proto.deploy = function() {
        return this.renderer && this.renderer.deploy(), this.deployed = !0, this;
      }, _proto.update = function() {
        var _this$rules;
        return (_this$rules = this.rules).update.apply(_this$rules, arguments), this;
      }, _proto.updateOne = function(rule, data, options) {
        return this.rules.updateOne(rule, data, options), this;
      }, _proto.toString = function(options) {
        return this.rules.toString(options);
      }, StyleSheet;
    }(), PluginsRegistry = function() {
      function PluginsRegistry() {
        this.plugins = {
          internal: [],
          external: []
        }, this.registry = void 0;
      }
      var _proto = PluginsRegistry.prototype;
      return _proto.onCreateRule = function(name, decl, options) {
        for (var i = 0; i < this.registry.onCreateRule.length; i++) {
          var rule = this.registry.onCreateRule[i](name, decl, options);
          if (rule) return rule;
        }
        return null;
      }, _proto.onProcessRule = function(rule) {
        if (!rule.isProcessed) {
          for (var sheet = rule.options.sheet, i = 0; i < this.registry.onProcessRule.length; i++) this.registry.onProcessRule[i](rule, sheet);
          rule.style && this.onProcessStyle(rule.style, rule, sheet), rule.isProcessed = !0;
        }
      }, _proto.onProcessStyle = function(style, rule, sheet) {
        for (var i = 0; i < this.registry.onProcessStyle.length; i++) rule.style = this.registry.onProcessStyle[i](rule.style, rule, sheet);
      }, _proto.onProcessSheet = function(sheet) {
        for (var i = 0; i < this.registry.onProcessSheet.length; i++) this.registry.onProcessSheet[i](sheet);
      }, _proto.onUpdate = function(data, rule, sheet, options) {
        for (var i = 0; i < this.registry.onUpdate.length; i++) this.registry.onUpdate[i](data, rule, sheet, options);
      }, _proto.onChangeValue = function(value, prop, rule) {
        for (var processedValue = value, i = 0; i < this.registry.onChangeValue.length; i++) processedValue = this.registry.onChangeValue[i](processedValue, prop, rule);
        return processedValue;
      }, _proto.use = function(newPlugin, options) {
        void 0 === options && (options = {
          queue: "external"
        });
        var plugins = this.plugins[options.queue];
        -1 === plugins.indexOf(newPlugin) && (plugins.push(newPlugin), this.registry = [].concat(this.plugins.external, this.plugins.internal).reduce((function(registry, plugin) {
          for (var name in plugin) name in registry && registry[name].push(plugin[name]);
          return registry;
        }), {
          onCreateRule: [],
          onProcessRule: [],
          onProcessStyle: [],
          onProcessSheet: [],
          onChangeValue: [],
          onUpdate: []
        }));
      }, PluginsRegistry;
    }(), SheetsRegistry = function() {
      function SheetsRegistry() {
        this.registry = [];
      }
      var _proto = SheetsRegistry.prototype;
      return _proto.add = function(sheet) {
        var registry = this.registry, index = sheet.options.index;
        if (-1 === registry.indexOf(sheet)) if (0 === registry.length || index >= this.index) registry.push(sheet); else for (var i = 0; i < registry.length; i++) if (registry[i].options.index > index) return void registry.splice(i, 0, sheet);
      }, _proto.reset = function() {
        this.registry = [];
      }, _proto.remove = function(sheet) {
        var index = this.registry.indexOf(sheet);
        this.registry.splice(index, 1);
      }, _proto.toString = function(_temp) {
        for (var _ref = void 0 === _temp ? {} : _temp, attached = _ref.attached, options = _objectWithoutPropertiesLoose(_ref, [ "attached" ]), css = "", i = 0; i < this.registry.length; i++) {
          var sheet = this.registry[i];
          null != attached && sheet.attached !== attached || (css && (css += "\n"), css += sheet.toString(options));
        }
        return css;
      }, createClass_createClass(SheetsRegistry, [ {
        key: "index",
        get: function() {
          return 0 === this.registry.length ? 0 : this.registry[this.registry.length - 1].options.index;
        }
      } ]), SheetsRegistry;
    }(), registry = new SheetsRegistry, globalThis$1 = "undefined" != typeof globalThis ? globalThis : "undefined" != typeof window && window.Math === Math ? window : "undefined" != typeof self && self.Math === Math ? self : Function("return this")(), ns = "2f1acc6c3a606b082e5eef5e54414ffb";
    null == globalThis$1[ns] && (globalThis$1[ns] = 0);
    var moduleId = globalThis$1[ns]++, createGenerateId = function(options) {
      void 0 === options && (options = {});
      var ruleCounter = 0;
      return function(rule, sheet) {
        ruleCounter += 1;
        var jssId = "", prefix = "";
        return sheet && (sheet.options.classNamePrefix && (prefix = sheet.options.classNamePrefix), 
        null != sheet.options.jss.id && (jssId = String(sheet.options.jss.id))), options.minify ? "" + (prefix || "c") + moduleId + jssId + ruleCounter : prefix + rule.key + "-" + moduleId + (jssId ? "-" + jssId : "") + "-" + ruleCounter;
      };
    }, jss_esm_memoize = function(fn) {
      var value;
      return function() {
        return value || (value = fn()), value;
      };
    }, getPropertyValue = function(cssRule, prop) {
      try {
        return cssRule.attributeStyleMap ? cssRule.attributeStyleMap.get(prop) : cssRule.style.getPropertyValue(prop);
      } catch (err) {
        return "";
      }
    }, setProperty = function(cssRule, prop, value) {
      try {
        var cssValue = value;
        if (Array.isArray(value) && (cssValue = toCssValue(value, !0), "!important" === value[value.length - 1])) return cssRule.style.setProperty(prop, cssValue, "important"), 
        !0;
        cssRule.attributeStyleMap ? cssRule.attributeStyleMap.set(prop, cssValue) : cssRule.style.setProperty(prop, cssValue);
      } catch (err) {
        return !1;
      }
      return !0;
    }, removeProperty = function(cssRule, prop) {
      try {
        cssRule.attributeStyleMap ? cssRule.attributeStyleMap.delete(prop) : cssRule.style.removeProperty(prop);
      } catch (err) {}
    }, setSelector = function(cssRule, selectorText) {
      return cssRule.selectorText = selectorText, cssRule.selectorText === selectorText;
    }, getHead = jss_esm_memoize((function() {
      return document.querySelector("head");
    }));
    function findPrevNode(options) {
      var registry$1 = registry.registry;
      if (registry$1.length > 0) {
        var sheet = function(registry, options) {
          for (var i = 0; i < registry.length; i++) {
            var sheet = registry[i];
            if (sheet.attached && sheet.options.index > options.index && sheet.options.insertionPoint === options.insertionPoint) return sheet;
          }
          return null;
        }(registry$1, options);
        if (sheet && sheet.renderer) return {
          parent: sheet.renderer.element.parentNode,
          node: sheet.renderer.element
        };
        if (sheet = function(registry, options) {
          for (var i = registry.length - 1; i >= 0; i--) {
            var sheet = registry[i];
            if (sheet.attached && sheet.options.insertionPoint === options.insertionPoint) return sheet;
          }
          return null;
        }(registry$1, options), sheet && sheet.renderer) return {
          parent: sheet.renderer.element.parentNode,
          node: sheet.renderer.element.nextSibling
        };
      }
      var insertionPoint = options.insertionPoint;
      if (insertionPoint && "string" == typeof insertionPoint) {
        var comment = function(text) {
          for (var head = getHead(), i = 0; i < head.childNodes.length; i++) {
            var node = head.childNodes[i];
            if (8 === node.nodeType && node.nodeValue.trim() === text) return node;
          }
          return null;
        }(insertionPoint);
        if (comment) return {
          parent: comment.parentNode,
          node: comment.nextSibling
        };
      }
      return !1;
    }
    var getNonce = jss_esm_memoize((function() {
      var node = document.querySelector('meta[property="csp-nonce"]');
      return node ? node.getAttribute("content") : null;
    })), _insertRule = function(container, rule, index) {
      try {
        if ("insertRule" in container) container.insertRule(rule, index); else if ("appendRule" in container) {
          container.appendRule(rule);
        }
      } catch (err) {
        return !1;
      }
      return container.cssRules[index];
    }, getValidRuleInsertionIndex = function(container, index) {
      var maxIndex = container.cssRules.length;
      return void 0 === index || index > maxIndex ? maxIndex : index;
    }, DomRenderer = function() {
      function DomRenderer(sheet) {
        this.getPropertyValue = getPropertyValue, this.setProperty = setProperty, this.removeProperty = removeProperty, 
        this.setSelector = setSelector, this.element = void 0, this.sheet = void 0, this.hasInsertedRules = !1, 
        this.cssRules = [], sheet && registry.add(sheet), this.sheet = sheet;
        var _ref = this.sheet ? this.sheet.options : {}, media = _ref.media, meta = _ref.meta, element = _ref.element;
        this.element = element || function() {
          var el = document.createElement("style");
          return el.textContent = "\n", el;
        }(), this.element.setAttribute("data-jss", ""), media && this.element.setAttribute("media", media), 
        meta && this.element.setAttribute("data-meta", meta);
        var nonce = getNonce();
        nonce && this.element.setAttribute("nonce", nonce);
      }
      var _proto = DomRenderer.prototype;
      return _proto.attach = function() {
        if (!this.element.parentNode && this.sheet) {
          !function(style, options) {
            var insertionPoint = options.insertionPoint, nextNode = findPrevNode(options);
            if (!1 !== nextNode && nextNode.parent) nextNode.parent.insertBefore(style, nextNode.node); else if (insertionPoint && "number" == typeof insertionPoint.nodeType) {
              var insertionPointElement = insertionPoint, parentNode = insertionPointElement.parentNode;
              parentNode && parentNode.insertBefore(style, insertionPointElement.nextSibling);
            } else getHead().appendChild(style);
          }(this.element, this.sheet.options);
          var deployed = Boolean(this.sheet && this.sheet.deployed);
          this.hasInsertedRules && deployed && (this.hasInsertedRules = !1, this.deploy());
        }
      }, _proto.detach = function() {
        if (this.sheet) {
          var parentNode = this.element.parentNode;
          parentNode && parentNode.removeChild(this.element), this.sheet.options.link && (this.cssRules = [], 
          this.element.textContent = "\n");
        }
      }, _proto.deploy = function() {
        var sheet = this.sheet;
        sheet && (sheet.options.link ? this.insertRules(sheet.rules) : this.element.textContent = "\n" + sheet.toString() + "\n");
      }, _proto.insertRules = function(rules, nativeParent) {
        for (var i = 0; i < rules.index.length; i++) this.insertRule(rules.index[i], i, nativeParent);
      }, _proto.insertRule = function(rule, index, nativeParent) {
        if (void 0 === nativeParent && (nativeParent = this.element.sheet), rule.rules) {
          var parent = rule, latestNativeParent = nativeParent;
          if ("conditional" === rule.type || "keyframes" === rule.type) {
            var _insertionIndex = getValidRuleInsertionIndex(nativeParent, index);
            if (!1 === (latestNativeParent = _insertRule(nativeParent, parent.toString({
              children: !1
            }), _insertionIndex))) return !1;
            this.refCssRule(rule, _insertionIndex, latestNativeParent);
          }
          return this.insertRules(parent.rules, latestNativeParent), latestNativeParent;
        }
        var ruleStr = rule.toString();
        if (!ruleStr) return !1;
        var insertionIndex = getValidRuleInsertionIndex(nativeParent, index), nativeRule = _insertRule(nativeParent, ruleStr, insertionIndex);
        return !1 !== nativeRule && (this.hasInsertedRules = !0, this.refCssRule(rule, insertionIndex, nativeRule), 
        nativeRule);
      }, _proto.refCssRule = function(rule, index, cssRule) {
        rule.renderable = cssRule, rule.options.parent instanceof StyleSheet && (this.cssRules[index] = cssRule);
      }, _proto.deleteRule = function(cssRule) {
        var sheet = this.element.sheet, index = this.indexOf(cssRule);
        return -1 !== index && (sheet.deleteRule(index), this.cssRules.splice(index, 1), 
        !0);
      }, _proto.indexOf = function(cssRule) {
        return this.cssRules.indexOf(cssRule);
      }, _proto.replaceRule = function(cssRule, rule) {
        var index = this.indexOf(cssRule);
        return -1 !== index && (this.element.sheet.deleteRule(index), this.cssRules.splice(index, 1), 
        this.insertRule(rule, index));
      }, _proto.getRules = function() {
        return this.element.sheet.cssRules;
      }, DomRenderer;
    }(), instanceCounter = 0, Jss = function() {
      function Jss(options) {
        this.id = instanceCounter++, this.version = "10.7.1", this.plugins = new PluginsRegistry, 
        this.options = {
          id: {
            minify: !1
          },
          createGenerateId,
          Renderer: dist_module ? DomRenderer : null,
          plugins: []
        }, this.generateId = createGenerateId({
          minify: !1
        });
        for (var i = 0; i < plugins.length; i++) this.plugins.use(plugins[i], {
          queue: "internal"
        });
        this.setup(options);
      }
      var _proto = Jss.prototype;
      return _proto.setup = function(options) {
        return void 0 === options && (options = {}), options.createGenerateId && (this.options.createGenerateId = options.createGenerateId), 
        options.id && (this.options.id = extends_extends({}, this.options.id, options.id)), 
        (options.createGenerateId || options.id) && (this.generateId = this.options.createGenerateId(this.options.id)), 
        null != options.insertionPoint && (this.options.insertionPoint = options.insertionPoint), 
        "Renderer" in options && (this.options.Renderer = options.Renderer), options.plugins && this.use.apply(this, options.plugins), 
        this;
      }, _proto.createStyleSheet = function(styles, options) {
        void 0 === options && (options = {});
        var index = options.index;
        "number" != typeof index && (index = 0 === registry.index ? 0 : registry.index + 1);
        var sheet = new StyleSheet(styles, extends_extends({}, options, {
          jss: this,
          generateId: options.generateId || this.generateId,
          insertionPoint: this.options.insertionPoint,
          Renderer: this.options.Renderer,
          index
        }));
        return this.plugins.onProcessSheet(sheet), sheet;
      }, _proto.removeStyleSheet = function(sheet) {
        return sheet.detach(), registry.remove(sheet), this;
      }, _proto.createRule = function(name, style, options) {
        if (void 0 === style && (style = {}), void 0 === options && (options = {}), "object" == typeof name) return this.createRule(void 0, name, style);
        var ruleOptions = extends_extends({}, options, {
          name,
          jss: this,
          Renderer: this.options.Renderer
        });
        ruleOptions.generateId || (ruleOptions.generateId = this.generateId), ruleOptions.classes || (ruleOptions.classes = {}), 
        ruleOptions.keyframes || (ruleOptions.keyframes = {});
        var rule = createRule(name, style, ruleOptions);
        return rule && this.plugins.onProcessRule(rule), rule;
      }, _proto.use = function() {
        for (var _this = this, _len = arguments.length, plugins = new Array(_len), _key = 0; _key < _len; _key++) plugins[_key] = arguments[_key];
        return plugins.forEach((function(plugin) {
          _this.plugins.use(plugin);
        })), this;
      }, Jss;
    }();
    function getDynamicStyles(styles) {
      var to = null;
      for (var key in styles) {
        var value = styles[key], type = typeof value;
        if ("function" === type) to || (to = {}), to[key] = value; else if ("object" === type && null !== value && !Array.isArray(value)) {
          var extracted = getDynamicStyles(value);
          extracted && (to || (to = {}), to[key] = extracted);
        }
      }
      return to;
    }
    var hasCSSTOMSupport = "object" == typeof CSS && null != CSS && "number" in CSS, jss_esm_create = function(options) {
      return new Jss(options);
    };
    jss_esm_create();
    function mergeClasses() {
      var options = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {}, baseClasses = options.baseClasses, newClasses = options.newClasses;
      options.Component;
      if (!newClasses) return baseClasses;
      var nextClasses = extends_extends({}, baseClasses);
      return Object.keys(newClasses).forEach((function(key) {
        newClasses[key] && (nextClasses[key] = "".concat(baseClasses[key], " ").concat(newClasses[key]));
      })), nextClasses;
    }
    var multiKeyStore = {
      set: function(cache, key1, key2, value) {
        var subCache = cache.get(key1);
        subCache || (subCache = new Map, cache.set(key1, subCache)), subCache.set(key2, value);
      },
      get: function(cache, key1, key2) {
        var subCache = cache.get(key1);
        return subCache ? subCache.get(key2) : void 0;
      },
      delete: function(cache, key1, key2) {
        cache.get(key1).delete(key2);
      }
    };
    const makeStyles_multiKeyStore = multiKeyStore;
    var pseudoClasses = [ "checked", "disabled", "error", "focused", "focusVisible", "required", "expanded", "selected" ];
    var now = Date.now(), fnValuesNs = "fnValues" + now, fnRuleNs = "fnStyle" + ++now;
    const jss_plugin_rule_value_function_esm = function() {
      return {
        onCreateRule: function(name, decl, options) {
          if ("function" != typeof decl) return null;
          var rule = createRule(name, {}, options);
          return rule[fnRuleNs] = decl, rule;
        },
        onProcessStyle: function(style, rule) {
          if (fnValuesNs in rule || fnRuleNs in rule) return style;
          var fnValues = {};
          for (var prop in style) {
            var value = style[prop];
            "function" == typeof value && (delete style[prop], fnValues[prop] = value);
          }
          return rule[fnValuesNs] = fnValues, style;
        },
        onUpdate: function(data, rule, sheet, options) {
          var styleRule = rule, fnRule = styleRule[fnRuleNs];
          fnRule && (styleRule.style = fnRule(data) || {});
          var fnValues = styleRule[fnValuesNs];
          if (fnValues) for (var _prop in fnValues) styleRule.prop(_prop, fnValues[_prop](data), options);
        }
      };
    };
    var at = "@global", GlobalContainerRule = function() {
      function GlobalContainerRule(key, styles, options) {
        for (var selector in this.type = "global", this.at = at, this.rules = void 0, this.options = void 0, 
        this.key = void 0, this.isProcessed = !1, this.key = key, this.options = options, 
        this.rules = new RuleList(extends_extends({}, options, {
          parent: this
        })), styles) this.rules.add(selector, styles[selector]);
        this.rules.process();
      }
      var _proto = GlobalContainerRule.prototype;
      return _proto.getRule = function(name) {
        return this.rules.get(name);
      }, _proto.addRule = function(name, style, options) {
        var rule = this.rules.add(name, style, options);
        return rule && this.options.jss.plugins.onProcessRule(rule), rule;
      }, _proto.indexOf = function(rule) {
        return this.rules.indexOf(rule);
      }, _proto.toString = function() {
        return this.rules.toString();
      }, GlobalContainerRule;
    }(), GlobalPrefixedRule = function() {
      function GlobalPrefixedRule(key, style, options) {
        this.type = "global", this.at = at, this.options = void 0, this.rule = void 0, this.isProcessed = !1, 
        this.key = void 0, this.key = key, this.options = options;
        var selector = key.substr(8);
        this.rule = options.jss.createRule(selector, style, extends_extends({}, options, {
          parent: this
        }));
      }
      return GlobalPrefixedRule.prototype.toString = function(options) {
        return this.rule ? this.rule.toString(options) : "";
      }, GlobalPrefixedRule;
    }(), separatorRegExp = /\s*,\s*/g;
    function addScope(selector, scope) {
      for (var parts = selector.split(separatorRegExp), scoped = "", i = 0; i < parts.length; i++) scoped += scope + " " + parts[i].trim(), 
      parts[i + 1] && (scoped += ", ");
      return scoped;
    }
    const jss_plugin_global_esm = function() {
      return {
        onCreateRule: function(name, styles, options) {
          if (!name) return null;
          if (name === at) return new GlobalContainerRule(name, styles, options);
          if ("@" === name[0] && "@global " === name.substr(0, 8)) return new GlobalPrefixedRule(name, styles, options);
          var parent = options.parent;
          return parent && ("global" === parent.type || parent.options.parent && "global" === parent.options.parent.type) && (options.scoped = !1), 
          !1 === options.scoped && (options.selector = name), null;
        },
        onProcessRule: function(rule, sheet) {
          "style" === rule.type && sheet && (function(rule, sheet) {
            var options = rule.options, style = rule.style, rules = style ? style[at] : null;
            if (rules) {
              for (var name in rules) sheet.addRule(name, rules[name], extends_extends({}, options, {
                selector: addScope(name, rule.selector)
              }));
              delete style[at];
            }
          }(rule, sheet), function(rule, sheet) {
            var options = rule.options, style = rule.style;
            for (var prop in style) if ("@" === prop[0] && prop.substr(0, at.length) === at) {
              var selector = addScope(prop.substr(at.length), rule.selector);
              sheet.addRule(selector, style[prop], extends_extends({}, options, {
                selector
              })), delete style[prop];
            }
          }(rule, sheet));
        }
      };
    };
    var jss_plugin_nested_esm_separatorRegExp = /\s*,\s*/g, parentRegExp = /&/g, jss_plugin_nested_esm_refRegExp = /\$([\w-]+)/g;
    const jss_plugin_nested_esm = function() {
      function getReplaceRef(container, sheet) {
        return function(match, key) {
          var rule = container.getRule(key) || sheet && sheet.getRule(key);
          return rule ? rule.selector : key;
        };
      }
      function replaceParentRefs(nestedProp, parentProp) {
        for (var parentSelectors = parentProp.split(jss_plugin_nested_esm_separatorRegExp), nestedSelectors = nestedProp.split(jss_plugin_nested_esm_separatorRegExp), result = "", i = 0; i < parentSelectors.length; i++) for (var parent = parentSelectors[i], j = 0; j < nestedSelectors.length; j++) {
          var nested = nestedSelectors[j];
          result && (result += ", "), result += -1 !== nested.indexOf("&") ? nested.replace(parentRegExp, parent) : parent + " " + nested;
        }
        return result;
      }
      function getOptions(rule, container, prevOptions) {
        if (prevOptions) return extends_extends({}, prevOptions, {
          index: prevOptions.index + 1
        });
        var nestingLevel = rule.options.nestingLevel;
        nestingLevel = void 0 === nestingLevel ? 1 : nestingLevel + 1;
        var options = extends_extends({}, rule.options, {
          nestingLevel,
          index: container.indexOf(rule) + 1
        });
        return delete options.name, options;
      }
      return {
        onProcessStyle: function(style, rule, sheet) {
          if ("style" !== rule.type) return style;
          var options, replaceRef, styleRule = rule, container = styleRule.options.parent;
          for (var prop in style) {
            var isNested = -1 !== prop.indexOf("&"), isNestedConditional = "@" === prop[0];
            if (isNested || isNestedConditional) {
              if (options = getOptions(styleRule, container, options), isNested) {
                var selector = replaceParentRefs(prop, styleRule.selector);
                replaceRef || (replaceRef = getReplaceRef(container, sheet)), selector = selector.replace(jss_plugin_nested_esm_refRegExp, replaceRef), 
                container.addRule(selector, style[prop], extends_extends({}, options, {
                  selector
                }));
              } else isNestedConditional && container.addRule(prop, {}, options).addRule(styleRule.key, style[prop], {
                selector: styleRule.selector
              });
              delete style[prop];
            }
          }
          return style;
        }
      };
    };
    var uppercasePattern = /[A-Z]/g, msPattern = /^ms-/, cache = {};
    function toHyphenLower(match) {
      return "-" + match.toLowerCase();
    }
    const hyphenate_style_name = function(name) {
      if (cache.hasOwnProperty(name)) return cache[name];
      var hName = name.replace(uppercasePattern, toHyphenLower);
      return cache[name] = msPattern.test(hName) ? "-" + hName : hName;
    };
    function convertCase(style) {
      var converted = {};
      for (var prop in style) {
        converted[0 === prop.indexOf("--") ? prop : hyphenate_style_name(prop)] = style[prop];
      }
      return style.fallbacks && (Array.isArray(style.fallbacks) ? converted.fallbacks = style.fallbacks.map(convertCase) : converted.fallbacks = convertCase(style.fallbacks)), 
      converted;
    }
    const jss_plugin_camel_case_esm = function() {
      return {
        onProcessStyle: function(style) {
          if (Array.isArray(style)) {
            for (var index = 0; index < style.length; index++) style[index] = convertCase(style[index]);
            return style;
          }
          return convertCase(style);
        },
        onChangeValue: function(value, prop, rule) {
          if (0 === prop.indexOf("--")) return value;
          var hyphenatedProp = hyphenate_style_name(prop);
          return prop === hyphenatedProp ? value : (rule.prop(hyphenatedProp, value), null);
        }
      };
    };
    var px = hasCSSTOMSupport && CSS ? CSS.px : "px", ms = hasCSSTOMSupport && CSS ? CSS.ms : "ms", percent = hasCSSTOMSupport && CSS ? CSS.percent : "%";
    function addCamelCasedVersion(obj) {
      var regExp = /(-[a-z])/g, replace = function(str) {
        return str[1].toUpperCase();
      }, newObj = {};
      for (var _key in obj) newObj[_key] = obj[_key], newObj[_key.replace(regExp, replace)] = obj[_key];
      return newObj;
    }
    var units = addCamelCasedVersion({
      "animation-delay": ms,
      "animation-duration": ms,
      "background-position": px,
      "background-position-x": px,
      "background-position-y": px,
      "background-size": px,
      border: px,
      "border-bottom": px,
      "border-bottom-left-radius": px,
      "border-bottom-right-radius": px,
      "border-bottom-width": px,
      "border-left": px,
      "border-left-width": px,
      "border-radius": px,
      "border-right": px,
      "border-right-width": px,
      "border-top": px,
      "border-top-left-radius": px,
      "border-top-right-radius": px,
      "border-top-width": px,
      "border-width": px,
      "border-block": px,
      "border-block-end": px,
      "border-block-end-width": px,
      "border-block-start": px,
      "border-block-start-width": px,
      "border-block-width": px,
      "border-inline": px,
      "border-inline-end": px,
      "border-inline-end-width": px,
      "border-inline-start": px,
      "border-inline-start-width": px,
      "border-inline-width": px,
      "border-start-start-radius": px,
      "border-start-end-radius": px,
      "border-end-start-radius": px,
      "border-end-end-radius": px,
      margin: px,
      "margin-bottom": px,
      "margin-left": px,
      "margin-right": px,
      "margin-top": px,
      "margin-block": px,
      "margin-block-end": px,
      "margin-block-start": px,
      "margin-inline": px,
      "margin-inline-end": px,
      "margin-inline-start": px,
      padding: px,
      "padding-bottom": px,
      "padding-left": px,
      "padding-right": px,
      "padding-top": px,
      "padding-block": px,
      "padding-block-end": px,
      "padding-block-start": px,
      "padding-inline": px,
      "padding-inline-end": px,
      "padding-inline-start": px,
      "mask-position-x": px,
      "mask-position-y": px,
      "mask-size": px,
      height: px,
      width: px,
      "min-height": px,
      "max-height": px,
      "min-width": px,
      "max-width": px,
      bottom: px,
      left: px,
      top: px,
      right: px,
      inset: px,
      "inset-block": px,
      "inset-block-end": px,
      "inset-block-start": px,
      "inset-inline": px,
      "inset-inline-end": px,
      "inset-inline-start": px,
      "box-shadow": px,
      "text-shadow": px,
      "column-gap": px,
      "column-rule": px,
      "column-rule-width": px,
      "column-width": px,
      "font-size": px,
      "font-size-delta": px,
      "letter-spacing": px,
      "text-decoration-thickness": px,
      "text-indent": px,
      "text-stroke": px,
      "text-stroke-width": px,
      "word-spacing": px,
      motion: px,
      "motion-offset": px,
      outline: px,
      "outline-offset": px,
      "outline-width": px,
      perspective: px,
      "perspective-origin-x": percent,
      "perspective-origin-y": percent,
      "transform-origin": percent,
      "transform-origin-x": percent,
      "transform-origin-y": percent,
      "transform-origin-z": percent,
      "transition-delay": ms,
      "transition-duration": ms,
      "vertical-align": px,
      "flex-basis": px,
      "shape-margin": px,
      size: px,
      gap: px,
      grid: px,
      "grid-gap": px,
      "row-gap": px,
      "grid-row-gap": px,
      "grid-column-gap": px,
      "grid-template-rows": px,
      "grid-template-columns": px,
      "grid-auto-rows": px,
      "grid-auto-columns": px,
      "box-shadow-x": px,
      "box-shadow-y": px,
      "box-shadow-blur": px,
      "box-shadow-spread": px,
      "font-line-height": px,
      "text-shadow-x": px,
      "text-shadow-y": px,
      "text-shadow-blur": px
    });
    function iterate(prop, value, options) {
      if (null == value) return value;
      if (Array.isArray(value)) for (var i = 0; i < value.length; i++) value[i] = iterate(prop, value[i], options); else if ("object" == typeof value) if ("fallbacks" === prop) for (var innerProp in value) value[innerProp] = iterate(innerProp, value[innerProp], options); else for (var _innerProp in value) value[_innerProp] = iterate(prop + "-" + _innerProp, value[_innerProp], options); else if ("number" == typeof value && !1 === isNaN(value)) {
        var unit = options[prop] || units[prop];
        return !unit || 0 === value && unit === px ? value.toString() : "function" == typeof unit ? unit(value).toString() : "" + value + unit;
      }
      return value;
    }
    const jss_plugin_default_unit_esm = function(options) {
      void 0 === options && (options = {});
      var camelCasedOptions = addCamelCasedVersion(options);
      return {
        onProcessStyle: function(style, rule) {
          if ("style" !== rule.type) return style;
          for (var prop in style) style[prop] = iterate(prop, style[prop], camelCasedOptions);
          return style;
        },
        onChangeValue: function(value, prop) {
          return iterate(prop, value, camelCasedOptions);
        }
      };
    };
    function toConsumableArray_toConsumableArray(arr) {
      return function(arr) {
        if (Array.isArray(arr)) return _arrayLikeToArray(arr);
      }(arr) || function(iter) {
        if ("undefined" != typeof Symbol && null != iter[Symbol.iterator] || null != iter["@@iterator"]) return Array.from(iter);
      }(arr) || _unsupportedIterableToArray(arr) || function() {
        throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
      }();
    }
    var js = "", css = "", vendor = "", browser = "", isTouch = dist_module && "ontouchstart" in document.documentElement;
    if (dist_module) {
      var jsCssMap = {
        Moz: "-moz-",
        ms: "-ms-",
        O: "-o-",
        Webkit: "-webkit-"
      }, style = document.createElement("p").style;
      for (var key in jsCssMap) if (key + "Transform" in style) {
        js = key, css = jsCssMap[key];
        break;
      }
      "Webkit" === js && "msHyphens" in style && (js = "ms", css = jsCssMap.ms, browser = "edge"), 
      "Webkit" === js && "-apple-trailing-word" in style && (vendor = "apple");
    }
    var prefix = {
      js,
      css,
      vendor,
      browser,
      isTouch
    };
    var appearence = {
      noPrefill: [ "appearance" ],
      supportedProperty: function(prop) {
        return "appearance" === prop && ("ms" === prefix.js ? "-webkit-" + prop : prefix.css + prop);
      }
    }, colorAdjust = {
      noPrefill: [ "color-adjust" ],
      supportedProperty: function(prop) {
        return "color-adjust" === prop && ("Webkit" === prefix.js ? prefix.css + "print-" + prop : prop);
      }
    }, regExp = /[-\s]+(.)?/g;
    function toUpper(match, c) {
      return c ? c.toUpperCase() : "";
    }
    function camelize(str) {
      return str.replace(regExp, toUpper);
    }
    function pascalize(str) {
      return camelize("-" + str);
    }
    var el, mask = {
      noPrefill: [ "mask" ],
      supportedProperty: function(prop, style) {
        if (!/^mask/.test(prop)) return !1;
        if ("Webkit" === prefix.js) {
          if (camelize("mask-image") in style) return prop;
          if (prefix.js + pascalize("mask-image") in style) return prefix.css + prop;
        }
        return prop;
      }
    }, textOrientation = {
      noPrefill: [ "text-orientation" ],
      supportedProperty: function(prop) {
        return "text-orientation" === prop && ("apple" !== prefix.vendor || prefix.isTouch ? prop : prefix.css + prop);
      }
    }, transform = {
      noPrefill: [ "transform" ],
      supportedProperty: function(prop, style, options) {
        return "transform" === prop && (options.transform ? prop : prefix.css + prop);
      }
    }, transition = {
      noPrefill: [ "transition" ],
      supportedProperty: function(prop, style, options) {
        return "transition" === prop && (options.transition ? prop : prefix.css + prop);
      }
    }, writingMode = {
      noPrefill: [ "writing-mode" ],
      supportedProperty: function(prop) {
        return "writing-mode" === prop && ("Webkit" === prefix.js || "ms" === prefix.js && "edge" !== prefix.browser ? prefix.css + prop : prop);
      }
    }, userSelect = {
      noPrefill: [ "user-select" ],
      supportedProperty: function(prop) {
        return "user-select" === prop && ("Moz" === prefix.js || "ms" === prefix.js || "apple" === prefix.vendor ? prefix.css + prop : prop);
      }
    }, breakPropsOld = {
      supportedProperty: function(prop, style) {
        return !!/^break-/.test(prop) && ("Webkit" === prefix.js ? "WebkitColumn" + pascalize(prop) in style && prefix.css + "column-" + prop : "Moz" === prefix.js && ("page" + pascalize(prop) in style && "page-" + prop));
      }
    }, inlineLogicalOld = {
      supportedProperty: function(prop, style) {
        if (!/^(border|margin|padding)-inline/.test(prop)) return !1;
        if ("Moz" === prefix.js) return prop;
        var newProp = prop.replace("-inline", "");
        return prefix.js + pascalize(newProp) in style && prefix.css + newProp;
      }
    }, unprefixed = {
      supportedProperty: function(prop, style) {
        return camelize(prop) in style && prop;
      }
    }, prefixed = {
      supportedProperty: function(prop, style) {
        var pascalized = pascalize(prop);
        return "-" === prop[0] || "-" === prop[0] && "-" === prop[1] ? prop : prefix.js + pascalized in style ? prefix.css + prop : "Webkit" !== prefix.js && "Webkit" + pascalized in style && "-webkit-" + prop;
      }
    }, scrollSnap = {
      supportedProperty: function(prop) {
        return "scroll-snap" === prop.substring(0, 11) && ("ms" === prefix.js ? "" + prefix.css + prop : prop);
      }
    }, overscrollBehavior = {
      supportedProperty: function(prop) {
        return "overscroll-behavior" === prop && ("ms" === prefix.js ? prefix.css + "scroll-chaining" : prop);
      }
    }, propMap = {
      "flex-grow": "flex-positive",
      "flex-shrink": "flex-negative",
      "flex-basis": "flex-preferred-size",
      "justify-content": "flex-pack",
      order: "flex-order",
      "align-items": "flex-align",
      "align-content": "flex-line-pack"
    }, flex2012 = {
      supportedProperty: function(prop, style) {
        var newProp = propMap[prop];
        return !!newProp && (prefix.js + pascalize(newProp) in style && prefix.css + newProp);
      }
    }, propMap$1 = {
      flex: "box-flex",
      "flex-grow": "box-flex",
      "flex-direction": [ "box-orient", "box-direction" ],
      order: "box-ordinal-group",
      "align-items": "box-align",
      "flex-flow": [ "box-orient", "box-direction" ],
      "justify-content": "box-pack"
    }, propKeys = Object.keys(propMap$1), prefixCss = function(p) {
      return prefix.css + p;
    }, flex2009 = {
      supportedProperty: function(prop, style, _ref) {
        var multiple = _ref.multiple;
        if (propKeys.indexOf(prop) > -1) {
          var newProp = propMap$1[prop];
          if (!Array.isArray(newProp)) return prefix.js + pascalize(newProp) in style && prefix.css + newProp;
          if (!multiple) return !1;
          for (var i = 0; i < newProp.length; i++) if (!(prefix.js + pascalize(newProp[0]) in style)) return !1;
          return newProp.map(prefixCss);
        }
        return !1;
      }
    }, css_vendor_esm_plugins = [ appearence, colorAdjust, mask, textOrientation, transform, transition, writingMode, userSelect, breakPropsOld, inlineLogicalOld, unprefixed, prefixed, scrollSnap, overscrollBehavior, flex2012, flex2009 ], propertyDetectors = css_vendor_esm_plugins.filter((function(p) {
      return p.supportedProperty;
    })).map((function(p) {
      return p.supportedProperty;
    })), noPrefill = css_vendor_esm_plugins.filter((function(p) {
      return p.noPrefill;
    })).reduce((function(a, p) {
      return a.push.apply(a, toConsumableArray_toConsumableArray(p.noPrefill)), a;
    }), []), css_vendor_esm_cache = {};
    if (dist_module) {
      el = document.createElement("p");
      var computed = window.getComputedStyle(document.documentElement, "");
      for (var key$1 in computed) isNaN(key$1) || (css_vendor_esm_cache[computed[key$1]] = computed[key$1]);
      noPrefill.forEach((function(x) {
        return delete css_vendor_esm_cache[x];
      }));
    }
    function supportedProperty(prop, options) {
      if (void 0 === options && (options = {}), !el) return prop;
      if (null != css_vendor_esm_cache[prop]) return css_vendor_esm_cache[prop];
      "transition" !== prop && "transform" !== prop || (options[prop] = prop in el.style);
      for (var i = 0; i < propertyDetectors.length && (css_vendor_esm_cache[prop] = propertyDetectors[i](prop, el.style, options), 
      !css_vendor_esm_cache[prop]); i++) ;
      try {
        el.style[prop] = "";
      } catch (err) {
        return !1;
      }
      return css_vendor_esm_cache[prop];
    }
    var el$1, cache$1 = {}, transitionProperties = {
      transition: 1,
      "transition-property": 1,
      "-webkit-transition": 1,
      "-webkit-transition-property": 1
    }, transPropsRegExp = /(^\s*[\w-]+)|, (\s*[\w-]+)(?![^()]*\))/g;
    function prefixTransitionCallback(match, p1, p2) {
      if ("var" === p1) return "var";
      if ("all" === p1) return "all";
      if ("all" === p2) return ", all";
      var prefixedValue = p1 ? supportedProperty(p1) : ", " + supportedProperty(p2);
      return prefixedValue || (p1 || p2);
    }
    function supportedValue(property, value) {
      var prefixedValue = value;
      if (!el$1 || "content" === property) return value;
      if ("string" != typeof prefixedValue || !isNaN(parseInt(prefixedValue, 10))) return prefixedValue;
      var cacheKey = property + prefixedValue;
      if (null != cache$1[cacheKey]) return cache$1[cacheKey];
      try {
        el$1.style[property] = prefixedValue;
      } catch (err) {
        return cache$1[cacheKey] = !1, !1;
      }
      if (transitionProperties[property]) prefixedValue = prefixedValue.replace(transPropsRegExp, prefixTransitionCallback); else if ("" === el$1.style[property] && ("-ms-flex" === (prefixedValue = prefix.css + prefixedValue) && (el$1.style[property] = "-ms-flexbox"), 
      el$1.style[property] = prefixedValue, "" === el$1.style[property])) return cache$1[cacheKey] = !1, 
      !1;
      return el$1.style[property] = "", cache$1[cacheKey] = prefixedValue, cache$1[cacheKey];
    }
    dist_module && (el$1 = document.createElement("p"));
    const jss_plugin_vendor_prefixer_esm = function() {
      function prefixStyle(style) {
        for (var prop in style) {
          var value = style[prop];
          if ("fallbacks" === prop && Array.isArray(value)) style[prop] = value.map(prefixStyle); else {
            var changeProp = !1, supportedProp = supportedProperty(prop);
            supportedProp && supportedProp !== prop && (changeProp = !0);
            var changeValue = !1, supportedValue$1 = supportedValue(supportedProp, toCssValue(value));
            supportedValue$1 && supportedValue$1 !== value && (changeValue = !0), (changeProp || changeValue) && (changeProp && delete style[prop], 
            style[supportedProp || prop] = supportedValue$1 || value);
          }
        }
        return style;
      }
      return {
        onProcessRule: function(rule) {
          if ("keyframes" === rule.type) {
            var atRule = rule;
            atRule.at = function(key) {
              return "-" === key[1] || "ms" === prefix.js ? key : "@" + prefix.css + "keyframes" + key.substr(10);
            }(atRule.at);
          }
        },
        onProcessStyle: function(style, rule) {
          return "style" !== rule.type ? style : prefixStyle(style);
        },
        onChangeValue: function(value, prop) {
          return supportedValue(prop, toCssValue(value)) || value;
        }
      };
    };
    const jss_plugin_props_sort_esm = function() {
      var sort = function(prop0, prop1) {
        return prop0.length === prop1.length ? prop0 > prop1 ? 1 : -1 : prop0.length - prop1.length;
      };
      return {
        onProcessStyle: function(style, rule) {
          if ("style" !== rule.type) return style;
          for (var newStyle = {}, props = Object.keys(style).sort(sort), i = 0; i < props.length; i++) newStyle[props[i]] = style[props[i]];
          return newStyle;
        }
      };
    };
    var StylesProvider_jss = jss_esm_create({
      plugins: [ jss_plugin_rule_value_function_esm(), jss_plugin_global_esm(), jss_plugin_nested_esm(), jss_plugin_camel_case_esm(), jss_plugin_default_unit_esm(), "undefined" == typeof window ? null : jss_plugin_vendor_prefixer_esm(), jss_plugin_props_sort_esm() ]
    }), generateClassName = function() {
      var options = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {}, _options$disableGloba = options.disableGlobal, disableGlobal = void 0 !== _options$disableGloba && _options$disableGloba, _options$productionPr = options.productionPrefix, productionPrefix = void 0 === _options$productionPr ? "jss" : _options$productionPr, _options$seed = options.seed, seed = void 0 === _options$seed ? "" : _options$seed, seedPrefix = "" === seed ? "" : "".concat(seed, "-"), ruleCounter = 0, getNextCounterId = function() {
        return ruleCounter += 1;
      };
      return function(rule, styleSheet) {
        var name = styleSheet.options.name;
        if (name && 0 === name.indexOf("Mui") && !styleSheet.options.link && !disableGlobal) {
          if (-1 !== pseudoClasses.indexOf(rule.key)) return "Mui-".concat(rule.key);
          var prefix = "".concat(seedPrefix).concat(name, "-").concat(rule.key);
          return styleSheet.options.theme[nested] && "" === seed ? "".concat(prefix, "-").concat(getNextCounterId()) : prefix;
        }
        return "".concat(seedPrefix).concat(productionPrefix).concat(getNextCounterId());
      };
    }(), defaultOptions = {
      disableGeneration: !1,
      generateClassName,
      jss: StylesProvider_jss,
      sheetsCache: null,
      sheetsManager: new Map,
      sheetsRegistry: null
    }, StylesContext = react.createContext(defaultOptions);
    var indexCounter = -1e9;
    const getStylesCreator_noopTheme = {};
    function attach(_ref2, props) {
      var state = _ref2.state, theme = _ref2.theme, stylesOptions = _ref2.stylesOptions, stylesCreator = _ref2.stylesCreator, name = _ref2.name;
      if (!stylesOptions.disableGeneration) {
        var sheetManager = makeStyles_multiKeyStore.get(stylesOptions.sheetsManager, stylesCreator, theme);
        sheetManager || (sheetManager = {
          refs: 0,
          staticSheet: null,
          dynamicStyles: null
        }, makeStyles_multiKeyStore.set(stylesOptions.sheetsManager, stylesCreator, theme, sheetManager));
        var options = extends_extends({}, stylesCreator.options, stylesOptions, {
          theme,
          flip: "boolean" == typeof stylesOptions.flip ? stylesOptions.flip : "rtl" === theme.direction
        });
        options.generateId = options.serverGenerateClassName || options.generateClassName;
        var sheetsRegistry = stylesOptions.sheetsRegistry;
        if (0 === sheetManager.refs) {
          var staticSheet;
          stylesOptions.sheetsCache && (staticSheet = makeStyles_multiKeyStore.get(stylesOptions.sheetsCache, stylesCreator, theme));
          var styles = stylesCreator.create(theme, name);
          staticSheet || ((staticSheet = stylesOptions.jss.createStyleSheet(styles, extends_extends({
            link: !1
          }, options))).attach(), stylesOptions.sheetsCache && makeStyles_multiKeyStore.set(stylesOptions.sheetsCache, stylesCreator, theme, staticSheet)), 
          sheetsRegistry && sheetsRegistry.add(staticSheet), sheetManager.staticSheet = staticSheet, 
          sheetManager.dynamicStyles = getDynamicStyles(styles);
        }
        if (sheetManager.dynamicStyles) {
          var dynamicSheet = stylesOptions.jss.createStyleSheet(sheetManager.dynamicStyles, extends_extends({
            link: !0
          }, options));
          dynamicSheet.update(props), dynamicSheet.attach(), state.dynamicSheet = dynamicSheet, 
          state.classes = mergeClasses({
            baseClasses: sheetManager.staticSheet.classes,
            newClasses: dynamicSheet.classes
          }), sheetsRegistry && sheetsRegistry.add(dynamicSheet);
        } else state.classes = sheetManager.staticSheet.classes;
        sheetManager.refs += 1;
      }
    }
    function makeStyles(stylesOrCreator) {
      var options = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {}, name = options.name, classNamePrefixOption = options.classNamePrefix, Component = options.Component, _options$defaultTheme = options.defaultTheme, defaultTheme = void 0 === _options$defaultTheme ? getStylesCreator_noopTheme : _options$defaultTheme, stylesOptions2 = objectWithoutProperties_objectWithoutProperties(options, [ "name", "classNamePrefix", "Component", "defaultTheme" ]), stylesCreator = function(stylesOrCreator) {
        var themingEnabled = "function" == typeof stylesOrCreator;
        return {
          create: function(theme, name) {
            var styles;
            try {
              styles = themingEnabled ? stylesOrCreator(theme) : stylesOrCreator;
            } catch (err) {
              throw err;
            }
            if (!name || !theme.overrides || !theme.overrides[name]) return styles;
            var overrides = theme.overrides[name], stylesWithOverrides = extends_extends({}, styles);
            return Object.keys(overrides).forEach((function(key) {
              stylesWithOverrides[key] = deepmerge(stylesWithOverrides[key], overrides[key]);
            })), stylesWithOverrides;
          },
          options: {}
        };
      }(stylesOrCreator), classNamePrefix = name || classNamePrefixOption || "makeStyles";
      stylesCreator.options = {
        index: indexCounter += 1,
        name,
        meta: classNamePrefix,
        classNamePrefix
      };
      return function() {
        var props = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {}, theme = useTheme() || defaultTheme, stylesOptions = extends_extends({}, react.useContext(StylesContext), stylesOptions2), instance = react.useRef(), shouldUpdate = react.useRef();
        !function(func, values) {
          var output, key = react.useRef([]), currentKey = react.useMemo((function() {
            return {};
          }), values);
          key.current !== currentKey && (key.current = currentKey, output = func()), react.useEffect((function() {
            return function() {
              output && output();
            };
          }), [ currentKey ]);
        }((function() {
          var current = {
            name,
            state: {},
            stylesCreator,
            stylesOptions,
            theme
          };
          return attach(current, props), shouldUpdate.current = !1, instance.current = current, 
          function() {
            !function(_ref4) {
              var state = _ref4.state, theme = _ref4.theme, stylesOptions = _ref4.stylesOptions, stylesCreator = _ref4.stylesCreator;
              if (!stylesOptions.disableGeneration) {
                var sheetManager = makeStyles_multiKeyStore.get(stylesOptions.sheetsManager, stylesCreator, theme);
                sheetManager.refs -= 1;
                var sheetsRegistry = stylesOptions.sheetsRegistry;
                0 === sheetManager.refs && (makeStyles_multiKeyStore.delete(stylesOptions.sheetsManager, stylesCreator, theme), 
                stylesOptions.jss.removeStyleSheet(sheetManager.staticSheet), sheetsRegistry && sheetsRegistry.remove(sheetManager.staticSheet)), 
                state.dynamicSheet && (stylesOptions.jss.removeStyleSheet(state.dynamicSheet), sheetsRegistry && sheetsRegistry.remove(state.dynamicSheet));
              }
            }(current);
          };
        }), [ theme, stylesCreator ]), react.useEffect((function() {
          shouldUpdate.current && function(_ref3, props) {
            var state = _ref3.state;
            state.dynamicSheet && state.dynamicSheet.update(props);
          }(instance.current, props), shouldUpdate.current = !0;
        }));
        var classes = function(_ref, classes, Component) {
          var state = _ref.state;
          if (_ref.stylesOptions.disableGeneration) return classes || {};
          state.cacheClasses || (state.cacheClasses = {
            value: null,
            lastProp: null,
            lastJSS: {}
          });
          var generate = !1;
          return state.classes !== state.cacheClasses.lastJSS && (state.cacheClasses.lastJSS = state.classes, 
          generate = !0), classes !== state.cacheClasses.lastProp && (state.cacheClasses.lastProp = classes, 
          generate = !0), generate && (state.cacheClasses.value = mergeClasses({
            baseClasses: state.cacheClasses.lastJSS,
            newClasses: classes,
            Component
          })), state.cacheClasses.value;
        }(instance.current, props.classes, Component);
        return classes;
      };
    }
    function getThemeProps(params) {
      var theme = params.theme, name = params.name, props = params.props;
      if (!theme || !theme.props || !theme.props[name]) return props;
      var propName, defaultProps = theme.props[name];
      for (propName in defaultProps) void 0 === props[propName] && (props[propName] = defaultProps[propName]);
      return props;
    }
    const withStyles_withStyles = function(stylesOrCreator) {
      var options = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {};
      return function(Component) {
        var defaultTheme = options.defaultTheme, _options$withTheme = options.withTheme, withTheme = void 0 !== _options$withTheme && _options$withTheme, name = options.name, stylesOptions = objectWithoutProperties_objectWithoutProperties(options, [ "defaultTheme", "withTheme", "name" ]);
        var classNamePrefix = name, useStyles = makeStyles(stylesOrCreator, extends_extends({
          defaultTheme,
          Component,
          name: name || Component.displayName,
          classNamePrefix
        }, stylesOptions)), WithStyles = react.forwardRef((function(props, ref) {
          props.classes;
          var theme, innerRef = props.innerRef, other = objectWithoutProperties_objectWithoutProperties(props, [ "classes", "innerRef" ]), classes = useStyles(extends_extends({}, Component.defaultProps, props)), more = other;
          return ("string" == typeof name || withTheme) && (theme = useTheme() || defaultTheme, 
          name && (more = getThemeProps({
            theme,
            name,
            props: other
          })), withTheme && !more.theme && (more.theme = theme)), react.createElement(Component, extends_extends({
            ref: innerRef || ref,
            classes
          }, more));
        }));
        return hoist_non_react_statics_cjs_default()(WithStyles, Component), WithStyles;
      };
    };
    const styles_defaultTheme = styles_createTheme();
    const styles_withStyles = function(stylesOrCreator, options) {
      return withStyles_withStyles(stylesOrCreator, extends_extends({
        defaultTheme: styles_defaultTheme
      }, options));
    };
    function capitalize(string) {
      if ("string" != typeof string) throw new Error(formatMuiErrorMessage(7));
      return string.charAt(0).toUpperCase() + string.slice(1);
    }
    var CircularProgress = react.forwardRef((function(props, ref) {
      var classes = props.classes, className = props.className, _props$color = props.color, color = void 0 === _props$color ? "primary" : _props$color, _props$disableShrink = props.disableShrink, disableShrink = void 0 !== _props$disableShrink && _props$disableShrink, _props$size = props.size, size = void 0 === _props$size ? 40 : _props$size, style = props.style, _props$thickness = props.thickness, thickness = void 0 === _props$thickness ? 3.6 : _props$thickness, _props$value = props.value, value = void 0 === _props$value ? 0 : _props$value, _props$variant = props.variant, variant = void 0 === _props$variant ? "indeterminate" : _props$variant, other = objectWithoutProperties_objectWithoutProperties(props, [ "classes", "className", "color", "disableShrink", "size", "style", "thickness", "value", "variant" ]), circleStyle = {}, rootStyle = {}, rootProps = {};
      if ("determinate" === variant || "static" === variant) {
        var circumference = 2 * Math.PI * ((44 - thickness) / 2);
        circleStyle.strokeDasharray = circumference.toFixed(3), rootProps["aria-valuenow"] = Math.round(value), 
        circleStyle.strokeDashoffset = "".concat(((100 - value) / 100 * circumference).toFixed(3), "px"), 
        rootStyle.transform = "rotate(-90deg)";
      }
      return react.createElement("div", extends_extends({
        className: clsx_m(classes.root, className, "inherit" !== color && classes["color".concat(capitalize(color))], {
          determinate: classes.determinate,
          indeterminate: classes.indeterminate,
          static: classes.static
        }[variant]),
        style: extends_extends({
          width: size,
          height: size
        }, rootStyle, style),
        ref,
        role: "progressbar"
      }, rootProps, other), react.createElement("svg", {
        className: classes.svg,
        viewBox: "".concat(22, " ").concat(22, " ").concat(44, " ").concat(44)
      }, react.createElement("circle", {
        className: clsx_m(classes.circle, disableShrink && classes.circleDisableShrink, {
          determinate: classes.circleDeterminate,
          indeterminate: classes.circleIndeterminate,
          static: classes.circleStatic
        }[variant]),
        style: circleStyle,
        cx: 44,
        cy: 44,
        r: (44 - thickness) / 2,
        fill: "none",
        strokeWidth: thickness
      })));
    }));
    const CircularProgress_CircularProgress = styles_withStyles((function(theme) {
      return {
        root: {
          display: "inline-block"
        },
        static: {
          transition: theme.transitions.create("transform")
        },
        indeterminate: {
          animation: "$circular-rotate 1.4s linear infinite"
        },
        determinate: {
          transition: theme.transitions.create("transform")
        },
        colorPrimary: {
          color: theme.palette.primary.main
        },
        colorSecondary: {
          color: theme.palette.secondary.main
        },
        svg: {
          display: "block"
        },
        circle: {
          stroke: "currentColor"
        },
        circleStatic: {
          transition: theme.transitions.create("stroke-dashoffset")
        },
        circleIndeterminate: {
          animation: "$circular-dash 1.4s ease-in-out infinite",
          strokeDasharray: "80px, 200px",
          strokeDashoffset: "0px"
        },
        circleDeterminate: {
          transition: theme.transitions.create("stroke-dashoffset")
        },
        "@keyframes circular-rotate": {
          "0%": {
            transformOrigin: "50% 50%"
          },
          "100%": {
            transform: "rotate(360deg)"
          }
        },
        "@keyframes circular-dash": {
          "0%": {
            strokeDasharray: "1px, 200px",
            strokeDashoffset: "0px"
          },
          "50%": {
            strokeDasharray: "100px, 200px",
            strokeDashoffset: "-15px"
          },
          "100%": {
            strokeDasharray: "100px, 200px",
            strokeDashoffset: "-125px"
          }
        },
        circleDisableShrink: {
          animation: "none"
        }
      };
    }), {
      name: "MuiCircularProgress",
      flip: !1
    })(CircularProgress);
    var _PullRequestActions_importButtonPayload, _PullRequestActionsSyncPRMutation, _PullRequestActions_payload, _PullRequestActions_data;
    const GHSTACK_BRANCH_PREFIX = "gh/";
    function PullRequestImportButton(props) {
      var _pr$isImportable, _codesyncConfigs$0$me, _codesyncConfigs$0$me2;
      const data = (0, react_relay.useFragment)((void 0 !== _PullRequestActions_importButtonPayload || (_PullRequestActions_importButtonPayload = __webpack_require__(5442)).hash && "eb8fcb181259875eab4a74e2eddba645" !== _PullRequestActions_importButtonPayload.hash && console.error("The definition of 'PullRequestActions_importButtonPayload' appears to have changed. Run `relay-compiler` to update the generated files to receive the expected data."), 
      _PullRequestActions_importButtonPayload), props.payload), [commitSyncMutation, isSyncingPR] = (0, 
      react_relay.useMutation)((void 0 !== _PullRequestActionsSyncPRMutation || (_PullRequestActionsSyncPRMutation = __webpack_require__(2085)).hash && "8a775d747d4e0277a239a02d1ea4d893" !== _PullRequestActionsSyncPRMutation.hash && console.error("The definition of 'PullRequestActionsSyncPRMutation' appears to have changed. Run `relay-compiler` to update the generated files to receive the expected data."), 
      _PullRequestActionsSyncPRMutation)), [mutationPR, setMutationPR] = (0, react.useState)(null), pr = null != mutationPR ? mutationPR : null == data ? void 0 : data.pr, isImportable = null !== (_pr$isImportable = null == pr ? void 0 : pr.isImportable) && void 0 !== _pr$isImportable && _pr$isImportable;
      let codesyncConfigs = [];
      var _data$repo$codesyncCo, _data$repo;
      null != pr && null != pr.codesyncConfig ? codesyncConfigs = [ pr.codesyncConfig ] : codesyncConfigs = null !== (_data$repo$codesyncCo = null == data || null === (_data$repo = data.repo) || void 0 === _data$repo ? void 0 : _data$repo.codesyncConfigs) && void 0 !== _data$repo$codesyncCo ? _data$repo$codesyncCo : [];
      const browserWindow = {
        x: window.screenX,
        y: window.screenY,
        width: window.outerWidth,
        height: window.outerHeight
      };
      let buttonClickHandler = () => ShowPopupMessageHandler.send({
        url: nullthrows(null == pr ? void 0 : pr.importToDiffUri),
        browserWindow
      }), maybeImportDisabledMessage = null;
      if ((null != mutationPR || isSyncingPR) && (maybeImportDisabledMessage = react.createElement(CircularProgress_CircularProgress, {
        size: 20
      })), null == pr) buttonClickHandler = () => {
        var _data$repo$id, _data$repo2;
        const res = nullthrows(window.location.href.match(new RegExp("/pull/(\\d+)/?"))), number = parseInt(res[1], 10);
        commitSyncMutation({
          variables: {
            input: {
              repo_id: null !== (_data$repo$id = null == data || null === (_data$repo2 = data.repo) || void 0 === _data$repo2 ? void 0 : _data$repo2.id) && void 0 !== _data$repo$id ? _data$repo$id : "0",
              pull_request_number: number
            }
          },
          onCompleted: response => {
            var _response$sync, _response$sync2;
            ShowPopupMessageHandler.send({
              url: nullthrows(null === (_response$sync = response.sync) || void 0 === _response$sync || null === (_response$sync = _response$sync.pr) || void 0 === _response$sync ? void 0 : _response$sync.importToDiffUri),
              browserWindow
            }), setMutationPR(null === (_response$sync2 = response.sync) || void 0 === _response$sync2 ? void 0 : _response$sync2.pr);
          }
        });
      }; else if (!isImportable) {
        const baseRef = null == pr ? void 0 : pr.baseRef;
        if (null == baseRef) maybeImportDisabledMessage = "This PR is invalid. It does not have a base ref set! Please notify the FB Open Source Team"; else {
          if (-1 === baseRef.indexOf(GHSTACK_BRANCH_PREFIX)) return null;
          maybeImportDisabledMessage = "This PR cannot be imported. It appears to be using ghstack. Please use ghimport to import it.";
        }
      }
      return 0 === codesyncConfigs.length ? null : react.createElement(react.Fragment, null, react.createElement("button", {
        onClick: buttonClickHandler,
        className: "btn btn-primary",
        type: "button",
        disabled: isSyncingPR || null != mutationPR || null != pr && !isImportable
      }, "Import to ", null !== (_codesyncConfigs$0$me = null === (_codesyncConfigs$0$me2 = codesyncConfigs[0].metaInternalRepo) || void 0 === _codesyncConfigs$0$me2 ? void 0 : _codesyncConfigs$0$me2.name) && void 0 !== _codesyncConfigs$0$me ? _codesyncConfigs$0$me : "Phabricator"), " ", maybeImportDisabledMessage);
    }
    function PullRequestActions(props) {
      const data = (0, react_relay.useFragment)((void 0 !== _PullRequestActions_payload || (_PullRequestActions_payload = __webpack_require__(8342)).hash && "011ed6c2341a788c701f23fc810e840b" !== _PullRequestActions_payload.hash && console.error("The definition of 'PullRequestActions_payload' appears to have changed. Run `relay-compiler` to update the generated files to receive the expected data."), 
      _PullRequestActions_payload), props.payload);
      return react.createElement(react.Fragment, null, react.createElement("div", {
        className: "merge-message facehub-import-buttons"
      }, react.createElement(PullRequestImportButton, {
        payload: data,
        showErrorMessages: !0
      })));
    }
    const features_PullRequestActions_handle = (url, dataKey) => {
      var _data$pr$isClosed, _data$pr, _data$pr$isImportable, _data$pr2, _data$repo$codesyncCo2, _data$repo3, _data$pr3, _data$repo4, _data$pr$issue$labels, _data$pr4;
      const data = (0, react_relay.readInlineData)((void 0 !== _PullRequestActions_data || (_PullRequestActions_data = __webpack_require__(4275)).hash && "f219fd33ea06e4847ce2f8d0d231c7a3" !== _PullRequestActions_data.hash && console.error("The definition of 'PullRequestActions_data' appears to have changed. Run `relay-compiler` to update the generated files to receive the expected data."), 
      _PullRequestActions_data), dataKey), isClosed = null !== (_data$pr$isClosed = null == data || null === (_data$pr = data.pr) || void 0 === _data$pr ? void 0 : _data$pr.isClosed) && void 0 !== _data$pr$isClosed && _data$pr$isClosed, isImportable = null !== (_data$pr$isImportable = null == data || null === (_data$pr2 = data.pr) || void 0 === _data$pr2 ? void 0 : _data$pr2.isImportable) && void 0 !== _data$pr$isImportable && _data$pr$isImportable, codesyncConfigs = null !== (_data$repo$codesyncCo2 = null == data || null === (_data$repo3 = data.repo) || void 0 === _data$repo3 ? void 0 : _data$repo3.codesyncConfigs) && void 0 !== _data$repo$codesyncCo2 ? _data$repo$codesyncCo2 : [];
      if (isClosed || 0 === codesyncConfigs.length) return;
      const baseRef = null == data || null === (_data$pr3 = data.pr) || void 0 === _data$pr3 ? void 0 : _data$pr3.baseRef;
      if (!isImportable && null != baseRef && -1 === baseRef.indexOf(GHSTACK_BRANCH_PREFIX)) return;
      const isDiffTrainSetup = !0 === (null == data || null === (_data$repo4 = data.repo) || void 0 === _data$repo4 ? void 0 : _data$repo4.isDiffTrainSetup), allowsDirectMerges = null !== (_data$pr$issue$labels = null == data || null === (_data$pr4 = data.pr) || void 0 === _data$pr4 || null === (_data$pr4 = _data$pr4.issue) || void 0 === _data$pr4 ? void 0 : _data$pr4.labels.map((label => label.name)).includes("fh:direct-merge-enabled")) && void 0 !== _data$pr$issue$labels && _data$pr$issue$labels;
      !isDiffTrainSetup && allowsDirectMerges || DOMEnhancer_watch({
        jsClass: "PullRequestActions",
        url,
        selector: ".discussion-timeline-actions",
        onChange: () => {
          if (null != document.querySelector(".mergeability-details")) return isDiffTrainSetup ? (DOMEnhancer_remove({
            jsClass: "PullRequestActions",
            url,
            selector: ".mergeability-details > .merge-message > .alt-merge-options"
          }), DOMEnhancer_append({
            jsClass: "PullRequestActions",
            url,
            selector: ".mergeability-details > .merge-message > .select-menu",
            dedupeKey: "import-button",
            htmlWrapper: document.createElement("span"),
            component: react.createElement(PullRequestImportButton, {
              payload: data,
              showErrorMessages: !0
            })
          }), void DOMEnhancer_append({
            jsClass: "PullRequestActions",
            url,
            selector: ".mergeability-details > .merge-message:has(> button[disabled=disabled])",
            dedupeKey: "import-button-disabled",
            htmlWrapper: document.createElement("span"),
            component: react.createElement(PullRequestImportButton, {
              payload: data,
              showErrorMessages: !0
            })
          })) : (DOMEnhancer_remove({
            jsClass: "PullRequestActions",
            url,
            selector: ".mergeability-details > .merge-message"
          }), void DOMEnhancer_append({
            jsClass: "PullRequestActions",
            url,
            selector: ".mergeability-details",
            dedupeKey: "import-button-row",
            component: react.createElement(PullRequestActions, {
              payload: data
            })
          }));
          const mergeboxMergeUISelector = "react-partial[partial-name=mergebox-partial] > div div.border.rounded-2 > div", mergeboxMergeUI = document.querySelector(mergeboxMergeUISelector);
          null == mergeboxMergeUI || isDiffTrainSetup || DOMEnhancer_remove({
            jsClass: "PullRequestActions",
            url,
            selector: mergeboxMergeUISelector
          });
          const newNode = document.createElement("section");
          newNode.classList.add("p-3", "bgColor-muted", "borderColor-muted", "rounded-bottom-2"), 
          null != mergeboxMergeUI && isDiffTrainSetup && newNode.classList.add("border-top"), 
          DOMEnhancer_append({
            jsClass: "PullRequestActions",
            url,
            selector: "react-partial[partial-name=mergebox-partial] > div div.border.rounded-2",
            htmlWrapper: newNode,
            dedupeKey: "import-button-row",
            component: react.createElement(PullRequestImportButton, {
              payload: data,
              showErrorMessages: !0
            })
          });
        }
      });
    };
    var _ContextMenus_data;
    const ContextMenus_handle = dataKey => {
      var _data$uris;
      const data = (0, react_relay.readInlineData)((void 0 !== _ContextMenus_data || (_ContextMenus_data = __webpack_require__(111)).hash && "c7872dd745e21a3bfbe63db07cd3b5fe" !== _ContextMenus_data.hash && console.error("The definition of 'ContextMenus_data' appears to have changed. Run `relay-compiler` to update the generated files to receive the expected data."), 
      _ContextMenus_data), dataKey), menus = null == data || null === (_data$uris = data.uris) || void 0 === _data$uris ? void 0 : _data$uris.map((({uri, label}) => null == uri || null == label ? null : {
        label,
        uri
      })).filter(Boolean);
      null != menus && ShowContextMenusMessageHandler.send({
        menus
      });
    };
    function ownerDocument(node) {
      return node && node.ownerDocument || document;
    }
    function setRef(ref, value) {
      "function" == typeof ref ? ref(value) : ref && (ref.current = value);
    }
    function useForkRef(refA, refB) {
      return react.useMemo((function() {
        return null == refA && null == refB ? null : function(refValue) {
          setRef(refA, refValue), setRef(refB, refValue);
        };
      }), [ refA, refB ]);
    }
    var useEnhancedEffect = "undefined" != typeof window ? react.useLayoutEffect : react.useEffect;
    const Portal_Portal = react.forwardRef((function(props, ref) {
      var children = props.children, container = props.container, _props$disablePortal = props.disablePortal, disablePortal = void 0 !== _props$disablePortal && _props$disablePortal, onRendered = props.onRendered, _React$useState = react.useState(null), mountNode = _React$useState[0], setMountNode = _React$useState[1], handleRef = useForkRef(react.isValidElement(children) ? children.ref : null, ref);
      return useEnhancedEffect((function() {
        disablePortal || setMountNode(function(container) {
          return container = "function" == typeof container ? container() : container, react_dom.findDOMNode(container);
        }(container) || document.body);
      }), [ container, disablePortal ]), useEnhancedEffect((function() {
        if (mountNode && !disablePortal) return setRef(ref, mountNode), function() {
          setRef(ref, null);
        };
      }), [ ref, mountNode, disablePortal ]), useEnhancedEffect((function() {
        onRendered && (mountNode || disablePortal) && onRendered();
      }), [ onRendered, mountNode, disablePortal ]), disablePortal ? react.isValidElement(children) ? react.cloneElement(children, {
        ref: handleRef
      }) : children : mountNode ? react_dom.createPortal(children, mountNode) : mountNode;
    }));
    function createChainedFunction() {
      for (var _len = arguments.length, funcs = new Array(_len), _key = 0; _key < _len; _key++) funcs[_key] = arguments[_key];
      return funcs.reduce((function(acc, func) {
        return null == func ? acc : function() {
          for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) args[_key2] = arguments[_key2];
          acc.apply(this, args), func.apply(this, args);
        };
      }), (function() {}));
    }
    var useEventCallback_useEnhancedEffect = "undefined" != typeof window ? react.useLayoutEffect : react.useEffect;
    function useEventCallback(fn) {
      var ref = react.useRef(fn);
      return useEventCallback_useEnhancedEffect((function() {
        ref.current = fn;
      })), react.useCallback((function() {
        return ref.current.apply(void 0, arguments);
      }), []);
    }
    function isOverflowing(container) {
      var node, doc = ownerDocument(container);
      return doc.body === container ? (node = doc, ownerDocument(node).defaultView || window).innerWidth > doc.documentElement.clientWidth : container.scrollHeight > container.clientHeight;
    }
    function ariaHidden(node, show) {
      show ? node.setAttribute("aria-hidden", "true") : node.removeAttribute("aria-hidden");
    }
    function getPaddingRight(node) {
      return parseInt(window.getComputedStyle(node)["padding-right"], 10) || 0;
    }
    function ariaHiddenSiblings(container, mountNode, currentNode) {
      var show = arguments.length > 4 ? arguments[4] : void 0, blacklist = [ mountNode, currentNode ].concat(toConsumableArray_toConsumableArray(arguments.length > 3 && void 0 !== arguments[3] ? arguments[3] : [])), blacklistTagNames = [ "TEMPLATE", "SCRIPT", "STYLE" ];
      [].forEach.call(container.children, (function(node) {
        1 === node.nodeType && -1 === blacklist.indexOf(node) && -1 === blacklistTagNames.indexOf(node.tagName) && ariaHidden(node, show);
      }));
    }
    function findIndexOf(containerInfo, callback) {
      var idx = -1;
      return containerInfo.some((function(item, index) {
        return !!callback(item) && (idx = index, !0);
      })), idx;
    }
    function handleContainer(containerInfo, props) {
      var fixedNodes, restoreStyle = [], restorePaddings = [], container = containerInfo.container;
      if (!props.disableScrollLock) {
        if (isOverflowing(container)) {
          var scrollbarSize = function() {
            var scrollDiv = document.createElement("div");
            scrollDiv.style.width = "99px", scrollDiv.style.height = "99px", scrollDiv.style.position = "absolute", 
            scrollDiv.style.top = "-9999px", scrollDiv.style.overflow = "scroll", document.body.appendChild(scrollDiv);
            var scrollbarSize = scrollDiv.offsetWidth - scrollDiv.clientWidth;
            return document.body.removeChild(scrollDiv), scrollbarSize;
          }();
          restoreStyle.push({
            value: container.style.paddingRight,
            key: "padding-right",
            el: container
          }), container.style["padding-right"] = "".concat(getPaddingRight(container) + scrollbarSize, "px"), 
          fixedNodes = ownerDocument(container).querySelectorAll(".mui-fixed"), [].forEach.call(fixedNodes, (function(node) {
            restorePaddings.push(node.style.paddingRight), node.style.paddingRight = "".concat(getPaddingRight(node) + scrollbarSize, "px");
          }));
        }
        var parent = container.parentElement, scrollContainer = "HTML" === parent.nodeName && "scroll" === window.getComputedStyle(parent)["overflow-y"] ? parent : container;
        restoreStyle.push({
          value: scrollContainer.style.overflow,
          key: "overflow",
          el: scrollContainer
        }), scrollContainer.style.overflow = "hidden";
      }
      return function() {
        fixedNodes && [].forEach.call(fixedNodes, (function(node, i) {
          restorePaddings[i] ? node.style.paddingRight = restorePaddings[i] : node.style.removeProperty("padding-right");
        })), restoreStyle.forEach((function(_ref) {
          var value = _ref.value, el = _ref.el, key = _ref.key;
          value ? el.style.setProperty(key, value) : el.style.removeProperty(key);
        }));
      };
    }
    var ModalManager = function() {
      function ModalManager() {
        !function(instance, Constructor) {
          if (!(instance instanceof Constructor)) throw new TypeError("Cannot call a class as a function");
        }(this, ModalManager), this.modals = [], this.containers = [];
      }
      return createClass_createClass(ModalManager, [ {
        key: "add",
        value: function(modal, container) {
          var modalIndex = this.modals.indexOf(modal);
          if (-1 !== modalIndex) return modalIndex;
          modalIndex = this.modals.length, this.modals.push(modal), modal.modalRef && ariaHidden(modal.modalRef, !1);
          var hiddenSiblingNodes = function(container) {
            var hiddenSiblings = [];
            return [].forEach.call(container.children, (function(node) {
              node.getAttribute && "true" === node.getAttribute("aria-hidden") && hiddenSiblings.push(node);
            })), hiddenSiblings;
          }(container);
          ariaHiddenSiblings(container, modal.mountNode, modal.modalRef, hiddenSiblingNodes, !0);
          var containerIndex = findIndexOf(this.containers, (function(item) {
            return item.container === container;
          }));
          return -1 !== containerIndex ? (this.containers[containerIndex].modals.push(modal), 
          modalIndex) : (this.containers.push({
            modals: [ modal ],
            container,
            restore: null,
            hiddenSiblingNodes
          }), modalIndex);
        }
      }, {
        key: "mount",
        value: function(modal, props) {
          var containerIndex = findIndexOf(this.containers, (function(item) {
            return -1 !== item.modals.indexOf(modal);
          })), containerInfo = this.containers[containerIndex];
          containerInfo.restore || (containerInfo.restore = handleContainer(containerInfo, props));
        }
      }, {
        key: "remove",
        value: function(modal) {
          var modalIndex = this.modals.indexOf(modal);
          if (-1 === modalIndex) return modalIndex;
          var containerIndex = findIndexOf(this.containers, (function(item) {
            return -1 !== item.modals.indexOf(modal);
          })), containerInfo = this.containers[containerIndex];
          if (containerInfo.modals.splice(containerInfo.modals.indexOf(modal), 1), this.modals.splice(modalIndex, 1), 
          0 === containerInfo.modals.length) containerInfo.restore && containerInfo.restore(), 
          modal.modalRef && ariaHidden(modal.modalRef, !0), ariaHiddenSiblings(containerInfo.container, modal.mountNode, modal.modalRef, containerInfo.hiddenSiblingNodes, !1), 
          this.containers.splice(containerIndex, 1); else {
            var nextTop = containerInfo.modals[containerInfo.modals.length - 1];
            nextTop.modalRef && ariaHidden(nextTop.modalRef, !1);
          }
          return modalIndex;
        }
      }, {
        key: "isTopModal",
        value: function(modal) {
          return this.modals.length > 0 && this.modals[this.modals.length - 1] === modal;
        }
      } ]), ModalManager;
    }();
    const Unstable_TrapFocus_Unstable_TrapFocus = function(props) {
      var children = props.children, _props$disableAutoFoc = props.disableAutoFocus, disableAutoFocus = void 0 !== _props$disableAutoFoc && _props$disableAutoFoc, _props$disableEnforce = props.disableEnforceFocus, disableEnforceFocus = void 0 !== _props$disableEnforce && _props$disableEnforce, _props$disableRestore = props.disableRestoreFocus, disableRestoreFocus = void 0 !== _props$disableRestore && _props$disableRestore, getDoc = props.getDoc, isEnabled = props.isEnabled, open = props.open, ignoreNextEnforceFocus = react.useRef(), sentinelStart = react.useRef(null), sentinelEnd = react.useRef(null), nodeToRestore = react.useRef(), rootRef = react.useRef(null), handleOwnRef = react.useCallback((function(instance) {
        rootRef.current = react_dom.findDOMNode(instance);
      }), []), handleRef = useForkRef(children.ref, handleOwnRef), prevOpenRef = react.useRef();
      return react.useEffect((function() {
        prevOpenRef.current = open;
      }), [ open ]), !prevOpenRef.current && open && "undefined" != typeof window && (nodeToRestore.current = getDoc().activeElement), 
      react.useEffect((function() {
        if (open) {
          var doc = ownerDocument(rootRef.current);
          disableAutoFocus || !rootRef.current || rootRef.current.contains(doc.activeElement) || (rootRef.current.hasAttribute("tabIndex") || rootRef.current.setAttribute("tabIndex", -1), 
          rootRef.current.focus());
          var contain = function() {
            null !== rootRef.current && (doc.hasFocus() && !disableEnforceFocus && isEnabled() && !ignoreNextEnforceFocus.current ? rootRef.current && !rootRef.current.contains(doc.activeElement) && rootRef.current.focus() : ignoreNextEnforceFocus.current = !1);
          }, loopFocus = function(event) {
            !disableEnforceFocus && isEnabled() && 9 === event.keyCode && doc.activeElement === rootRef.current && (ignoreNextEnforceFocus.current = !0, 
            event.shiftKey ? sentinelEnd.current.focus() : sentinelStart.current.focus());
          };
          doc.addEventListener("focus", contain, !0), doc.addEventListener("keydown", loopFocus, !0);
          var interval = setInterval((function() {
            contain();
          }), 50);
          return function() {
            clearInterval(interval), doc.removeEventListener("focus", contain, !0), doc.removeEventListener("keydown", loopFocus, !0), 
            disableRestoreFocus || (nodeToRestore.current && nodeToRestore.current.focus && nodeToRestore.current.focus(), 
            nodeToRestore.current = null);
          };
        }
      }), [ disableAutoFocus, disableEnforceFocus, disableRestoreFocus, isEnabled, open ]), 
      react.createElement(react.Fragment, null, react.createElement("div", {
        tabIndex: 0,
        ref: sentinelStart,
        "data-test": "sentinelStart"
      }), react.cloneElement(children, {
        ref: handleRef
      }), react.createElement("div", {
        tabIndex: 0,
        ref: sentinelEnd,
        "data-test": "sentinelEnd"
      }));
    };
    var SimpleBackdrop_styles = {
      root: {
        zIndex: -1,
        position: "fixed",
        right: 0,
        bottom: 0,
        top: 0,
        left: 0,
        backgroundColor: "rgba(0, 0, 0, 0.5)",
        WebkitTapHighlightColor: "transparent"
      },
      invisible: {
        backgroundColor: "transparent"
      }
    };
    const Modal_SimpleBackdrop = react.forwardRef((function(props, ref) {
      var _props$invisible = props.invisible, invisible = void 0 !== _props$invisible && _props$invisible, open = props.open, other = objectWithoutProperties_objectWithoutProperties(props, [ "invisible", "open" ]);
      return open ? react.createElement("div", extends_extends({
        "aria-hidden": !0,
        ref
      }, other, {
        style: extends_extends({}, SimpleBackdrop_styles.root, invisible ? SimpleBackdrop_styles.invisible : {}, other.style)
      })) : null;
    }));
    var defaultManager = new ModalManager, Modal = react.forwardRef((function(inProps, ref) {
      var theme = useTheme(), props = getThemeProps({
        name: "MuiModal",
        props: extends_extends({}, inProps),
        theme
      }), _props$BackdropCompon = props.BackdropComponent, BackdropComponent = void 0 === _props$BackdropCompon ? Modal_SimpleBackdrop : _props$BackdropCompon, BackdropProps = props.BackdropProps, children = props.children, _props$closeAfterTran = props.closeAfterTransition, closeAfterTransition = void 0 !== _props$closeAfterTran && _props$closeAfterTran, container = props.container, _props$disableAutoFoc = props.disableAutoFocus, disableAutoFocus = void 0 !== _props$disableAutoFoc && _props$disableAutoFoc, _props$disableBackdro = props.disableBackdropClick, disableBackdropClick = void 0 !== _props$disableBackdro && _props$disableBackdro, _props$disableEnforce = props.disableEnforceFocus, disableEnforceFocus = void 0 !== _props$disableEnforce && _props$disableEnforce, _props$disableEscapeK = props.disableEscapeKeyDown, disableEscapeKeyDown = void 0 !== _props$disableEscapeK && _props$disableEscapeK, _props$disablePortal = props.disablePortal, disablePortal = void 0 !== _props$disablePortal && _props$disablePortal, _props$disableRestore = props.disableRestoreFocus, disableRestoreFocus = void 0 !== _props$disableRestore && _props$disableRestore, _props$disableScrollL = props.disableScrollLock, disableScrollLock = void 0 !== _props$disableScrollL && _props$disableScrollL, _props$hideBackdrop = props.hideBackdrop, hideBackdrop = void 0 !== _props$hideBackdrop && _props$hideBackdrop, _props$keepMounted = props.keepMounted, keepMounted = void 0 !== _props$keepMounted && _props$keepMounted, _props$manager = props.manager, manager = void 0 === _props$manager ? defaultManager : _props$manager, onBackdropClick = props.onBackdropClick, onClose = props.onClose, onEscapeKeyDown = props.onEscapeKeyDown, onRendered = props.onRendered, open = props.open, other = objectWithoutProperties_objectWithoutProperties(props, [ "BackdropComponent", "BackdropProps", "children", "closeAfterTransition", "container", "disableAutoFocus", "disableBackdropClick", "disableEnforceFocus", "disableEscapeKeyDown", "disablePortal", "disableRestoreFocus", "disableScrollLock", "hideBackdrop", "keepMounted", "manager", "onBackdropClick", "onClose", "onEscapeKeyDown", "onRendered", "open" ]), _React$useState = react.useState(!0), exited = _React$useState[0], setExited = _React$useState[1], modal = react.useRef({}), mountNodeRef = react.useRef(null), modalRef = react.useRef(null), handleRef = useForkRef(modalRef, ref), hasTransition = function(props) {
        return !!props.children && props.children.props.hasOwnProperty("in");
      }(props), getDoc = function() {
        return ownerDocument(mountNodeRef.current);
      }, getModal = function() {
        return modal.current.modalRef = modalRef.current, modal.current.mountNode = mountNodeRef.current, 
        modal.current;
      }, handleMounted = function() {
        manager.mount(getModal(), {
          disableScrollLock
        }), modalRef.current.scrollTop = 0;
      }, handleOpen = useEventCallback((function() {
        var resolvedContainer = function(container) {
          return container = "function" == typeof container ? container() : container, react_dom.findDOMNode(container);
        }(container) || getDoc().body;
        manager.add(getModal(), resolvedContainer), modalRef.current && handleMounted();
      })), isTopModal = react.useCallback((function() {
        return manager.isTopModal(getModal());
      }), [ manager ]), handlePortalRef = useEventCallback((function(node) {
        mountNodeRef.current = node, node && (onRendered && onRendered(), open && isTopModal() ? handleMounted() : ariaHidden(modalRef.current, !0));
      })), handleClose = react.useCallback((function() {
        manager.remove(getModal());
      }), [ manager ]);
      if (react.useEffect((function() {
        return function() {
          handleClose();
        };
      }), [ handleClose ]), react.useEffect((function() {
        open ? handleOpen() : hasTransition && closeAfterTransition || handleClose();
      }), [ open, handleClose, hasTransition, closeAfterTransition, handleOpen ]), !keepMounted && !open && (!hasTransition || exited)) return null;
      var inlineStyle = function(theme) {
        return {
          root: {
            position: "fixed",
            zIndex: theme.zIndex.modal,
            right: 0,
            bottom: 0,
            top: 0,
            left: 0
          },
          hidden: {
            visibility: "hidden"
          }
        };
      }(theme || {
        zIndex: styles_zIndex
      }), childProps = {};
      return void 0 === children.props.tabIndex && (childProps.tabIndex = children.props.tabIndex || "-1"), 
      hasTransition && (childProps.onEnter = createChainedFunction((function() {
        setExited(!1);
      }), children.props.onEnter), childProps.onExited = createChainedFunction((function() {
        setExited(!0), closeAfterTransition && handleClose();
      }), children.props.onExited)), react.createElement(Portal_Portal, {
        ref: handlePortalRef,
        container,
        disablePortal
      }, react.createElement("div", extends_extends({
        ref: handleRef,
        onKeyDown: function(event) {
          "Escape" === event.key && isTopModal() && (onEscapeKeyDown && onEscapeKeyDown(event), 
          disableEscapeKeyDown || (event.stopPropagation(), onClose && onClose(event, "escapeKeyDown")));
        },
        role: "presentation"
      }, other, {
        style: extends_extends({}, inlineStyle.root, !open && exited ? inlineStyle.hidden : {}, other.style)
      }), hideBackdrop ? null : react.createElement(BackdropComponent, extends_extends({
        open,
        onClick: function(event) {
          event.target === event.currentTarget && (onBackdropClick && onBackdropClick(event), 
          !disableBackdropClick && onClose && onClose(event, "backdropClick"));
        }
      }, BackdropProps)), react.createElement(Unstable_TrapFocus_Unstable_TrapFocus, {
        disableEnforceFocus,
        disableAutoFocus,
        disableRestoreFocus,
        getDoc,
        isEnabled: isTopModal,
        open
      }, react.cloneElement(children, childProps))));
    }));
    const Modal_Modal = Modal, config_disabled = !1, TransitionGroupContext = react.createContext(null);
    var Transition = function(_React$Component) {
      function Transition(props, context) {
        var _this;
        _this = _React$Component.call(this, props, context) || this;
        var initialStatus, appear = context && !context.isMounting ? props.enter : props.appear;
        return _this.appearStatus = null, props.in ? appear ? (initialStatus = "exited", 
        _this.appearStatus = "entering") : initialStatus = "entered" : initialStatus = props.unmountOnExit || props.mountOnEnter ? "unmounted" : "exited", 
        _this.state = {
          status: initialStatus
        }, _this.nextCallback = null, _this;
      }
      _inheritsLoose(Transition, _React$Component), Transition.getDerivedStateFromProps = function(_ref, prevState) {
        return _ref.in && "unmounted" === prevState.status ? {
          status: "exited"
        } : null;
      };
      var _proto = Transition.prototype;
      return _proto.componentDidMount = function() {
        this.updateStatus(!0, this.appearStatus);
      }, _proto.componentDidUpdate = function(prevProps) {
        var nextStatus = null;
        if (prevProps !== this.props) {
          var status = this.state.status;
          this.props.in ? "entering" !== status && "entered" !== status && (nextStatus = "entering") : "entering" !== status && "entered" !== status || (nextStatus = "exiting");
        }
        this.updateStatus(!1, nextStatus);
      }, _proto.componentWillUnmount = function() {
        this.cancelNextCallback();
      }, _proto.getTimeouts = function() {
        var exit, enter, appear, timeout = this.props.timeout;
        return exit = enter = appear = timeout, null != timeout && "number" != typeof timeout && (exit = timeout.exit, 
        enter = timeout.enter, appear = void 0 !== timeout.appear ? timeout.appear : enter), 
        {
          exit,
          enter,
          appear
        };
      }, _proto.updateStatus = function(mounting, nextStatus) {
        void 0 === mounting && (mounting = !1), null !== nextStatus ? (this.cancelNextCallback(), 
        "entering" === nextStatus ? this.performEnter(mounting) : this.performExit()) : this.props.unmountOnExit && "exited" === this.state.status && this.setState({
          status: "unmounted"
        });
      }, _proto.performEnter = function(mounting) {
        var _this2 = this, enter = this.props.enter, appearing = this.context ? this.context.isMounting : mounting, _ref2 = this.props.nodeRef ? [ appearing ] : [ react_dom.findDOMNode(this), appearing ], maybeNode = _ref2[0], maybeAppearing = _ref2[1], timeouts = this.getTimeouts(), enterTimeout = appearing ? timeouts.appear : timeouts.enter;
        !mounting && !enter || config_disabled ? this.safeSetState({
          status: "entered"
        }, (function() {
          _this2.props.onEntered(maybeNode);
        })) : (this.props.onEnter(maybeNode, maybeAppearing), this.safeSetState({
          status: "entering"
        }, (function() {
          _this2.props.onEntering(maybeNode, maybeAppearing), _this2.onTransitionEnd(enterTimeout, (function() {
            _this2.safeSetState({
              status: "entered"
            }, (function() {
              _this2.props.onEntered(maybeNode, maybeAppearing);
            }));
          }));
        })));
      }, _proto.performExit = function() {
        var _this3 = this, exit = this.props.exit, timeouts = this.getTimeouts(), maybeNode = this.props.nodeRef ? void 0 : react_dom.findDOMNode(this);
        exit && !config_disabled ? (this.props.onExit(maybeNode), this.safeSetState({
          status: "exiting"
        }, (function() {
          _this3.props.onExiting(maybeNode), _this3.onTransitionEnd(timeouts.exit, (function() {
            _this3.safeSetState({
              status: "exited"
            }, (function() {
              _this3.props.onExited(maybeNode);
            }));
          }));
        }))) : this.safeSetState({
          status: "exited"
        }, (function() {
          _this3.props.onExited(maybeNode);
        }));
      }, _proto.cancelNextCallback = function() {
        null !== this.nextCallback && (this.nextCallback.cancel(), this.nextCallback = null);
      }, _proto.safeSetState = function(nextState, callback) {
        callback = this.setNextCallback(callback), this.setState(nextState, callback);
      }, _proto.setNextCallback = function(callback) {
        var _this4 = this, active = !0;
        return this.nextCallback = function(event) {
          active && (active = !1, _this4.nextCallback = null, callback(event));
        }, this.nextCallback.cancel = function() {
          active = !1;
        }, this.nextCallback;
      }, _proto.onTransitionEnd = function(timeout, handler) {
        this.setNextCallback(handler);
        var node = this.props.nodeRef ? this.props.nodeRef.current : react_dom.findDOMNode(this), doesNotHaveTimeoutOrListener = null == timeout && !this.props.addEndListener;
        if (node && !doesNotHaveTimeoutOrListener) {
          if (this.props.addEndListener) {
            var _ref3 = this.props.nodeRef ? [ this.nextCallback ] : [ node, this.nextCallback ], maybeNode = _ref3[0], maybeNextCallback = _ref3[1];
            this.props.addEndListener(maybeNode, maybeNextCallback);
          }
          null != timeout && setTimeout(this.nextCallback, timeout);
        } else setTimeout(this.nextCallback, 0);
      }, _proto.render = function() {
        var status = this.state.status;
        if ("unmounted" === status) return null;
        var _this$props = this.props, children = _this$props.children, childProps = (_this$props.in, 
        _this$props.mountOnEnter, _this$props.unmountOnExit, _this$props.appear, _this$props.enter, 
        _this$props.exit, _this$props.timeout, _this$props.addEndListener, _this$props.onEnter, 
        _this$props.onEntering, _this$props.onEntered, _this$props.onExit, _this$props.onExiting, 
        _this$props.onExited, _this$props.nodeRef, _objectWithoutPropertiesLoose(_this$props, [ "children", "in", "mountOnEnter", "unmountOnExit", "appear", "enter", "exit", "timeout", "addEndListener", "onEnter", "onEntering", "onEntered", "onExit", "onExiting", "onExited", "nodeRef" ]));
        return react.createElement(TransitionGroupContext.Provider, {
          value: null
        }, "function" == typeof children ? children(status, childProps) : react.cloneElement(react.Children.only(children), childProps));
      }, Transition;
    }(react.Component);
    function noop() {}
    Transition.contextType = TransitionGroupContext, Transition.propTypes = {}, Transition.defaultProps = {
      in: !1,
      mountOnEnter: !1,
      unmountOnExit: !1,
      appear: !1,
      enter: !0,
      exit: !0,
      onEnter: noop,
      onEntering: noop,
      onEntered: noop,
      onExit: noop,
      onExiting: noop,
      onExited: noop
    }, Transition.UNMOUNTED = "unmounted", Transition.EXITED = "exited", Transition.ENTERING = "entering", 
    Transition.ENTERED = "entered", Transition.EXITING = "exiting";
    const esm_Transition = Transition;
    function getTransitionProps(props, options) {
      var timeout = props.timeout, _props$style = props.style, style = void 0 === _props$style ? {} : _props$style;
      return {
        duration: style.transitionDuration || "number" == typeof timeout ? timeout : timeout[options.mode] || 0,
        delay: style.transitionDelay
      };
    }
    var Fade_styles = {
      entering: {
        opacity: 1
      },
      entered: {
        opacity: 1
      }
    }, defaultTimeout = {
      enter: duration.enteringScreen,
      exit: duration.leavingScreen
    }, Fade = react.forwardRef((function(props, ref) {
      var children = props.children, _props$disableStrictM = props.disableStrictModeCompat, disableStrictModeCompat = void 0 !== _props$disableStrictM && _props$disableStrictM, inProp = props.in, onEnter = props.onEnter, onEntered = props.onEntered, onEntering = props.onEntering, onExit = props.onExit, onExited = props.onExited, onExiting = props.onExiting, style = props.style, _props$TransitionComp = props.TransitionComponent, TransitionComponent = void 0 === _props$TransitionComp ? esm_Transition : _props$TransitionComp, _props$timeout = props.timeout, timeout = void 0 === _props$timeout ? defaultTimeout : _props$timeout, other = objectWithoutProperties_objectWithoutProperties(props, [ "children", "disableStrictModeCompat", "in", "onEnter", "onEntered", "onEntering", "onExit", "onExited", "onExiting", "style", "TransitionComponent", "timeout" ]), theme = useTheme() || styles_defaultTheme, enableStrictModeCompat = theme.unstable_strictMode && !disableStrictModeCompat, nodeRef = react.useRef(null), foreignRef = useForkRef(children.ref, ref), handleRef = useForkRef(enableStrictModeCompat ? nodeRef : void 0, foreignRef), normalizedTransitionCallback = function(callback) {
        return function(nodeOrAppearing, maybeAppearing) {
          if (callback) {
            var _ref2 = _slicedToArray(enableStrictModeCompat ? [ nodeRef.current, nodeOrAppearing ] : [ nodeOrAppearing, maybeAppearing ], 2), node = _ref2[0], isAppearing = _ref2[1];
            void 0 === isAppearing ? callback(node) : callback(node, isAppearing);
          }
        };
      }, handleEntering = normalizedTransitionCallback(onEntering), handleEnter = normalizedTransitionCallback((function(node, isAppearing) {
        !function(node) {
          node.scrollTop;
        }(node);
        var transitionProps = getTransitionProps({
          style,
          timeout
        }, {
          mode: "enter"
        });
        node.style.webkitTransition = theme.transitions.create("opacity", transitionProps), 
        node.style.transition = theme.transitions.create("opacity", transitionProps), onEnter && onEnter(node, isAppearing);
      })), handleEntered = normalizedTransitionCallback(onEntered), handleExiting = normalizedTransitionCallback(onExiting), handleExit = normalizedTransitionCallback((function(node) {
        var transitionProps = getTransitionProps({
          style,
          timeout
        }, {
          mode: "exit"
        });
        node.style.webkitTransition = theme.transitions.create("opacity", transitionProps), 
        node.style.transition = theme.transitions.create("opacity", transitionProps), onExit && onExit(node);
      })), handleExited = normalizedTransitionCallback(onExited);
      return react.createElement(TransitionComponent, extends_extends({
        appear: !0,
        in: inProp,
        nodeRef: enableStrictModeCompat ? nodeRef : void 0,
        onEnter: handleEnter,
        onEntered: handleEntered,
        onEntering: handleEntering,
        onExit: handleExit,
        onExited: handleExited,
        onExiting: handleExiting,
        timeout
      }, other), (function(state, childProps) {
        return react.cloneElement(children, extends_extends({
          style: extends_extends({
            opacity: 0,
            visibility: "exited" !== state || inProp ? void 0 : "hidden"
          }, Fade_styles[state], style, children.props.style),
          ref: handleRef
        }, childProps));
      }));
    }));
    const Fade_Fade = Fade;
    var Backdrop = react.forwardRef((function(props, ref) {
      var children = props.children, classes = props.classes, className = props.className, _props$invisible = props.invisible, invisible = void 0 !== _props$invisible && _props$invisible, open = props.open, transitionDuration = props.transitionDuration, _props$TransitionComp = props.TransitionComponent, TransitionComponent = void 0 === _props$TransitionComp ? Fade_Fade : _props$TransitionComp, other = objectWithoutProperties_objectWithoutProperties(props, [ "children", "classes", "className", "invisible", "open", "transitionDuration", "TransitionComponent" ]);
      return react.createElement(TransitionComponent, extends_extends({
        in: open,
        timeout: transitionDuration
      }, other), react.createElement("div", {
        className: clsx_m(classes.root, className, invisible && classes.invisible),
        "aria-hidden": !0,
        ref
      }, children));
    }));
    const Backdrop_Backdrop = styles_withStyles({
      root: {
        zIndex: -1,
        position: "fixed",
        display: "flex",
        alignItems: "center",
        justifyContent: "center",
        right: 0,
        bottom: 0,
        top: 0,
        left: 0,
        backgroundColor: "rgba(0, 0, 0, 0.5)",
        WebkitTapHighlightColor: "transparent"
      },
      invisible: {
        backgroundColor: "transparent"
      }
    }, {
      name: "MuiBackdrop"
    })(Backdrop);
    var Paper = react.forwardRef((function(props, ref) {
      var classes = props.classes, className = props.className, _props$component = props.component, Component = void 0 === _props$component ? "div" : _props$component, _props$square = props.square, square = void 0 !== _props$square && _props$square, _props$elevation = props.elevation, elevation = void 0 === _props$elevation ? 1 : _props$elevation, _props$variant = props.variant, variant = void 0 === _props$variant ? "elevation" : _props$variant, other = objectWithoutProperties_objectWithoutProperties(props, [ "classes", "className", "component", "square", "elevation", "variant" ]);
      return react.createElement(Component, extends_extends({
        className: clsx_m(classes.root, className, "outlined" === variant ? classes.outlined : classes["elevation".concat(elevation)], !square && classes.rounded),
        ref
      }, other));
    }));
    const Paper_Paper = styles_withStyles((function(theme) {
      var elevations = {};
      return theme.shadows.forEach((function(shadow, index) {
        elevations["elevation".concat(index)] = {
          boxShadow: shadow
        };
      })), extends_extends({
        root: {
          backgroundColor: theme.palette.background.paper,
          color: theme.palette.text.primary,
          transition: theme.transitions.create("box-shadow")
        },
        rounded: {
          borderRadius: theme.shape.borderRadius
        },
        outlined: {
          border: "1px solid ".concat(theme.palette.divider)
        }
      }, elevations);
    }), {
      name: "MuiPaper"
    })(Paper);
    var defaultTransitionDuration = {
      enter: duration.enteringScreen,
      exit: duration.leavingScreen
    }, Dialog = react.forwardRef((function(props, ref) {
      var BackdropProps = props.BackdropProps, children = props.children, classes = props.classes, className = props.className, _props$disableBackdro = props.disableBackdropClick, disableBackdropClick = void 0 !== _props$disableBackdro && _props$disableBackdro, _props$disableEscapeK = props.disableEscapeKeyDown, disableEscapeKeyDown = void 0 !== _props$disableEscapeK && _props$disableEscapeK, _props$fullScreen = props.fullScreen, fullScreen = void 0 !== _props$fullScreen && _props$fullScreen, _props$fullWidth = props.fullWidth, fullWidth = void 0 !== _props$fullWidth && _props$fullWidth, _props$maxWidth = props.maxWidth, maxWidth = void 0 === _props$maxWidth ? "sm" : _props$maxWidth, onBackdropClick = props.onBackdropClick, onClose = props.onClose, onEnter = props.onEnter, onEntered = props.onEntered, onEntering = props.onEntering, onEscapeKeyDown = props.onEscapeKeyDown, onExit = props.onExit, onExited = props.onExited, onExiting = props.onExiting, open = props.open, _props$PaperComponent = props.PaperComponent, PaperComponent = void 0 === _props$PaperComponent ? Paper_Paper : _props$PaperComponent, _props$PaperProps = props.PaperProps, PaperProps = void 0 === _props$PaperProps ? {} : _props$PaperProps, _props$scroll = props.scroll, scroll = void 0 === _props$scroll ? "paper" : _props$scroll, _props$TransitionComp = props.TransitionComponent, TransitionComponent = void 0 === _props$TransitionComp ? Fade_Fade : _props$TransitionComp, _props$transitionDura = props.transitionDuration, transitionDuration = void 0 === _props$transitionDura ? defaultTransitionDuration : _props$transitionDura, TransitionProps = props.TransitionProps, ariaDescribedby = props["aria-describedby"], ariaLabelledby = props["aria-labelledby"], other = objectWithoutProperties_objectWithoutProperties(props, [ "BackdropProps", "children", "classes", "className", "disableBackdropClick", "disableEscapeKeyDown", "fullScreen", "fullWidth", "maxWidth", "onBackdropClick", "onClose", "onEnter", "onEntered", "onEntering", "onEscapeKeyDown", "onExit", "onExited", "onExiting", "open", "PaperComponent", "PaperProps", "scroll", "TransitionComponent", "transitionDuration", "TransitionProps", "aria-describedby", "aria-labelledby" ]), mouseDownTarget = react.useRef();
      return react.createElement(Modal_Modal, extends_extends({
        className: clsx_m(classes.root, className),
        BackdropComponent: Backdrop_Backdrop,
        BackdropProps: extends_extends({
          transitionDuration
        }, BackdropProps),
        closeAfterTransition: !0
      }, disableBackdropClick ? {
        disableBackdropClick
      } : {}, {
        disableEscapeKeyDown,
        onEscapeKeyDown,
        onClose,
        open,
        ref
      }, other), react.createElement(TransitionComponent, extends_extends({
        appear: !0,
        in: open,
        timeout: transitionDuration,
        onEnter,
        onEntering,
        onEntered,
        onExit,
        onExiting,
        onExited,
        role: "none presentation"
      }, TransitionProps), react.createElement("div", {
        className: clsx_m(classes.container, classes["scroll".concat(capitalize(scroll))]),
        onMouseUp: function(event) {
          event.target === event.currentTarget && event.target === mouseDownTarget.current && (mouseDownTarget.current = null, 
          onBackdropClick && onBackdropClick(event), !disableBackdropClick && onClose && onClose(event, "backdropClick"));
        },
        onMouseDown: function(event) {
          mouseDownTarget.current = event.target;
        }
      }, react.createElement(PaperComponent, extends_extends({
        elevation: 24,
        role: "dialog",
        "aria-describedby": ariaDescribedby,
        "aria-labelledby": ariaLabelledby
      }, PaperProps, {
        className: clsx_m(classes.paper, classes["paperScroll".concat(capitalize(scroll))], classes["paperWidth".concat(capitalize(String(maxWidth)))], PaperProps.className, fullScreen && classes.paperFullScreen, fullWidth && classes.paperFullWidth)
      }), children))));
    }));
    const Dialog_Dialog = styles_withStyles((function(theme) {
      return {
        root: {
          "@media print": {
            position: "absolute !important"
          }
        },
        scrollPaper: {
          display: "flex",
          justifyContent: "center",
          alignItems: "center"
        },
        scrollBody: {
          overflowY: "auto",
          overflowX: "hidden",
          textAlign: "center",
          "&:after": {
            content: '""',
            display: "inline-block",
            verticalAlign: "middle",
            height: "100%",
            width: "0"
          }
        },
        container: {
          height: "100%",
          "@media print": {
            height: "auto"
          },
          outline: 0
        },
        paper: {
          margin: 32,
          position: "relative",
          overflowY: "auto",
          "@media print": {
            overflowY: "visible",
            boxShadow: "none"
          }
        },
        paperScrollPaper: {
          display: "flex",
          flexDirection: "column",
          maxHeight: "calc(100% - 64px)"
        },
        paperScrollBody: {
          display: "inline-block",
          verticalAlign: "middle",
          textAlign: "left"
        },
        paperWidthFalse: {
          maxWidth: "calc(100% - 64px)"
        },
        paperWidthXs: {
          maxWidth: Math.max(theme.breakpoints.values.xs, 444),
          "&$paperScrollBody": defineProperty_defineProperty({}, theme.breakpoints.down(Math.max(theme.breakpoints.values.xs, 444) + 64), {
            maxWidth: "calc(100% - 64px)"
          })
        },
        paperWidthSm: {
          maxWidth: theme.breakpoints.values.sm,
          "&$paperScrollBody": defineProperty_defineProperty({}, theme.breakpoints.down(theme.breakpoints.values.sm + 64), {
            maxWidth: "calc(100% - 64px)"
          })
        },
        paperWidthMd: {
          maxWidth: theme.breakpoints.values.md,
          "&$paperScrollBody": defineProperty_defineProperty({}, theme.breakpoints.down(theme.breakpoints.values.md + 64), {
            maxWidth: "calc(100% - 64px)"
          })
        },
        paperWidthLg: {
          maxWidth: theme.breakpoints.values.lg,
          "&$paperScrollBody": defineProperty_defineProperty({}, theme.breakpoints.down(theme.breakpoints.values.lg + 64), {
            maxWidth: "calc(100% - 64px)"
          })
        },
        paperWidthXl: {
          maxWidth: theme.breakpoints.values.xl,
          "&$paperScrollBody": defineProperty_defineProperty({}, theme.breakpoints.down(theme.breakpoints.values.xl + 64), {
            maxWidth: "calc(100% - 64px)"
          })
        },
        paperFullWidth: {
          width: "calc(100% - 64px)"
        },
        paperFullScreen: {
          margin: 0,
          width: "100%",
          maxWidth: "100%",
          height: "100%",
          maxHeight: "none",
          borderRadius: 0,
          "&$paperScrollBody": {
            margin: 0,
            maxWidth: "100%"
          }
        }
      };
    }), {
      name: "MuiDialog"
    })(Dialog);
    var defaultVariantMapping = {
      h1: "h1",
      h2: "h2",
      h3: "h3",
      h4: "h4",
      h5: "h5",
      h6: "h6",
      subtitle1: "h6",
      subtitle2: "h6",
      body1: "p",
      body2: "p"
    }, Typography = react.forwardRef((function(props, ref) {
      var _props$align = props.align, align = void 0 === _props$align ? "inherit" : _props$align, classes = props.classes, className = props.className, _props$color = props.color, color = void 0 === _props$color ? "initial" : _props$color, component = props.component, _props$display = props.display, display = void 0 === _props$display ? "initial" : _props$display, _props$gutterBottom = props.gutterBottom, gutterBottom = void 0 !== _props$gutterBottom && _props$gutterBottom, _props$noWrap = props.noWrap, noWrap = void 0 !== _props$noWrap && _props$noWrap, _props$paragraph = props.paragraph, paragraph = void 0 !== _props$paragraph && _props$paragraph, _props$variant = props.variant, variant = void 0 === _props$variant ? "body1" : _props$variant, _props$variantMapping = props.variantMapping, variantMapping = void 0 === _props$variantMapping ? defaultVariantMapping : _props$variantMapping, other = objectWithoutProperties_objectWithoutProperties(props, [ "align", "classes", "className", "color", "component", "display", "gutterBottom", "noWrap", "paragraph", "variant", "variantMapping" ]), Component = component || (paragraph ? "p" : variantMapping[variant] || defaultVariantMapping[variant]) || "span";
      return react.createElement(Component, extends_extends({
        className: clsx_m(classes.root, className, "inherit" !== variant && classes[variant], "initial" !== color && classes["color".concat(capitalize(color))], noWrap && classes.noWrap, gutterBottom && classes.gutterBottom, paragraph && classes.paragraph, "inherit" !== align && classes["align".concat(capitalize(align))], "initial" !== display && classes["display".concat(capitalize(display))]),
        ref
      }, other));
    }));
    const Typography_Typography = styles_withStyles((function(theme) {
      return {
        root: {
          margin: 0
        },
        body2: theme.typography.body2,
        body1: theme.typography.body1,
        caption: theme.typography.caption,
        button: theme.typography.button,
        h1: theme.typography.h1,
        h2: theme.typography.h2,
        h3: theme.typography.h3,
        h4: theme.typography.h4,
        h5: theme.typography.h5,
        h6: theme.typography.h6,
        subtitle1: theme.typography.subtitle1,
        subtitle2: theme.typography.subtitle2,
        overline: theme.typography.overline,
        srOnly: {
          position: "absolute",
          height: 1,
          width: 1,
          overflow: "hidden"
        },
        alignLeft: {
          textAlign: "left"
        },
        alignCenter: {
          textAlign: "center"
        },
        alignRight: {
          textAlign: "right"
        },
        alignJustify: {
          textAlign: "justify"
        },
        noWrap: {
          overflow: "hidden",
          textOverflow: "ellipsis",
          whiteSpace: "nowrap"
        },
        gutterBottom: {
          marginBottom: "0.35em"
        },
        paragraph: {
          marginBottom: 16
        },
        colorInherit: {
          color: "inherit"
        },
        colorPrimary: {
          color: theme.palette.primary.main
        },
        colorSecondary: {
          color: theme.palette.secondary.main
        },
        colorTextPrimary: {
          color: theme.palette.text.primary
        },
        colorTextSecondary: {
          color: theme.palette.text.secondary
        },
        colorError: {
          color: theme.palette.error.main
        },
        displayInline: {
          display: "inline"
        },
        displayBlock: {
          display: "block"
        }
      };
    }), {
      name: "MuiTypography"
    })(Typography);
    var DialogTitle = react.forwardRef((function(props, ref) {
      var children = props.children, classes = props.classes, className = props.className, _props$disableTypogra = props.disableTypography, disableTypography = void 0 !== _props$disableTypogra && _props$disableTypogra, other = objectWithoutProperties_objectWithoutProperties(props, [ "children", "classes", "className", "disableTypography" ]);
      return react.createElement("div", extends_extends({
        className: clsx_m(classes.root, className),
        ref
      }, other), disableTypography ? children : react.createElement(Typography_Typography, {
        component: "h2",
        variant: "h6"
      }, children));
    }));
    const DialogTitle_DialogTitle = styles_withStyles({
      root: {
        margin: 0,
        padding: "16px 24px",
        flex: "0 0 auto"
      }
    }, {
      name: "MuiDialogTitle"
    })(DialogTitle);
    var DialogContent = react.forwardRef((function(props, ref) {
      var classes = props.classes, className = props.className, _props$dividers = props.dividers, dividers = void 0 !== _props$dividers && _props$dividers, other = objectWithoutProperties_objectWithoutProperties(props, [ "classes", "className", "dividers" ]);
      return react.createElement("div", extends_extends({
        className: clsx_m(classes.root, className, dividers && classes.dividers),
        ref
      }, other));
    }));
    const DialogContent_DialogContent = styles_withStyles((function(theme) {
      return {
        root: {
          flex: "1 1 auto",
          WebkitOverflowScrolling: "touch",
          overflowY: "auto",
          padding: "8px 24px",
          "&:first-child": {
            paddingTop: 20
          }
        },
        dividers: {
          padding: "16px 24px",
          borderTop: "1px solid ".concat(theme.palette.divider),
          borderBottom: "1px solid ".concat(theme.palette.divider)
        }
      };
    }), {
      name: "MuiDialogContent"
    })(DialogContent);
    var DialogContentText = react.forwardRef((function(props, ref) {
      return react.createElement(Typography_Typography, extends_extends({
        component: "p",
        variant: "body1",
        color: "textSecondary",
        ref
      }, props));
    }));
    const DialogContentText_DialogContentText = styles_withStyles({
      root: {
        marginBottom: 12
      }
    }, {
      name: "MuiDialogContentText"
    })(DialogContentText);
    var DialogActions = react.forwardRef((function(props, ref) {
      var _props$disableSpacing = props.disableSpacing, disableSpacing = void 0 !== _props$disableSpacing && _props$disableSpacing, classes = props.classes, className = props.className, other = objectWithoutProperties_objectWithoutProperties(props, [ "disableSpacing", "classes", "className" ]);
      return react.createElement("div", extends_extends({
        className: clsx_m(classes.root, className, !disableSpacing && classes.spacing),
        ref
      }, other));
    }));
    const DialogActions_DialogActions = styles_withStyles({
      root: {
        display: "flex",
        alignItems: "center",
        padding: 8,
        justifyContent: "flex-end",
        flex: "0 0 auto"
      },
      spacing: {
        "& > :not(:first-child)": {
          marginLeft: 8
        }
      }
    }, {
      name: "MuiDialogActions"
    })(DialogActions);
    var hadKeyboardEvent = !0, hadFocusVisibleRecently = !1, hadFocusVisibleRecentlyTimeout = null, inputTypesWhitelist = {
      text: !0,
      search: !0,
      url: !0,
      tel: !0,
      email: !0,
      password: !0,
      number: !0,
      date: !0,
      month: !0,
      week: !0,
      time: !0,
      datetime: !0,
      "datetime-local": !0
    };
    function handleKeyDown(event) {
      event.metaKey || event.altKey || event.ctrlKey || (hadKeyboardEvent = !0);
    }
    function handlePointerDown() {
      hadKeyboardEvent = !1;
    }
    function handleVisibilityChange() {
      "hidden" === this.visibilityState && hadFocusVisibleRecently && (hadKeyboardEvent = !0);
    }
    function isFocusVisible(event) {
      var node, type, tagName, target = event.target;
      try {
        return target.matches(":focus-visible");
      } catch (error) {}
      return hadKeyboardEvent || (type = (node = target).type, !("INPUT" !== (tagName = node.tagName) || !inputTypesWhitelist[type] || node.readOnly) || "TEXTAREA" === tagName && !node.readOnly || !!node.isContentEditable);
    }
    function handleBlurVisible() {
      hadFocusVisibleRecently = !0, window.clearTimeout(hadFocusVisibleRecentlyTimeout), 
      hadFocusVisibleRecentlyTimeout = window.setTimeout((function() {
        hadFocusVisibleRecently = !1;
      }), 100);
    }
    function useIsFocusVisible() {
      return {
        isFocusVisible,
        onBlurVisible: handleBlurVisible,
        ref: react.useCallback((function(instance) {
          var doc, node = react_dom.findDOMNode(instance);
          null != node && ((doc = node.ownerDocument).addEventListener("keydown", handleKeyDown, !0), 
          doc.addEventListener("mousedown", handlePointerDown, !0), doc.addEventListener("pointerdown", handlePointerDown, !0), 
          doc.addEventListener("touchstart", handlePointerDown, !0), doc.addEventListener("visibilitychange", handleVisibilityChange, !0));
        }), [])
      };
    }
    function getChildMapping(children, mapFn) {
      var result = Object.create(null);
      return children && react.Children.map(children, (function(c) {
        return c;
      })).forEach((function(child) {
        result[child.key] = function(child) {
          return mapFn && (0, react.isValidElement)(child) ? mapFn(child) : child;
        }(child);
      })), result;
    }
    function getProp(child, prop, props) {
      return null != props[prop] ? props[prop] : child.props[prop];
    }
    function getNextChildMapping(nextProps, prevChildMapping, onExited) {
      var nextChildMapping = getChildMapping(nextProps.children), children = function(prev, next) {
        function getValueForKey(key) {
          return key in next ? next[key] : prev[key];
        }
        prev = prev || {}, next = next || {};
        var i, nextKeysPending = Object.create(null), pendingKeys = [];
        for (var prevKey in prev) prevKey in next ? pendingKeys.length && (nextKeysPending[prevKey] = pendingKeys, 
        pendingKeys = []) : pendingKeys.push(prevKey);
        var childMapping = {};
        for (var nextKey in next) {
          if (nextKeysPending[nextKey]) for (i = 0; i < nextKeysPending[nextKey].length; i++) {
            var pendingNextKey = nextKeysPending[nextKey][i];
            childMapping[nextKeysPending[nextKey][i]] = getValueForKey(pendingNextKey);
          }
          childMapping[nextKey] = getValueForKey(nextKey);
        }
        for (i = 0; i < pendingKeys.length; i++) childMapping[pendingKeys[i]] = getValueForKey(pendingKeys[i]);
        return childMapping;
      }(prevChildMapping, nextChildMapping);
      return Object.keys(children).forEach((function(key) {
        var child = children[key];
        if ((0, react.isValidElement)(child)) {
          var hasPrev = key in prevChildMapping, hasNext = key in nextChildMapping, prevChild = prevChildMapping[key], isLeaving = (0, 
          react.isValidElement)(prevChild) && !prevChild.props.in;
          !hasNext || hasPrev && !isLeaving ? hasNext || !hasPrev || isLeaving ? hasNext && hasPrev && (0, 
          react.isValidElement)(prevChild) && (children[key] = (0, react.cloneElement)(child, {
            onExited: onExited.bind(null, child),
            in: prevChild.props.in,
            exit: getProp(child, "exit", nextProps),
            enter: getProp(child, "enter", nextProps)
          })) : children[key] = (0, react.cloneElement)(child, {
            in: !1
          }) : children[key] = (0, react.cloneElement)(child, {
            onExited: onExited.bind(null, child),
            in: !0,
            exit: getProp(child, "exit", nextProps),
            enter: getProp(child, "enter", nextProps)
          });
        }
      })), children;
    }
    var TransitionGroup_values = Object.values || function(obj) {
      return Object.keys(obj).map((function(k) {
        return obj[k];
      }));
    }, TransitionGroup = function(_React$Component) {
      function TransitionGroup(props, context) {
        var _this, handleExited = (_this = _React$Component.call(this, props, context) || this).handleExited.bind(_assertThisInitialized(_this));
        return _this.state = {
          contextValue: {
            isMounting: !0
          },
          handleExited,
          firstRender: !0
        }, _this;
      }
      _inheritsLoose(TransitionGroup, _React$Component);
      var _proto = TransitionGroup.prototype;
      return _proto.componentDidMount = function() {
        this.mounted = !0, this.setState({
          contextValue: {
            isMounting: !1
          }
        });
      }, _proto.componentWillUnmount = function() {
        this.mounted = !1;
      }, TransitionGroup.getDerivedStateFromProps = function(nextProps, _ref) {
        var props, onExited, prevChildMapping = _ref.children, handleExited = _ref.handleExited;
        return {
          children: _ref.firstRender ? (props = nextProps, onExited = handleExited, getChildMapping(props.children, (function(child) {
            return (0, react.cloneElement)(child, {
              onExited: onExited.bind(null, child),
              in: !0,
              appear: getProp(child, "appear", props),
              enter: getProp(child, "enter", props),
              exit: getProp(child, "exit", props)
            });
          }))) : getNextChildMapping(nextProps, prevChildMapping, handleExited),
          firstRender: !1
        };
      }, _proto.handleExited = function(child, node) {
        var currentChildMapping = getChildMapping(this.props.children);
        child.key in currentChildMapping || (child.props.onExited && child.props.onExited(node), 
        this.mounted && this.setState((function(state) {
          var children = extends_extends({}, state.children);
          return delete children[child.key], {
            children
          };
        })));
      }, _proto.render = function() {
        var _this$props = this.props, Component = _this$props.component, childFactory = _this$props.childFactory, props = _objectWithoutPropertiesLoose(_this$props, [ "component", "childFactory" ]), contextValue = this.state.contextValue, children = TransitionGroup_values(this.state.children).map(childFactory);
        return delete props.appear, delete props.enter, delete props.exit, null === Component ? react.createElement(TransitionGroupContext.Provider, {
          value: contextValue
        }, children) : react.createElement(TransitionGroupContext.Provider, {
          value: contextValue
        }, react.createElement(Component, props, children));
      }, TransitionGroup;
    }(react.Component);
    TransitionGroup.propTypes = {}, TransitionGroup.defaultProps = {
      component: "div",
      childFactory: function(child) {
        return child;
      }
    };
    const esm_TransitionGroup = TransitionGroup;
    var Ripple_useEnhancedEffect = "undefined" == typeof window ? react.useEffect : react.useLayoutEffect;
    const ButtonBase_Ripple = function(props) {
      var classes = props.classes, _props$pulsate = props.pulsate, pulsate = void 0 !== _props$pulsate && _props$pulsate, rippleX = props.rippleX, rippleY = props.rippleY, rippleSize = props.rippleSize, inProp = props.in, _props$onExited = props.onExited, onExited = void 0 === _props$onExited ? function() {} : _props$onExited, timeout = props.timeout, _React$useState = react.useState(!1), leaving = _React$useState[0], setLeaving = _React$useState[1], rippleClassName = clsx_m(classes.ripple, classes.rippleVisible, pulsate && classes.ripplePulsate), rippleStyles = {
        width: rippleSize,
        height: rippleSize,
        top: -rippleSize / 2 + rippleY,
        left: -rippleSize / 2 + rippleX
      }, childClassName = clsx_m(classes.child, leaving && classes.childLeaving, pulsate && classes.childPulsate), handleExited = useEventCallback(onExited);
      return Ripple_useEnhancedEffect((function() {
        if (!inProp) {
          setLeaving(!0);
          var timeoutId = setTimeout(handleExited, timeout);
          return function() {
            clearTimeout(timeoutId);
          };
        }
      }), [ handleExited, inProp, timeout ]), react.createElement("span", {
        className: rippleClassName,
        style: rippleStyles
      }, react.createElement("span", {
        className: childClassName
      }));
    };
    var TouchRipple = react.forwardRef((function(props, ref) {
      var _props$center = props.center, centerProp = void 0 !== _props$center && _props$center, classes = props.classes, className = props.className, other = objectWithoutProperties_objectWithoutProperties(props, [ "center", "classes", "className" ]), _React$useState = react.useState([]), ripples = _React$useState[0], setRipples = _React$useState[1], nextKey = react.useRef(0), rippleCallback = react.useRef(null);
      react.useEffect((function() {
        rippleCallback.current && (rippleCallback.current(), rippleCallback.current = null);
      }), [ ripples ]);
      var ignoringMouseDown = react.useRef(!1), startTimer = react.useRef(null), startTimerCommit = react.useRef(null), container = react.useRef(null);
      react.useEffect((function() {
        return function() {
          clearTimeout(startTimer.current);
        };
      }), []);
      var startCommit = react.useCallback((function(params) {
        var pulsate = params.pulsate, rippleX = params.rippleX, rippleY = params.rippleY, rippleSize = params.rippleSize, cb = params.cb;
        setRipples((function(oldRipples) {
          return [].concat(toConsumableArray_toConsumableArray(oldRipples), [ react.createElement(ButtonBase_Ripple, {
            key: nextKey.current,
            classes,
            timeout: 550,
            pulsate,
            rippleX,
            rippleY,
            rippleSize
          }) ]);
        })), nextKey.current += 1, rippleCallback.current = cb;
      }), [ classes ]), start = react.useCallback((function() {
        var event = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {}, options = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {}, cb = arguments.length > 2 ? arguments[2] : void 0, _options$pulsate = options.pulsate, pulsate = void 0 !== _options$pulsate && _options$pulsate, _options$center = options.center, center = void 0 === _options$center ? centerProp || options.pulsate : _options$center, _options$fakeElement = options.fakeElement, fakeElement = void 0 !== _options$fakeElement && _options$fakeElement;
        if ("mousedown" === event.type && ignoringMouseDown.current) ignoringMouseDown.current = !1; else {
          "touchstart" === event.type && (ignoringMouseDown.current = !0);
          var rippleX, rippleY, rippleSize, element = fakeElement ? null : container.current, rect = element ? element.getBoundingClientRect() : {
            width: 0,
            height: 0,
            left: 0,
            top: 0
          };
          if (center || 0 === event.clientX && 0 === event.clientY || !event.clientX && !event.touches) rippleX = Math.round(rect.width / 2), 
          rippleY = Math.round(rect.height / 2); else {
            var _ref = event.touches ? event.touches[0] : event, clientX = _ref.clientX, clientY = _ref.clientY;
            rippleX = Math.round(clientX - rect.left), rippleY = Math.round(clientY - rect.top);
          }
          if (center) (rippleSize = Math.sqrt((2 * Math.pow(rect.width, 2) + Math.pow(rect.height, 2)) / 3)) % 2 == 0 && (rippleSize += 1); else {
            var sizeX = 2 * Math.max(Math.abs((element ? element.clientWidth : 0) - rippleX), rippleX) + 2, sizeY = 2 * Math.max(Math.abs((element ? element.clientHeight : 0) - rippleY), rippleY) + 2;
            rippleSize = Math.sqrt(Math.pow(sizeX, 2) + Math.pow(sizeY, 2));
          }
          event.touches ? null === startTimerCommit.current && (startTimerCommit.current = function() {
            startCommit({
              pulsate,
              rippleX,
              rippleY,
              rippleSize,
              cb
            });
          }, startTimer.current = setTimeout((function() {
            startTimerCommit.current && (startTimerCommit.current(), startTimerCommit.current = null);
          }), 80)) : startCommit({
            pulsate,
            rippleX,
            rippleY,
            rippleSize,
            cb
          });
        }
      }), [ centerProp, startCommit ]), pulsate = react.useCallback((function() {
        start({}, {
          pulsate: !0
        });
      }), [ start ]), stop = react.useCallback((function(event, cb) {
        if (clearTimeout(startTimer.current), "touchend" === event.type && startTimerCommit.current) return event.persist(), 
        startTimerCommit.current(), startTimerCommit.current = null, void (startTimer.current = setTimeout((function() {
          stop(event, cb);
        })));
        startTimerCommit.current = null, setRipples((function(oldRipples) {
          return oldRipples.length > 0 ? oldRipples.slice(1) : oldRipples;
        })), rippleCallback.current = cb;
      }), []);
      return react.useImperativeHandle(ref, (function() {
        return {
          pulsate,
          start,
          stop
        };
      }), [ pulsate, start, stop ]), react.createElement("span", extends_extends({
        className: clsx_m(classes.root, className),
        ref: container
      }, other), react.createElement(esm_TransitionGroup, {
        component: null,
        exit: !0
      }, ripples));
    }));
    const ButtonBase_TouchRipple = styles_withStyles((function(theme) {
      return {
        root: {
          overflow: "hidden",
          pointerEvents: "none",
          position: "absolute",
          zIndex: 0,
          top: 0,
          right: 0,
          bottom: 0,
          left: 0,
          borderRadius: "inherit"
        },
        ripple: {
          opacity: 0,
          position: "absolute"
        },
        rippleVisible: {
          opacity: .3,
          transform: "scale(1)",
          animation: "$enter ".concat(550, "ms ").concat(theme.transitions.easing.easeInOut)
        },
        ripplePulsate: {
          animationDuration: "".concat(theme.transitions.duration.shorter, "ms")
        },
        child: {
          opacity: 1,
          display: "block",
          width: "100%",
          height: "100%",
          borderRadius: "50%",
          backgroundColor: "currentColor"
        },
        childLeaving: {
          opacity: 0,
          animation: "$exit ".concat(550, "ms ").concat(theme.transitions.easing.easeInOut)
        },
        childPulsate: {
          position: "absolute",
          left: 0,
          top: 0,
          animation: "$pulsate 2500ms ".concat(theme.transitions.easing.easeInOut, " 200ms infinite")
        },
        "@keyframes enter": {
          "0%": {
            transform: "scale(0)",
            opacity: .1
          },
          "100%": {
            transform: "scale(1)",
            opacity: .3
          }
        },
        "@keyframes exit": {
          "0%": {
            opacity: 1
          },
          "100%": {
            opacity: 0
          }
        },
        "@keyframes pulsate": {
          "0%": {
            transform: "scale(1)"
          },
          "50%": {
            transform: "scale(0.92)"
          },
          "100%": {
            transform: "scale(1)"
          }
        }
      };
    }), {
      flip: !1,
      name: "MuiTouchRipple"
    })(react.memo(TouchRipple));
    var ButtonBase = react.forwardRef((function(props, ref) {
      var action = props.action, buttonRefProp = props.buttonRef, _props$centerRipple = props.centerRipple, centerRipple = void 0 !== _props$centerRipple && _props$centerRipple, children = props.children, classes = props.classes, className = props.className, _props$component = props.component, component = void 0 === _props$component ? "button" : _props$component, _props$disabled = props.disabled, disabled = void 0 !== _props$disabled && _props$disabled, _props$disableRipple = props.disableRipple, disableRipple = void 0 !== _props$disableRipple && _props$disableRipple, _props$disableTouchRi = props.disableTouchRipple, disableTouchRipple = void 0 !== _props$disableTouchRi && _props$disableTouchRi, _props$focusRipple = props.focusRipple, focusRipple = void 0 !== _props$focusRipple && _props$focusRipple, focusVisibleClassName = props.focusVisibleClassName, onBlur = props.onBlur, onClick = props.onClick, onFocus = props.onFocus, onFocusVisible = props.onFocusVisible, onKeyDown = props.onKeyDown, onKeyUp = props.onKeyUp, onMouseDown = props.onMouseDown, onMouseLeave = props.onMouseLeave, onMouseUp = props.onMouseUp, onTouchEnd = props.onTouchEnd, onTouchMove = props.onTouchMove, onTouchStart = props.onTouchStart, onDragLeave = props.onDragLeave, _props$tabIndex = props.tabIndex, tabIndex = void 0 === _props$tabIndex ? 0 : _props$tabIndex, TouchRippleProps = props.TouchRippleProps, _props$type = props.type, type = void 0 === _props$type ? "button" : _props$type, other = objectWithoutProperties_objectWithoutProperties(props, [ "action", "buttonRef", "centerRipple", "children", "classes", "className", "component", "disabled", "disableRipple", "disableTouchRipple", "focusRipple", "focusVisibleClassName", "onBlur", "onClick", "onFocus", "onFocusVisible", "onKeyDown", "onKeyUp", "onMouseDown", "onMouseLeave", "onMouseUp", "onTouchEnd", "onTouchMove", "onTouchStart", "onDragLeave", "tabIndex", "TouchRippleProps", "type" ]), buttonRef = react.useRef(null);
      var rippleRef = react.useRef(null), _React$useState = react.useState(!1), focusVisible = _React$useState[0], setFocusVisible = _React$useState[1];
      disabled && focusVisible && setFocusVisible(!1);
      var _useIsFocusVisible = useIsFocusVisible(), isFocusVisible = _useIsFocusVisible.isFocusVisible, onBlurVisible = _useIsFocusVisible.onBlurVisible, focusVisibleRef = _useIsFocusVisible.ref;
      function useRippleHandler(rippleAction, eventCallback) {
        var skipRippleAction = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : disableTouchRipple;
        return useEventCallback((function(event) {
          return eventCallback && eventCallback(event), !skipRippleAction && rippleRef.current && rippleRef.current[rippleAction](event), 
          !0;
        }));
      }
      react.useImperativeHandle(action, (function() {
        return {
          focusVisible: function() {
            setFocusVisible(!0), buttonRef.current.focus();
          }
        };
      }), []), react.useEffect((function() {
        focusVisible && focusRipple && !disableRipple && rippleRef.current.pulsate();
      }), [ disableRipple, focusRipple, focusVisible ]);
      var handleMouseDown = useRippleHandler("start", onMouseDown), handleDragLeave = useRippleHandler("stop", onDragLeave), handleMouseUp = useRippleHandler("stop", onMouseUp), handleMouseLeave = useRippleHandler("stop", (function(event) {
        focusVisible && event.preventDefault(), onMouseLeave && onMouseLeave(event);
      })), handleTouchStart = useRippleHandler("start", onTouchStart), handleTouchEnd = useRippleHandler("stop", onTouchEnd), handleTouchMove = useRippleHandler("stop", onTouchMove), handleBlur = useRippleHandler("stop", (function(event) {
        focusVisible && (onBlurVisible(event), setFocusVisible(!1)), onBlur && onBlur(event);
      }), !1), handleFocus = useEventCallback((function(event) {
        buttonRef.current || (buttonRef.current = event.currentTarget), isFocusVisible(event) && (setFocusVisible(!0), 
        onFocusVisible && onFocusVisible(event)), onFocus && onFocus(event);
      })), isNonNativeButton = function() {
        var button = react_dom.findDOMNode(buttonRef.current);
        return component && "button" !== component && !("A" === button.tagName && button.href);
      }, keydownRef = react.useRef(!1), handleKeyDown = useEventCallback((function(event) {
        focusRipple && !keydownRef.current && focusVisible && rippleRef.current && " " === event.key && (keydownRef.current = !0, 
        event.persist(), rippleRef.current.stop(event, (function() {
          rippleRef.current.start(event);
        }))), event.target === event.currentTarget && isNonNativeButton() && " " === event.key && event.preventDefault(), 
        onKeyDown && onKeyDown(event), event.target === event.currentTarget && isNonNativeButton() && "Enter" === event.key && !disabled && (event.preventDefault(), 
        onClick && onClick(event));
      })), handleKeyUp = useEventCallback((function(event) {
        focusRipple && " " === event.key && rippleRef.current && focusVisible && !event.defaultPrevented && (keydownRef.current = !1, 
        event.persist(), rippleRef.current.stop(event, (function() {
          rippleRef.current.pulsate(event);
        }))), onKeyUp && onKeyUp(event), onClick && event.target === event.currentTarget && isNonNativeButton() && " " === event.key && !event.defaultPrevented && onClick(event);
      })), ComponentProp = component;
      "button" === ComponentProp && other.href && (ComponentProp = "a");
      var buttonProps = {};
      "button" === ComponentProp ? (buttonProps.type = type, buttonProps.disabled = disabled) : ("a" === ComponentProp && other.href || (buttonProps.role = "button"), 
      buttonProps["aria-disabled"] = disabled);
      var handleUserRef = useForkRef(buttonRefProp, ref), handleOwnRef = useForkRef(focusVisibleRef, buttonRef), handleRef = useForkRef(handleUserRef, handleOwnRef), _React$useState2 = react.useState(!1), mountedState = _React$useState2[0], setMountedState = _React$useState2[1];
      react.useEffect((function() {
        setMountedState(!0);
      }), []);
      var enableTouchRipple = mountedState && !disableRipple && !disabled;
      return react.createElement(ComponentProp, extends_extends({
        className: clsx_m(classes.root, className, focusVisible && [ classes.focusVisible, focusVisibleClassName ], disabled && classes.disabled),
        onBlur: handleBlur,
        onClick,
        onFocus: handleFocus,
        onKeyDown: handleKeyDown,
        onKeyUp: handleKeyUp,
        onMouseDown: handleMouseDown,
        onMouseLeave: handleMouseLeave,
        onMouseUp: handleMouseUp,
        onDragLeave: handleDragLeave,
        onTouchEnd: handleTouchEnd,
        onTouchMove: handleTouchMove,
        onTouchStart: handleTouchStart,
        ref: handleRef,
        tabIndex: disabled ? -1 : tabIndex
      }, buttonProps, other), children, enableTouchRipple ? react.createElement(ButtonBase_TouchRipple, extends_extends({
        ref: rippleRef,
        center: centerRipple
      }, TouchRippleProps)) : null);
    }));
    const ButtonBase_ButtonBase = styles_withStyles({
      root: {
        display: "inline-flex",
        alignItems: "center",
        justifyContent: "center",
        position: "relative",
        WebkitTapHighlightColor: "transparent",
        backgroundColor: "transparent",
        outline: 0,
        border: 0,
        margin: 0,
        borderRadius: 0,
        padding: 0,
        cursor: "pointer",
        userSelect: "none",
        verticalAlign: "middle",
        "-moz-appearance": "none",
        "-webkit-appearance": "none",
        textDecoration: "none",
        color: "inherit",
        "&::-moz-focus-inner": {
          borderStyle: "none"
        },
        "&$disabled": {
          pointerEvents: "none",
          cursor: "default"
        },
        "@media print": {
          colorAdjust: "exact"
        }
      },
      disabled: {},
      focusVisible: {}
    }, {
      name: "MuiButtonBase"
    })(ButtonBase);
    var Button = react.forwardRef((function(props, ref) {
      var children = props.children, classes = props.classes, className = props.className, _props$color = props.color, color = void 0 === _props$color ? "default" : _props$color, _props$component = props.component, component = void 0 === _props$component ? "button" : _props$component, _props$disabled = props.disabled, disabled = void 0 !== _props$disabled && _props$disabled, _props$disableElevati = props.disableElevation, disableElevation = void 0 !== _props$disableElevati && _props$disableElevati, _props$disableFocusRi = props.disableFocusRipple, disableFocusRipple = void 0 !== _props$disableFocusRi && _props$disableFocusRi, endIconProp = props.endIcon, focusVisibleClassName = props.focusVisibleClassName, _props$fullWidth = props.fullWidth, fullWidth = void 0 !== _props$fullWidth && _props$fullWidth, _props$size = props.size, size = void 0 === _props$size ? "medium" : _props$size, startIconProp = props.startIcon, _props$type = props.type, type = void 0 === _props$type ? "button" : _props$type, _props$variant = props.variant, variant = void 0 === _props$variant ? "text" : _props$variant, other = objectWithoutProperties_objectWithoutProperties(props, [ "children", "classes", "className", "color", "component", "disabled", "disableElevation", "disableFocusRipple", "endIcon", "focusVisibleClassName", "fullWidth", "size", "startIcon", "type", "variant" ]), startIcon = startIconProp && react.createElement("span", {
        className: clsx_m(classes.startIcon, classes["iconSize".concat(capitalize(size))])
      }, startIconProp), endIcon = endIconProp && react.createElement("span", {
        className: clsx_m(classes.endIcon, classes["iconSize".concat(capitalize(size))])
      }, endIconProp);
      return react.createElement(ButtonBase_ButtonBase, extends_extends({
        className: clsx_m(classes.root, classes[variant], className, "inherit" === color ? classes.colorInherit : "default" !== color && classes["".concat(variant).concat(capitalize(color))], "medium" !== size && [ classes["".concat(variant, "Size").concat(capitalize(size))], classes["size".concat(capitalize(size))] ], disableElevation && classes.disableElevation, disabled && classes.disabled, fullWidth && classes.fullWidth),
        component,
        disabled,
        focusRipple: !disableFocusRipple,
        focusVisibleClassName: clsx_m(classes.focusVisible, focusVisibleClassName),
        ref,
        type
      }, other), react.createElement("span", {
        className: classes.label
      }, startIcon, children, endIcon));
    }));
    const Button_Button = styles_withStyles((function(theme) {
      return {
        root: extends_extends({}, theme.typography.button, {
          boxSizing: "border-box",
          minWidth: 64,
          padding: "6px 16px",
          borderRadius: theme.shape.borderRadius,
          color: theme.palette.text.primary,
          transition: theme.transitions.create([ "background-color", "box-shadow", "border" ], {
            duration: theme.transitions.duration.short
          }),
          "&:hover": {
            textDecoration: "none",
            backgroundColor: alpha(theme.palette.text.primary, theme.palette.action.hoverOpacity),
            "@media (hover: none)": {
              backgroundColor: "transparent"
            },
            "&$disabled": {
              backgroundColor: "transparent"
            }
          },
          "&$disabled": {
            color: theme.palette.action.disabled
          }
        }),
        label: {
          width: "100%",
          display: "inherit",
          alignItems: "inherit",
          justifyContent: "inherit"
        },
        text: {
          padding: "6px 8px"
        },
        textPrimary: {
          color: theme.palette.primary.main,
          "&:hover": {
            backgroundColor: alpha(theme.palette.primary.main, theme.palette.action.hoverOpacity),
            "@media (hover: none)": {
              backgroundColor: "transparent"
            }
          }
        },
        textSecondary: {
          color: theme.palette.secondary.main,
          "&:hover": {
            backgroundColor: alpha(theme.palette.secondary.main, theme.palette.action.hoverOpacity),
            "@media (hover: none)": {
              backgroundColor: "transparent"
            }
          }
        },
        outlined: {
          padding: "5px 15px",
          border: "1px solid ".concat("light" === theme.palette.type ? "rgba(0, 0, 0, 0.23)" : "rgba(255, 255, 255, 0.23)"),
          "&$disabled": {
            border: "1px solid ".concat(theme.palette.action.disabledBackground)
          }
        },
        outlinedPrimary: {
          color: theme.palette.primary.main,
          border: "1px solid ".concat(alpha(theme.palette.primary.main, .5)),
          "&:hover": {
            border: "1px solid ".concat(theme.palette.primary.main),
            backgroundColor: alpha(theme.palette.primary.main, theme.palette.action.hoverOpacity),
            "@media (hover: none)": {
              backgroundColor: "transparent"
            }
          }
        },
        outlinedSecondary: {
          color: theme.palette.secondary.main,
          border: "1px solid ".concat(alpha(theme.palette.secondary.main, .5)),
          "&:hover": {
            border: "1px solid ".concat(theme.palette.secondary.main),
            backgroundColor: alpha(theme.palette.secondary.main, theme.palette.action.hoverOpacity),
            "@media (hover: none)": {
              backgroundColor: "transparent"
            }
          },
          "&$disabled": {
            border: "1px solid ".concat(theme.palette.action.disabled)
          }
        },
        contained: {
          color: theme.palette.getContrastText(theme.palette.grey[300]),
          backgroundColor: theme.palette.grey[300],
          boxShadow: theme.shadows[2],
          "&:hover": {
            backgroundColor: theme.palette.grey.A100,
            boxShadow: theme.shadows[4],
            "@media (hover: none)": {
              boxShadow: theme.shadows[2],
              backgroundColor: theme.palette.grey[300]
            },
            "&$disabled": {
              backgroundColor: theme.palette.action.disabledBackground
            }
          },
          "&$focusVisible": {
            boxShadow: theme.shadows[6]
          },
          "&:active": {
            boxShadow: theme.shadows[8]
          },
          "&$disabled": {
            color: theme.palette.action.disabled,
            boxShadow: theme.shadows[0],
            backgroundColor: theme.palette.action.disabledBackground
          }
        },
        containedPrimary: {
          color: theme.palette.primary.contrastText,
          backgroundColor: theme.palette.primary.main,
          "&:hover": {
            backgroundColor: theme.palette.primary.dark,
            "@media (hover: none)": {
              backgroundColor: theme.palette.primary.main
            }
          }
        },
        containedSecondary: {
          color: theme.palette.secondary.contrastText,
          backgroundColor: theme.palette.secondary.main,
          "&:hover": {
            backgroundColor: theme.palette.secondary.dark,
            "@media (hover: none)": {
              backgroundColor: theme.palette.secondary.main
            }
          }
        },
        disableElevation: {
          boxShadow: "none",
          "&:hover": {
            boxShadow: "none"
          },
          "&$focusVisible": {
            boxShadow: "none"
          },
          "&:active": {
            boxShadow: "none"
          },
          "&$disabled": {
            boxShadow: "none"
          }
        },
        focusVisible: {},
        disabled: {},
        colorInherit: {
          color: "inherit",
          borderColor: "currentColor"
        },
        textSizeSmall: {
          padding: "4px 5px",
          fontSize: theme.typography.pxToRem(13)
        },
        textSizeLarge: {
          padding: "8px 11px",
          fontSize: theme.typography.pxToRem(15)
        },
        outlinedSizeSmall: {
          padding: "3px 9px",
          fontSize: theme.typography.pxToRem(13)
        },
        outlinedSizeLarge: {
          padding: "7px 21px",
          fontSize: theme.typography.pxToRem(15)
        },
        containedSizeSmall: {
          padding: "4px 10px",
          fontSize: theme.typography.pxToRem(13)
        },
        containedSizeLarge: {
          padding: "8px 22px",
          fontSize: theme.typography.pxToRem(15)
        },
        sizeSmall: {},
        sizeLarge: {},
        fullWidth: {
          width: "100%"
        },
        startIcon: {
          display: "inherit",
          marginRight: 8,
          marginLeft: -4,
          "&$iconSizeSmall": {
            marginLeft: -2
          }
        },
        endIcon: {
          display: "inherit",
          marginRight: -4,
          marginLeft: 8,
          "&$iconSizeSmall": {
            marginRight: -2
          }
        },
        iconSizeSmall: {
          "& > *:first-child": {
            fontSize: 18
          }
        },
        iconSizeMedium: {
          "& > *:first-child": {
            fontSize: 20
          }
        },
        iconSizeLarge: {
          "& > *:first-child": {
            fontSize: 22
          }
        }
      };
    }), {
      name: "MuiButton"
    })(Button);
    var _Convert404ToInvite_data;
    function RedirectDialog(props) {
      const [isOpen, setIsOpen] = (0, react.useState)(!0);
      let message, uri;
      switch (props.type) {
       default:
       case "NONE":
        message = react.createElement(react.Fragment, null, "This repo exists and is managed by Meta, but you do not have permissions to view it yet. Would you like to be redirected to the internal page where you can add yourself?"), 
        uri = props.contributorUrl;
        break;

       case "COLLABORATOR":
       case "EXTERNAL_COLLABORATOR":
       case "ADMIN":
        message = react.createElement(react.Fragment, null, "This repo exists and is managed by Meta, but you have not accepted our invite to join the organization yet. Would you like to be redirected to the organization page where you can accept?"), 
        uri = `https://github.com/${props.repoOwner}`;
      }
      return react.createElement(Dialog_Dialog, {
        open: isOpen,
        onClose: () => setIsOpen(!1)
      }, react.createElement(DialogTitle_DialogTitle, null, "[fb-only] Redirect to invite page?"), react.createElement(DialogContent_DialogContent, null, react.createElement(DialogContentText_DialogContentText, null, message)), react.createElement(DialogActions_DialogActions, null, react.createElement(Button_Button, {
        onClick: () => setIsOpen(!1)
      }, "No"), react.createElement(Button_Button, {
        onClick: () => {
          document.location.href = uri, setIsOpen(!1);
        },
        color: "primary",
        autoFocus: !0
      }, "Yes")));
    }
    const Convert404ToInvite_handle = (url, dataKey) => {
      var _data$repo, _data$repo$contributo, _data$repo$owner;
      const data = (0, react_relay.readInlineData)((void 0 !== _Convert404ToInvite_data || (_Convert404ToInvite_data = __webpack_require__(9624)).hash && "cdebde07662944b4b24b0aa378212f99" !== _Convert404ToInvite_data.hash && console.error("The definition of 'Convert404ToInvite_data' appears to have changed. Run `relay-compiler` to update the generated files to receive the expected data."), 
      _Convert404ToInvite_data), dataKey);
      if (!url.match(/github\.com\/[\w\d._-]+\/[\w\d._-]+\/?$/)) return;
      const notFoundElement = document.querySelector("input#not-found-search");
      null != (null == data || null === (_data$repo = data.repo) || void 0 === _data$repo ? void 0 : _data$repo.viewerExpectedAccessType) && null != notFoundElement && DOMEnhancer_append({
        jsClass: "Convert404ToInvite",
        url,
        selector: "main",
        component: react.createElement(RedirectDialog, {
          type: data.repo.viewerExpectedAccessType,
          contributorUrl: null !== (_data$repo$contributo = data.repo.contributorUrl) && void 0 !== _data$repo$contributo ? _data$repo$contributo : "#",
          repoOwner: null !== (_data$repo$owner = data.repo.owner) && void 0 !== _data$repo$owner ? _data$repo$owner : "#"
        }),
        dedupeKey: "inject-content"
      });
    };
    var _CodeSyncFile_data;
    const CodeSyncFile_handle = (url, dataKey) => {
      var _data$file;
      const data = (0, react_relay.readInlineData)((void 0 !== _CodeSyncFile_data || (_CodeSyncFile_data = __webpack_require__(6519)).hash && "85c303cf29fb719825b05ef6e3daf967" !== _CodeSyncFile_data.hash && console.error("The definition of 'CodeSyncFile_data' appears to have changed. Run `relay-compiler` to update the generated files to receive the expected data."), 
      _CodeSyncFile_data), dataKey), internalUri = null == data || null === (_data$file = data.file) || void 0 === _data$file ? void 0 : _data$file.internalUri;
      if (null == internalUri) return;
      const htmlWrapper = document.createElement("h2");
      htmlWrapper.className = "breadcrumb mx-2", DOMEnhancer_append({
        jsClass: "CodeSyncFile",
        component: react.createElement("a", {
          href: internalUri,
          className: "btn",
          target: "_blank",
          rel: "noreferrer"
        }, react.createElement("svg", {
          className: [ "octicon", "UnderlineNav-octicon" ].join(" "),
          viewBox: "0 0 58 58",
          height: "16",
          width: "16"
        }, react.createElement("path", {
          d: META_LOGO_PATH
        })), " ", react.createElement("span", null, "View in CodeHub")),
        htmlWrapper,
        dedupeKey: "codesync-file",
        selector: "#repo-content-turbo-frame div div.d-flex",
        url
      });
    };
    var _DiffTrainCommit_commit;
    function DiffTrainCommit(props) {
      var _diffTrainDiff$tags, _diffTrainDiff$isClos, _diffTrainDiff$status;
      const commit = (0, react_relay.useFragment)((void 0 !== _DiffTrainCommit_commit || (_DiffTrainCommit_commit = __webpack_require__(4762)).hash && "deeea894ea2865d44f4b8cb5edffde07" !== _DiffTrainCommit_commit.hash && console.error("The definition of 'DiffTrainCommit_commit' appears to have changed. Run `relay-compiler` to update the generated files to receive the expected data."), 
      _DiffTrainCommit_commit), props.commit), {diffTrainDiff, diffTrainSkips} = null != commit ? commit : {}, diffTrainSkip = null == diffTrainSkips ? void 0 : diffTrainSkips.nodes[0], isOnDiffTrain = null != (null == diffTrainDiff || null === (_diffTrainDiff$tags = diffTrainDiff.tags) || void 0 === _diffTrainDiff$tags ? void 0 : _diffTrainDiff$tags.nodes.find((tag => "1762787307393096" === tag.id))), isClosed = null !== (_diffTrainDiff$isClos = null == diffTrainDiff ? void 0 : diffTrainDiff.isClosed) && void 0 !== _diffTrainDiff$isClos && _diffTrainDiff$isClos, status = null !== (_diffTrainDiff$status = null == diffTrainDiff ? void 0 : diffTrainDiff.status) && void 0 !== _diffTrainDiff$status ? _diffTrainDiff$status : "NEEDS_REVIEW", diffLink = diffTrainDiff && react.createElement("a", {
        href: diffTrainDiff.uri,
        target: "_blank",
        rel: "noreferrer"
      }, diffTrainDiff.numberWithPrefix);
      let content = null;
      if (null != diffTrainSkip) {
        let maybeDiffLink = react.createElement(react.Fragment, null, "It will never be imported.");
        null != diffTrainDiff && (maybeDiffLink = react.createElement(react.Fragment, null, "It was imported as ", diffLink, " before being skipped, it will never be landed.")), 
        content = react.createElement(react.Fragment, null, "This commit was skipped in the Diff Train for the following reason:", " ", diffTrainSkip.explanation, ". ", maybeDiffLink);
      } else content = "REVERTED" === status ? react.createElement(react.Fragment, null, "This commit was landed as ", diffLink, ", ", react.createElement("b", null, "and then reverted!"), ".") : "ABANDONED" === status ? react.createElement(react.Fragment, null, "This commit is linked to ", diffLink, ", which was abandoned.") : isClosed ? isOnDiffTrain ? react.createElement(react.Fragment, null, "This commit was imported and landed as ", diffLink, ".") : react.createElement(react.Fragment, null, "This commit was landed on GitHub and via Phabricator (", diffLink, ") simultaneously via co-development.") : isOnDiffTrain ? react.createElement(react.Fragment, null, "This commit has been imported as ", diffLink, ".") : null != diffTrainDiff ? react.createElement(react.Fragment, null, "This commit is ", react.createElement("b", null, "NOT"), " on the Diff Train yet. It will be added to the Diff Train the next time it is run. It exists in Phabricator as", " ", diffLink, ".") : react.createElement(react.Fragment, null, "This commit is ", react.createElement("b", null, "NOT"), " in Phabricator. It will be added to the Diff Train the next time it is run and will be landed automatically.");
      return react.createElement("div", {
        className: "flash"
      }, react.createElement("b", null, "Diff Train Commit Status:"), " ", content);
    }
    var _DiffTrainCommit_data;
    const features_DiffTrainCommit_handle = (url, dataKey) => {
      var _data$repo$isDiffTrai, _data$repo;
      const data = (0, react_relay.readInlineData)((void 0 !== _DiffTrainCommit_data || (_DiffTrainCommit_data = __webpack_require__(5456)).hash && "25170a5230caec6098a1103d77b52a75" !== _DiffTrainCommit_data.hash && console.error("The definition of 'DiffTrainCommit_data' appears to have changed. Run `relay-compiler` to update the generated files to receive the expected data."), 
      _DiffTrainCommit_data), dataKey), commit = null == data ? void 0 : data.commit, isDiffTrainSetup = null !== (_data$repo$isDiffTrai = null == data || null === (_data$repo = data.repo) || void 0 === _data$repo ? void 0 : _data$repo.isDiffTrainSetup) && void 0 !== _data$repo$isDiffTrai && _data$repo$isDiffTrai;
      if (null == commit || !isDiffTrainSetup) return;
      const wrapper = document.createElement("div");
      wrapper.className = "pb-3", DOMEnhancer_append({
        jsClass: "NavHeader",
        url,
        selector: "#repo-content-pjax-container div.container-xl",
        dedupeKey: "commit-on-diff-train",
        htmlWrapper: wrapper,
        insertBefore: document.getElementById("spoof-warning"),
        component: react.createElement(DiffTrainCommit, {
          commit
        })
      });
    };
    var _DiffTrainPullRequest_data;
    const DiffTrainPullRequest_handle = (url, dataKey) => {
      var _data$pr, _data$pr$relevantCode, _data$pr2;
      const data = (0, react_relay.readInlineData)((void 0 !== _DiffTrainPullRequest_data || (_DiffTrainPullRequest_data = __webpack_require__(2415)).hash && "037be675eb548471ca1575baa66b1bb8" !== _DiffTrainPullRequest_data.hash && console.error("The definition of 'DiffTrainPullRequest_data' appears to have changed. Run `relay-compiler` to update the generated files to receive the expected data."), 
      _DiffTrainPullRequest_data), dataKey), commit = null == data || null === (_data$pr = data.pr) || void 0 === _data$pr ? void 0 : _data$pr.closedByCommit, isDiffTrainSetup = null !== (_data$pr$relevantCode = null == data || null === (_data$pr2 = data.pr) || void 0 === _data$pr2 || null === (_data$pr2 = _data$pr2.relevantCodesyncConfig) || void 0 === _data$pr2 ? void 0 : _data$pr2.isDiffTrainSetup) && void 0 !== _data$pr$relevantCode && _data$pr$relevantCode;
      if (null == commit || !isDiffTrainSetup) return;
      const wrapper = document.createElement("div");
      wrapper.className = "pb-3", DOMEnhancer_append({
        jsClass: "NavHeader",
        url,
        selector: "#repo-content-pjax-container div.container-xl .js-issues-results",
        dedupeKey: "pull-request-on-diff-train",
        htmlWrapper: wrapper,
        insertBefore: document.getElementById("discussion_bucket"),
        component: react.createElement(DiffTrainCommit, {
          commit
        })
      });
    };
    var _FaceHubPageQuery;
    const pageQuery = (void 0 !== _FaceHubPageQuery || (_FaceHubPageQuery = __webpack_require__(2282)).hash && "077419c67ce213fb84117be56c9b04ee" !== _FaceHubPageQuery.hash && console.error("The definition of 'FaceHubPageQuery' appears to have changed. Run `relay-compiler` to update the generated files to receive the expected data."), 
    _FaceHubPageQuery);
    function getBrowserNameAndVersion() {
      const userAgent = navigator.userAgent, chrome = userAgent.match(/Chrom(e|ium)\/([0-9.]+) /);
      return chrome ? chrome[0] : userAgent;
    }
    class FaceHub {
      static initializeAsBackgroundScript() {
        try {
          BrowserLogger.context = "Background", ExtensionMessages.initializeAsBackgroundScript();
          const baseURL = "https://www.internalfb.com/butterfly/form/2997519077160872?default_responses=";
          chrome.action.onClicked.addListener((function(tab) {
            chrome.tabs.create({
              url: baseURL + encodeURIComponent(JSON.stringify({
                url: tab.url,
                browser: getBrowserNameAndVersion(),
                version: chrome.runtime.getManifest().version
              }))
            });
          }));
        } catch (error) {
          FalcoLogger.logError("FaceHub", "core", "background_script", null, error);
        }
      }
      static handleTransition(url) {
        let a = document.createElement("a");
        a.href = url, "github.com" == a.hostname ? (DOMEnhancer_clearWatches(), SetPageHandlerVisibilityMessageHandler.send(!0), 
        FalcoLogger.logPageView(url), (0, relay_runtime.fetchQuery)(RelayEnvironment, pageQuery, {
          uri: url
        }).toPromise().then((data => {
          if (null != data) try {
            NavHeader_handle(url, data.payload), features_PullRequestQuickAccept_handle(url, data.payload), 
            features_PullRequestActions_handle(url, data.payload), ContextMenus_handle(data.payload), 
            Convert404ToInvite_handle(url, data.payload), CodeSyncFile_handle(url, data.payload), 
            features_DiffTrainCommit_handle(url, data.payload), DiffTrainPullRequest_handle(url, data.payload);
          } catch (error) {
            FalcoLogger.logError("FaceHub", "core", "content_script", url, error);
          }
        }))) : SetPageHandlerVisibilityMessageHandler.send(!1);
      }
    }
    function init() {
      FaceHub.handleTransition(window.location.href);
    }
    document.addEventListener("pjax:end", init), document.addEventListener("turbo:frame-load", init), 
    document.addEventListener("turbo:render", init), document.addEventListener("DOMContentLoaded", init);
  })();
})();